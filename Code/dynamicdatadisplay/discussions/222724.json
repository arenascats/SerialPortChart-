[
  {
    "Id": "477373",
    "ThreadId": "222724",
    "Html": "<p>I have a question conc. correct usage of method ChartPlotter.CreateScreenshot() of library DynamicDataDisplay<br> ========================================================================<br> <br> I need a screenhot of my chart, which is stored to a bitmap in order to integrate the retrieved picture into a document.<br> The whole procedure should be executed via batch job.<br> <br> I tried the following source code (see below), the chart will be displayed and works fine,<br> but when I try to execute 'tryChart.CreateScreenshot()' in order to save the results I will get the following exception :<br> &nbsp;&nbsp;&nbsp; System.ArgumentOutOfRangeException&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; the param value must not be NULL.<br> &nbsp;&nbsp;&nbsp; current value&nbsp; of 'pixelWidth'&nbsp;  &nbsp;&nbsp;  &nbsp;&nbsp;  &nbsp;&nbsp;  &nbsp;&nbsp;  &nbsp;&nbsp;  &nbsp;&nbsp;  &nbsp;&nbsp; = null<br> <br> Without this statement the window will be displayed and contains the chart, how can pixelWidth be null in this case ?<br> What should be added here ?<br> <br> When I substitute the main part of the source code by XAML-statements I have the same success and also the same problem.<br> <br> Without the statement 'tryChart.CreateScreenshot()' everything works fine.<br> Finally I get the same error when the statement 'tryChart.CreateScreenshot()' will be executed within BuildGraph().<br> <br> <br> <strong>.. my environment</strong><br> -----------------------------------------------------<br> &nbsp;&nbsp;&nbsp; C#<br> &nbsp;&nbsp;&nbsp; Visual Studio 2010<br> &nbsp;&nbsp;&nbsp; .NET 4.0<br> <br> DynamicDataDisplay.dll<br> &nbsp;&nbsp;&nbsp; run time version&nbsp;&nbsp;&nbsp;&nbsp; v2.0.50727<br> &nbsp;&nbsp;&nbsp; version&nbsp;&nbsp;  &nbsp;&nbsp;  &nbsp;&nbsp;  &nbsp;&nbsp;  &nbsp;&nbsp;  &nbsp;&nbsp;  0.3.0.0<br> &nbsp;&nbsp;&nbsp; date&nbsp;&nbsp;  &nbsp;&nbsp;  &nbsp;&nbsp;  &nbsp;&nbsp;  &nbsp;&nbsp;  &nbsp;&nbsp;  &nbsp;&nbsp;&nbsp;  2009-apr-27<br> <br> <br> <strong>.. and now my source code :<br> </strong>-----------------------------------------------------<br> <em>using System;</em><br><em> using System.Windows;</em><br><em> using System.Windows.Controls;</em><br><em> using System.Windows.Media;</em><br><em> using System.Windows.Media.Imaging;</em><br> <br><em> using System.IO;</em><br> <br><em> //&nbsp; needed for DDD-feature, functionality encapsulated in 'DynamicDataDisplay.dll'</em><br><em> using Microsoft.Research.DynamicDataDisplay;</em><br><em> using Microsoft.Research.DynamicDataDisplay.DataSources;</em><br><em> //</em><br> <br> <br><em> namespace HelloWorldManual</em><br><em> {</em><br><em> &nbsp;&nbsp;&nbsp; public class MyWindow : Window</em><br><em> &nbsp;&nbsp;&nbsp; {</em><br> <br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public MyWindow()</em><br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</em><br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //&nbsp; .. set the size of the main window here ..</em><br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Width = 525;</em><br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Height = 350;</em><br> <br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //&nbsp; make a grid area, where a DDD-chart will be added to</em><br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Grid grid = new Grid();</em><br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //&nbsp; .. and add the grid area to the main window</em><br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Content = grid;</em><br> <br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //&nbsp; ---------------------------</em><br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //&nbsp; make a chart&nbsp;&nbsp;&nbsp; - this source code is normally written to XAML-statements</em><br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ChartPlotter&nbsp;&nbsp;&nbsp; tryChart;</em><br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; tryChart = new ChartPlotter();</em><br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; tryChart.HorizontalAlignment = System.Windows.HorizontalAlignment.Center;</em><br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; tryChart.VerticalAlignment = System.Windows.VerticalAlignment.Center;</em><br> <br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //&nbsp; .. add the chart to the grid</em><br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; grid.Children.Add(tryChart);</em><br> <br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //&nbsp; ---------------------------</em><br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //&nbsp; .. and display the values now within the chart</em><br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; BuildGraph(tryChart);</em><br> <br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //&nbsp; .. keep the resulting chart in mind as a bitmap</em><br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; BitmapSource bitmap;</em><br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; bitmap = tryChart.CreateScreenshot();</em><br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</em><br> <br> <br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /// &lt;summary&gt;</em><br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /// @see&nbsp;&nbsp;&nbsp; build and display the graph</em><br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /// &lt;/summary&gt;</em><br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; void BuildGraph(ChartPlotter tryChart)</em><br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</em><br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.WriteLine(&quot;starting BuildGraph()&quot;);</em><br> <br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Prepare data in arrays</em><br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int iN = 10;</em><br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; double[] x = new double[iN];</em><br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; double[] y = new double[iN];</em><br> <br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for (int iAux = 0; iAux &lt; iN; iAux++)</em><br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</em><br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x[iAux] = (double)iAux;</em><br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; y[iAux] = (double)iAux;</em><br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</em><br> <br> <br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Create data sources:</em><br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var xDataSource = x.AsXDataSource();</em><br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var yDataSource = y.AsYDataSource();</em><br> <br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CompositeDataSource compositeDataSource = new CompositeDataSource(xDataSource, yDataSource);</em><br> <br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // adding graph to plotter</em><br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; tryChart.AddLineGraph(compositeDataSource, Colors.CadetBlue, 3, &quot;.. DDD trial using No XAML ..&quot;);</em><br> <br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; tryChart.Visibility = Visibility.Visible;</em><br> <br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // force evertyhing plotted to be visible</em><br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; tryChart.FitToView();</em><br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</em><br> <br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /// &lt;summary&gt;</em><br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /// @see&nbsp;&nbsp;&nbsp; http://msdn.microsoft.com/en-us/library/system.windows.application.aspx</em><br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /// &lt;/summary&gt;</em><br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [STAThread]</em><br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public static void Main()</em><br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</em><br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Application app = new Application();</em><br> <br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; app.Run(new MyWindow());</em><br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</em><br><em> &nbsp;&nbsp;&nbsp; }</em><br><em> }</em><br> -----------------------------------------------------</p>\r\n<p>&nbsp;</p>\r\n<p>Thanks in advance,</p>\r\n<p>cstrial</p>",
    "PostedDate": "2010-08-06T07:04:55.633-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "477814",
    "ThreadId": "222724",
    "Html": "<p>It could be a timing issue. &nbsp;You could try doing the screen capture after the window has loaded.</p>\r\n<p>\r\n<div style=\"color:black;background-color:white\">\r\n<pre>\r\n\t\t\tLoaded += <span style=\"color:blue\">new</span> RoutedEventHandler(MyWindow_Loaded);\r\n\t\t}\r\n\r\n\t\t<span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> MyWindow_Loaded(<span style=\"color:blue\">object</span> sender, RoutedEventArgs e)\r\n\t\t{\t\t\t<div style=\"color:black;background-color:white\"><pre><span style=\"white-space:pre\">\t</span>            <span style=\"color:green\">//  .. keep the resulting chart in mind as a bitmap</span>\r\n        <span style=\"white-space:pre\">\t</span>    BitmapSource bitmap;\r\n<span style=\"white-space:pre\">\t</span>            bitmap = tryChart.CreateScreenshot(); </pre>\r\n</div>\r\n}</pre>\r\n</div>\r\n</p>\r\n<p>Grant.</p>",
    "PostedDate": "2010-08-08T14:14:54.997-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "477957",
    "ThreadId": "222724",
    "Html": "<p>Thanks a lot, Dear <a id=\"ctl00_ctl00_MasterContent_Content_PostRepeater_ctl02_UserNameLink\" href=\"http://www.codeplex.com/site/users/view/grantnz\">grantnz</a> !</p>\r\n<p><br> Indeed, it <span style=\"text-decoration:underline\">was</span> a timing issue (at least when executing within VisualStudio 2010 dev env) !<br> <br> As proposed I made the following changes .. and : its working now :<br> <br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //&nbsp; ---------------------------</em><br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //&nbsp; .. and display the values now within the chart</em><br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; BuildGraph(_tryChart);</em><br> <br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //&nbsp; .. keep the chart in mind as a bitmap</em><br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Loaded += new RoutedEventHandler(MyWindow_Loaded);</em><br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }&nbsp;&nbsp; //&nbsp; MyWindow()</em><br> <br> <br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /// &lt;summary&gt;</em><br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /// @see&nbsp;&nbsp;&nbsp; introduced due to solving timing problems as mentioned within</em><br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /// @see&nbsp;&nbsp;&nbsp; http://dynamicdatadisplay.codeplex.com/Thread/View.aspx?ThreadId=222724</em><br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /// &lt;/summary&gt;</em><br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /// &lt;param name=&quot;sender&quot;&gt;&lt;/param&gt;</em><br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /// &lt;param name=&quot;e&quot;&gt;&lt;/param&gt;</em><br><em> &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; private void MyWindow_Loaded(object sender, RoutedEventArgs e)</em><br><em> &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; {&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; </em><br><em> &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //&nbsp; .. keep the resulting chart in mind as a bitmap</em><br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; BitmapSource bitmap;</em><br><em> &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; bitmap = _tryChart.CreateScreenshot();</em><br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</em><br> <br> <em>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /// &lt;summary&gt;</em><br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /// @see&nbsp;&nbsp;&nbsp; build and display the graph</em><br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /// &lt;/summary&gt;</em><br><em> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; void BuildGraph( ...</em></p>",
    "PostedDate": "2010-08-09T01:16:36.66-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]