[
  {
    "Id": "915476",
    "ThreadId": "396332",
    "Html": "\r\n<p>Hi,</p>\r\n<p>I'm having trouble with the multiple Y axis in the TwoIndependentAxis sample when the graphs are continously updated. I'm not sure where, exactly, the problem kicks in.</p>\r\n<p>The problem is, the main Y axis seems to scale to contain the injected graph. If main graph is values -10-40 and injected graph is 0-26280, the main axis scales to 0-26280 so the graph is almost flat. It works when i run the sample as-is. The expected result\r\n is that main (left axis) is -10-40 and right axis is 0-26280</p>\r\n<p>I added this code to the sample for testing purposes:</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">public</span> <span style=\"color:blue\">partial</span> <span style=\"color:blue\">class</span> MainWindow : Window\r\n{\r\n    ObservableCollection&lt;DataPoint&gt; source1;\r\n    ObservableCollection&lt;DataPoint&gt; source2;\r\n\r\n    DispatcherTimer timer = <span style=\"color:blue\">null</span>;\r\n\r\n    <span style=\"color:blue\">public</span> MainWindow()\r\n    {\r\n        <span style=\"color:blue\">this</span>.InitializeComponent();\r\n    }\r\n\r\n    <span style=\"color:blue\">protected</span> EnumerableDataSource&lt;DataPoint&gt; CreateDataSource(ObservableCollection&lt;DataPoint&gt; values)\r\n    {\r\n        EnumerableDataSource&lt;DataPoint&gt; ds = <span style=\"color:blue\">new</span> EnumerableDataSource&lt;DataPoint&gt;(values);\r\n        ds.SetXMapping(ci =&gt; dateAxis.ConvertToDouble(ci.Data));\r\n        ds.SetYMapping(ci =&gt; ci.Value);\r\n\r\n        <span style=\"color:blue\">return</span> ds;\r\n    }\r\n\r\n    <span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> Window_Loaded(<span style=\"color:blue\">object</span> sender, RoutedEventArgs e)\r\n    {\r\n        source1 = <span style=\"color:blue\">new</span> ObservableCollection&lt;DataPoint&gt;();\r\n        source2 = <span style=\"color:blue\">new</span> ObservableCollection&lt;DataPoint&gt;();\r\n        plotter.AddLineGraph(CreateDataSource(source1), Colors.Red, 2, <span style=\"color:#a31515\">&quot;CAL1&quot;</span>);\r\n        innerPlotter.AddLineGraph(CreateDataSource(source2), Colors.Red, 2, <span style=\"color:#a31515\">&quot;CAL2&quot;</span>);\r\n\r\n        innerPlotter.SetVerticalTransform(-10, 0, 40, 26280);\r\n\r\n        timer = <span style=\"color:blue\">new</span> DispatcherTimer();\r\n        timer.Interval = <span style=\"color:blue\">new</span> TimeSpan(0, 0, 1);\r\n        timer.Tick &#43;= <span style=\"color:blue\">new</span> EventHandler(timer_tick);\r\n        timer.Start();\r\n    }\r\n\r\n    <span style=\"color:blue\">void</span> timer_tick(<span style=\"color:blue\">object</span> sender, EventArgs e)\r\n    {\r\n        DateTime now = DateTime.Now;\r\n\r\n        Random rnd = <span style=\"color:blue\">new</span> Random();\r\n        <span style=\"color:blue\">double</span> dValue = (rnd.NextDouble() * 50.0) - 10.0;\r\n        source1.Add(<span style=\"color:blue\">new</span> DataPoint{ Date = now, Value = dValue });\r\n\r\n        dValue = rnd.NextDouble() * 26280.0;\r\n        source2.Add(<span style=\"color:blue\">new</span> DataPoint{ Date = now, Value = dValue });\r\n    }\r\n}\r\n\r\n<span style=\"color:blue\">public</span> <span style=\"color:blue\">class</span> DataPoint\r\n{\r\n    <span style=\"color:blue\">public</span> DateTime Date{ <span style=\"color:blue\">get</span>; <span style=\"color:blue\">set</span>; }\r\n    <span style=\"color:blue\">public</span> <span style=\"color:blue\">double</span> Value{ <span style=\"color:blue\">get</span>; <span style=\"color:blue\">set</span>; }\r\n}\r\n\r\n\r\nMainWindow.Xaml\r\n\r\n&lt;Grid&gt;\r\n    &lt;d3:ChartPlotter x:Name=<span style=\"color:#a31515\">&quot;plotter&quot;</span>&gt;\r\n        &lt;d3:ChartPlotter.MainHorizontalAxis&gt;\r\n            &lt;d3:HorizontalDateTimeAxis x:Name=<span style=\"color:#a31515\">&quot;dateAxis&quot;</span>/&gt;\r\n        &lt;/d3:ChartPlotter.MainHorizontalAxis&gt;\r\n\r\n        &lt;d3:InjectedPlotter x:Name=<span style=\"color:#a31515\">&quot;innerPlotter&quot;</span>&gt;\r\n            &lt;d3:VerticalAxis Placement=<span style=\"color:#a31515\">&quot;Right&quot;</span>/&gt;\r\n        &lt;/d3:InjectedPlotter&gt;\r\n\r\n        &lt;d3:AxisNavigation Placement=<span style=\"color:#a31515\">&quot;Bottom&quot;</span>/&gt;\r\n        &lt;d3:AxisNavigation Placement=<span style=\"color:#a31515\">&quot;Right&quot;</span>/&gt;\r\n\r\n        &lt;d3:VerticalAxis Content=<span style=\"color:#a31515\">&quot;CAL1&quot;</span>/&gt;\r\n        &lt;d3:VerticalAxis Content=<span style=\"color:#a31515\">&quot;CAL2&quot;</span> Placement=<span style=\"color:#a31515\">&quot;Right&quot;</span>/&gt;\r\n    &lt;/d3:ChartPlotter&gt;\r\n&lt;/Grid&gt;\r\n</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>Thanks.</p>\r\n",
    "PostedDate": "2012-09-20T18:40:54.35-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "985659",
    "ThreadId": "396332",
    "Html": "\r\n<p>Were you able to get a solution for this?</p>\r\n",
    "PostedDate": "2013-01-11T13:41:35.643-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]