[
  {
    "Id": "269142",
    "ThreadId": "78607",
    "Html": "<p>So I created a little test app to take the D3 stuff for a test drive, seems very nice! &nbsp;I read and downloaded the sample app from this thread:</p>\r\n<p><a href=\"http://dynamicdatadisplay.codeplex.com/Thread/View.aspx?ThreadId=63633\">http://dynamicdatadisplay.codeplex.com/Thread/View.aspx?ThreadId=63633</a></p>\r\n<p>And while it was very helpful I still have some questions. &nbsp;The goal here is for me to load a list of LineGraphs onto a chart plotter. &nbsp;I would like to have the list bound to my view model. &nbsp; In the example, the binding is from an extended ChartPlotter class, and uses a button to load up the graphs- and works fine.</p>\r\n<p>If however, I try to load the graphs up front they do not display. &nbsp;For example if I call the method for loading up the LineGraphs in the ChartViewModel constructor, even though LineGraphs has valid content and is accessed by the WPF binding the data is not displayed.&nbsp;</p>\r\n<p>I think the solution is quite simple, but I cant seem to get it to work.</p>\r\n<p>Also, since I dont really need the dependency property aspect, is there any way to accomplish my goal using more mvvm'ish syntax? &nbsp;Something exactly like what Andre posted in the referenced thread? &nbsp;I am only on Day 1 of using your chart package, so maybe there is an easy way to do this that I havent figured out yet?</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">c</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">ChartPlotter</span> <span style=\"color:Red\">x:Name</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">plotter</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">&gt;</span>\r\n    <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">ItemsControl</span> \r\n        <span style=\"color:Red\">ItemsSource</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{Binding LineGraphs}</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">&gt;</span>\r\n        <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">ItemsControl.ItemTemplate</span><span style=\"color:Blue\">&gt;</span>\r\n            <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">DataTemplate</span><span style=\"color:Blue\">&gt;</span>\r\n                <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">c</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">LineGraph</span> <span style=\"color:Blue\">/&gt;</span>\r\n            <span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">DataTemplate</span><span style=\"color:Blue\">&gt;</span>\r\n        <span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">ItemsControl.ItemTemplate</span><span style=\"color:Blue\">&gt;</span>\r\n    <span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">ItemsControl</span><span style=\"color:Blue\">&gt;</span>\r\n<span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">c</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">ChartPlotter</span><span style=\"color:Blue\">&gt;</span>\r\n</pre>\r\n</div>\r\n<p>The main point is that I dont want to do the work in the code behind (by AddLineGraph()) and I dont need the command...</p>\r\n<p>&nbsp;</p>\r\n<pre style=\"font-size:1em;font-family:Consolas, 'Courier New', Courier, monospace\"><div id=\"_mcePaste\" style=\"left:-10000px;top:97px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&lt;c:ChartPlotter x:Name=&quot;plotter</div></pre>",
    "PostedDate": "2009-12-18T17:22:00.85-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "269598",
    "ThreadId": "78607",
    "Html": "<p>Hi Nicros,</p>\r\n<p>I'm using D3 and MVVM quite successful. I did like Ravi pointed out extending the ChartPotter class.</p>\r\n<p>Here is the code:</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Blue\">public</span> <span style=\"color:Blue\">class</span> DynamicLineChartPlotter : Microsoft.Research.DynamicDataDisplay.ChartPlotter {\r\n\r\n\r\n        <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">static</span> DependencyProperty ItemsSourceProperty =\r\n                DependencyProperty.Register(<span style=\"color:#A31515\">&quot;ItemsSource&quot;</span>,\r\n                                            <span style=\"color:Blue\">typeof</span>(IEnumerable),\r\n                                            <span style=\"color:Blue\">typeof</span>(DynamicLineChartPlotter),\r\n                                            <span style=\"color:Blue\">new</span> FrameworkPropertyMetadata(<span style=\"color:Blue\">null</span>, <span style=\"color:Blue\">new</span> PropertyChangedCallback(OnItemsSourceChanged)));\r\n\r\n        [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden), Bindable(<span style=\"color:Blue\">true</span>)]\r\n        <span style=\"color:Blue\">public</span> IEnumerable ItemsSource {\r\n            <span style=\"color:Blue\">get</span> {\r\n                <span style=\"color:Blue\">return</span> (IEnumerable)GetValue(ItemsSourceProperty);\r\n            }\r\n            <span style=\"color:Blue\">set</span> {\r\n                <span style=\"color:Blue\">if</span> (value == <span style=\"color:Blue\">null</span>)\r\n                    ClearValue(ItemsSourceProperty);\r\n                <span style=\"color:Blue\">else</span>\r\n                    SetValue(ItemsSourceProperty, value);\r\n            }\r\n        }\r\n\r\n        <span style=\"color:Blue\">private</span> <span style=\"color:Blue\">static</span> <span style=\"color:Blue\">void</span> OnItemsSourceChanged(DependencyObject d, DependencyPropertyChangedEventArgs e) {\r\n            DynamicLineChartPlotter control = (DynamicLineChartPlotter)d;\r\n            IEnumerable oldValue = (IEnumerable)e.OldValue;\r\n            IEnumerable newValue = (IEnumerable)e.NewValue;\r\n\r\n            <span style=\"color:Blue\">if</span> (e.NewValue == <span style=\"color:Blue\">null</span>)\r\n                control.ClearItemsSource();\r\n            <span style=\"color:Blue\">else</span>\r\n                control.SetItemsSource(newValue);\r\n        }\r\n\r\n        <span style=\"color:Blue\">private</span> List&lt;IPlotterElement&gt; _elementsInItemsSource = <span style=\"color:Blue\">new</span> List&lt;IPlotterElement&gt;();\r\n        <span style=\"color:Blue\">private</span> IEnumerable _itemsSource = <span style=\"color:Blue\">null</span>;\r\n\r\n        <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">void</span> ClearItemsSource() {\r\n            <span style=\"color:Blue\">if</span> (_itemsSource != <span style=\"color:Blue\">null</span> &amp;&amp; _itemsSource <span style=\"color:Blue\">is</span> INotifyCollectionChanged)\r\n                (_itemsSource <span style=\"color:Blue\">as</span> INotifyCollectionChanged).CollectionChanged -= ItemsSourceCollectionChanged;\r\n\r\n            <span style=\"color:Green\">//remove the elements that were added from the items source (create a copy since RemoveItemSourceChild changes the enumeration)</span>\r\n            List&lt;IPlotterElement&gt; removes = <span style=\"color:Blue\">new</span> List&lt;IPlotterElement&gt;(_elementsInItemsSource);\r\n            <span style=\"color:Blue\">foreach</span> (IPlotterElement elem <span style=\"color:Blue\">in</span> removes)\r\n                RemoveItemSourceChild(elem);\r\n\r\n            _elementsInItemsSource.Clear();\r\n        }\r\n\r\n        <span style=\"color:Blue\">private</span> <span style=\"color:Blue\">void</span> SetItemsSource(IEnumerable list) {\r\n            ClearItemsSource();\r\n\r\n            <span style=\"color:Blue\">foreach</span> (<span style=\"color:Blue\">object</span> o <span style=\"color:Blue\">in</span> list) {\r\n                <span style=\"color:Blue\">if</span> (o <span style=\"color:Blue\">is</span> IPlotterElement)\r\n                    AddItemSourceChild(o <span style=\"color:Blue\">as</span> IPlotterElement);\r\n            }\r\n\r\n            _itemsSource = list;\r\n            <span style=\"color:Blue\">if</span> (_itemsSource <span style=\"color:Blue\">is</span> INotifyCollectionChanged)\r\n                (_itemsSource <span style=\"color:Blue\">as</span> INotifyCollectionChanged).CollectionChanged += ItemsSourceCollectionChanged;\r\n        }\r\n\r\n        <span style=\"color:Blue\">private</span> <span style=\"color:Blue\">void</span> RemoveItemSourceChild(IPlotterElement elem) {\r\n            <span style=\"color:Blue\">this</span>.Children.Remove(elem);\r\n            <span style=\"color:Green\">//it's not in the plotter anymore</span>\r\n            _elementsInItemsSource.Remove(elem);\r\n        }\r\n\r\n        <span style=\"color:Blue\">private</span> <span style=\"color:Blue\">void</span> AddItemSourceChild(IPlotterElement elem) {\r\n            Children.Add(elem);\r\n            <span style=\"color:Green\">//it's in the plotter not</span>\r\n            _elementsInItemsSource.Add(elem);\r\n        }\r\n\r\n        <span style=\"color:Blue\">private</span> <span style=\"color:Blue\">void</span> ItemsSourceCollectionChanged(<span style=\"color:Blue\">object</span> sender, NotifyCollectionChangedEventArgs e) {\r\n            <span style=\"color:Blue\">if</span> (e.OldItems != <span style=\"color:Blue\">null</span>) {\r\n                <span style=\"color:Blue\">foreach</span> (<span style=\"color:Blue\">object</span> o <span style=\"color:Blue\">in</span> e.OldItems) {\r\n                    <span style=\"color:Blue\">if</span> (o <span style=\"color:Blue\">is</span> IPlotterElement)\r\n                        RemoveItemSourceChild(o <span style=\"color:Blue\">as</span> IPlotterElement);\r\n                }\r\n            }\r\n\r\n            <span style=\"color:Blue\">if</span> (e.NewItems != <span style=\"color:Blue\">null</span>) {\r\n                <span style=\"color:Blue\">foreach</span> (<span style=\"color:Blue\">object</span> o <span style=\"color:Blue\">in</span> e.NewItems) {\r\n                    <span style=\"color:Blue\">if</span> (o <span style=\"color:Blue\">is</span> IPlotterElement)\r\n                        AddItemSourceChild(o <span style=\"color:Blue\">as</span> IPlotterElement);\r\n                }\r\n            }\r\n        }\r\n    }\r\n</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>Then you can use in your view:</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre> <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">customD3</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">DynamicLineChartPlotter</span> <span style=\"color:Red\">x:Name</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">Chart</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">ItemsSource</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{Binding Charts}</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">&gt;</span>\r\n                    <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">d3</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">VerticalAxisTitle</span> <span style=\"color:Red\">FontSize</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">12</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">&gt;</span>Value<span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">d3</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">VerticalAxisTitle</span><span style=\"color:Blue\">&gt;</span>\r\n                    <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">d3</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">HorizontalAxisTitle</span> <span style=\"color:Red\">FontSize</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">12</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">&gt;</span>Date Time<span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">d3</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">HorizontalAxisTitle</span><span style=\"color:Blue\">&gt;</span>\r\n <span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">customD3</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">DynamicLineChartPlotter</span><span style=\"color:Blue\">&gt;</span>\r\n</pre>\r\n</div>\r\n<p>Then just bind an &quot;ObservableCollection&lt;IPlotterElement&gt; Charts&quot; &nbsp;from your ViewModel and everything will work like a charm.</p>\r\n<p>Hope it helps,</p>\r\n<p>Andr&eacute; Carlucci</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2009-12-21T08:22:04.783-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "269613",
    "ThreadId": "78607",
    "Html": "<p>Hi Andre,</p>\r\n<p>Thanks for the info! &nbsp;Very helpful indeed. &nbsp;I had implemented the stuff Ravi posted, so was using his LineGraphViewModel. &nbsp;I like this because it allows you to set markers, colors, etc for each of your graphs. &nbsp;What are you using for your IPlotterElement?</p>\r\n<p>Did you just implement this interface on your viewmodel or...?</p>\r\n<p>Thanks again!</p>",
    "PostedDate": "2009-12-21T09:12:34.567-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "269620",
    "ThreadId": "78607",
    "Html": "<p>In my case I don't have any fancy stuff, so it's just the LineGraph itself. I have a factory that creates it, adds&nbsp;a randow color and the FrequencyFilter for performance reasons.</p>\r\n<p>The LineGraphViewModel is definitely the way to go if you have more than that.</p>\r\n<p>Cheers,</p>\r\n<p>Andr&eacute;</p>",
    "PostedDate": "2009-12-21T09:52:18.327-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "269629",
    "ThreadId": "78607",
    "Html": "<p>Yeah I like to have the view model. &nbsp;I guess the problem Im really having is that I cant get the data to display properly on initialization.</p>\r\n<p>In my ChartViewModel, I have an ObservableCollection&lt;LineGraphViewModel&gt; list, where LineGraphViewModel is from Ravi's stuff. &nbsp;Im trying to load the data into this list, and have it displayed when the ChartViewModel class is initialized- so I have a LoadData method being called from the contstructor:</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Blue\">public</span> ChartViewModel()\r\n{\r\n  LoadData();\r\n}\r\n\r\n<span style=\"color:Blue\">private</span> <span style=\"color:Blue\">void</span> LoadData()\r\n{\r\n\t<span style=\"color:Green\">// Create LineGraphViewModels and add them to ObservableCollection list</span>\r\n}\r\n</pre>\r\n</div>\r\n<p>When I do this though, I dont see anything on my chart- even though my LineGraphs property is being called and returning a valid list of LineGraphViewModels. &nbsp;If I call LoadData from another property, then it works. &nbsp;I dont understand why this is... any ideas?</p>\r\n<p>&nbsp;</p>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">public ChartViewModel()</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">{</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp;LoadData();</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">}</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">private void LoadData()</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">{</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>// Create LineGraphViewModels and add them to ObservableCollection listWhen&nbsp;</div>\r\n<p>&nbsp;</p>",
    "PostedDate": "2009-12-21T10:26:45.567-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "269899",
    "ThreadId": "78607",
    "Html": "<p>Hmm... that's really weird.</p>\r\n<p>Did you try to call OnPropertyChanged(&quot;List&quot;);&nbsp; (where List is your bound property) after changing it?</p>\r\n<p>Andr&eacute;</p>",
    "PostedDate": "2009-12-22T05:02:11.26-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "269952",
    "ThreadId": "78607",
    "Html": "<p>Yep. &nbsp;What seems to be happening is that if I populate the model list during initialization, even though the list property 'get' is called (and the list is valid) it doesnt display anything. &nbsp;If I call the property 'get' after initialization, like on some other property change or event everything is just fine.</p>\r\n<p>Im no wpf expert, so Im sure Im doing something silly, but Im not sure what. &nbsp;Ill noodle with it a bit more to see what is going on.</p>",
    "PostedDate": "2009-12-22T08:38:39.893-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "269991",
    "ThreadId": "78607",
    "Html": "<p>You could change the responsible&nbsp;for showing the chart.</p>\r\n<p>1 - Make the default view of the ChartViewModel show an empty chart (that means, no LoadData in constructor)</p>\r\n<p>2 - Make the LoadData() a public method, maybe passing parameters of which&nbsp;chart to show or whatever</p>\r\n<p>3 - In your caller, put something like:</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre>ChartViewModel vm = <span style=\"color:Blue\">new</span> ChartViewModel() { ... }\r\nShowView(vm);\r\nvm.LoadData();\r\n</pre>\r\n<p>You can change the order (show vm first or LoadData first) to see&nbsp;what happens.</p>\r\n<p>&nbsp;</p>\r\n</div>",
    "PostedDate": "2009-12-22T10:49:44.007-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "271671",
    "ThreadId": "78607",
    "Html": "<p>hi, i don't know if i'm going in the wrong direction...</p>\r\n<p>I create this event to know when the itemssource had changed.</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre>        <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">static</span> <span style=\"color:Blue\">void</span> OnItemsSourceChanged(DependencyObject d, DependencyPropertyChangedEventArgs e)\r\n        {\r\n            DynamicChartPlotter control = (DynamicChartPlotter)d;\r\n            IEnumerable oldValue = (IEnumerable)e.OldValue;\r\n            IEnumerable newValue = (IEnumerable)e.NewValue;\r\n\r\n            <span style=\"color:Blue\">if</span> (e.NewValue == <span style=\"color:Blue\">null</span>)\r\n                control.ClearItemsSource();\r\n            <span style=\"color:Blue\">else</span>\r\n                control.SetItemsSource(newValue);\r\n\r\n        <span style=\"color:Green\">//changes start here</span>\r\n\r\n            control.OnItemsSourceChanged(e);\r\n        }\r\n\r\n        <span style=\"color:Blue\">#region</span> ItemsSourceChanged\r\n\r\n        <span style=\"color:Blue\">protected</span> <span style=\"color:Blue\">virtual</span> <span style=\"color:Blue\">void</span> OnItemsSourceChanged(DependencyPropertyChangedEventArgs e)\r\n        {\r\n            <span style=\"color:Blue\">if</span> (<span style=\"color:Blue\">null</span> != ItemsSourceChanged)\r\n            {\r\n                ItemsSourceChanged(<span style=\"color:Blue\">this</span>, e);\r\n            }\r\n        }\r\n\r\n        <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">event</span> DependencyPropertyChangedEventHandler ItemsSourceChanged;\r\n\r\n        <span style=\"color:Blue\">#endregion</span>\r\n</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2009-12-30T03:51:03.133-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]