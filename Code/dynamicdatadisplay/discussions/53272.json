[
  {
    "Id": "179220",
    "ThreadId": "53272",
    "Html": "privet!<br>\r\n<br>\r\nWPF Dynamic Data Display looks very interesting and I'd like to replace my National Instruments plotting library with it.&nbsp;&nbsp; Besides normal x-y line charts I also need to create Smith Charts (polar plots).&nbsp;&nbsp; I sub-classed the National Instruments scatter plot to do so before so I have much of the grid algorithms.<br>\r\n<br>\r\nIs it possible to override elements of the DynamicDataDisplay library so as to create polar and &lt;hopefully&gt; Smith type charts?&nbsp; If so, is this relatively straight forward to do, or will I run into major\r\n&lt;meta content=&quot;text/html; charset=utf-8&quot; http-equiv=&quot;Content-Type&quot; /&gt;\r\n&lt;meta content=&quot;Word.Document&quot; name=&quot;ProgId&quot; /&gt;\r\n&lt;meta content=&quot;Microsoft Word 11&quot; name=&quot;Generator&quot; /&gt;\r\n&lt;meta content=&quot;Microsoft Word 11&quot; name=&quot;Originator&quot; /&gt;\r\n&lt;link href=&quot;file:///C:%5CUsers%5Crae2081%5CAppData%5CLocal%5CTemp%5Cmsohtml1%5C01%5Cclip_filelist.xml&quot; rel=&quot;File-List&quot; /&gt;&lt;!--[if gte mso 9]&gt;&lt;xml&gt;\r\n &lt;w:WordDocument&gt;\r\n  &lt;w:View&gt;Normal&lt;/w:View&gt;\r\n  &lt;w:Zoom&gt;0&lt;/w:Zoom&gt;\r\n  &lt;w:PunctuationKerning/&gt;\r\n  &lt;w:ValidateAgainstSchemas/&gt;\r\n  &lt;w:SaveIfXMLInvalid&gt;false&lt;/w:SaveIfXMLInvalid&gt;\r\n  &lt;w:IgnoreMixedContent&gt;false&lt;/w:IgnoreMixedContent&gt;\r\n  &lt;w:AlwaysShowPlaceholderText&gt;false&lt;/w:AlwaysShowPlaceholderText&gt;\r\n  &lt;w:Compatibility&gt;\r\n   &lt;w:BreakWrappedTables/&gt;\r\n   &lt;w:SnapToGridInCell/&gt;\r\n   &lt;w:WrapTextWithPunct/&gt;\r\n   &lt;w:UseAsianBreakRules/&gt;\r\n   &lt;w:DontGrowAutofit/&gt;\r\n  &lt;/w:Compatibility&gt;\r\n  &lt;w:BrowserLevel&gt;MicrosoftInternetExplorer4&lt;/w:BrowserLevel&gt;\r\n &lt;/w:WordDocument&gt;\r\n&lt;/xml&gt;&lt;![endif]--&gt;&lt;!--[if gte mso 9]&gt;&lt;xml&gt;\r\n &lt;w:LatentStyles DefLockedState=&quot;false&quot; LatentStyleCount=&quot;156&quot;&gt;\r\n &lt;/w:LatentStyles&gt;\r\n&lt;/xml&gt;&lt;![endif]--&gt;\r\n&lt;style&gt;\r\n    &lt;!--\r\n /* Style Definitions */\r\n p.MsoNormal, li.MsoNormal, div.MsoNormal\r\n\t{mso-style-parent:&quot;&quot;;\r\n\tmargin-top:6.0pt;\r\n\tmargin-right:0in;\r\n\tmargin-bottom:0in;\r\n\tmargin-left:0in;\r\n\tmargin-bottom:.0001pt;\r\n\tmso-pagination:widow-orphan;\r\n\tfont-size:12.0pt;\r\n\tmso-bidi-font-size:10.0pt;\r\n\tfont-family:Arial;\r\n\tmso-fareast-font-family:&quot;Times New Roman&quot;;\r\n\tmso-bidi-font-family:&quot;Times New Roman&quot;;}\r\n@page Section1\r\n\t{size:8.5in 11.0in;\r\n\tmargin:1.0in 1.25in 1.0in 1.25in;\r\n\tmso-header-margin:.5in;\r\n\tmso-footer-margin:.5in;\r\n\tmso-paper-source:0;}\r\ndiv.Section1\r\n\t{page:Section1;}\r\n--&gt;\r\n&lt;/style&gt;\r\n&lt;!--[if gte mso 10]&gt;\r\n&lt;style&gt;\r\n /* Style Definitions */\r\n table.MsoNormalTable\r\n\t{mso-style-name:&quot;Table Normal&quot;;\r\n\tmso-tstyle-rowband-size:0;\r\n\tmso-tstyle-colband-size:0;\r\n\tmso-style-noshow:yes;\r\n\tmso-style-parent:&quot;&quot;;\r\n\tmso-padding-alt:0in 5.4pt 0in 5.4pt;\r\n\tmso-para-margin:0in;\r\n\tmso-para-margin-bottom:.0001pt;\r\n\tmso-pagination:widow-orphan;\r\n\tfont-size:10.0pt;\r\n\tfont-family:&quot;Times New Roman&quot;;\r\n\tmso-ansi-language:#0400;\r\n\tmso-fareast-language:#0400;\r\n\tmso-bidi-language:#0400;}\r\n&lt;/style&gt;\r\n&lt;![endif]--&gt;<span style=\"font-size:12pt;font-family:arial\">obstacles</span>? <br>\r\n<br>\r\nThanks,<br>\r\n<br>\r\nkcsmith<br>\r\n",
    "PostedDate": "2009-04-14T13:59:30.087-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "179510",
    "ThreadId": "53272",
    "Html": "Privet!<div><br></div><div>Current version of DynamicDataDisplay doesn't has possibility to plot charts in polar coordinates. But the upcoming D3's version has built-in support of polar coordinates, so you'll be able to use it in several days.</div><div>But it doesn't have support for axes in polar coordinates (when one axis is for radius and another is for polar angle), though we have such axes in plans.</div><div>It is a little more difficult with Smith charts - for example, I didn't know about their existance before today, when you've mensioned them. And as I have understood from some pictures I've googled, Smith charts are rather complicated. So when I have free time, I can try to create such chart, but I need more info about its structure, meaning and usage. If you can provide some descriptive materials, I can make a try for you, but this can happen not in the very nearest future (for example, not in next 2-3 weeks).</div><div><br></div><div>If you have some extra questions about D3, fell yourself free to ask them.</div><div><br></div><div>By the way, if you know Russian (it seems to me that you do), you can contact me in russian at my mail: thecentury+d3@gmail.com</div><div><br></div><div>Yours,</div><div>Mikhail Brinchuk,</div><div>DynamicDataDisplay Dev Team.</div>",
    "PostedDate": "2009-04-15T03:42:12.903-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "179824",
    "ThreadId": "53272",
    "Html": "&lt;style&gt;\r\n    &lt;!-- /* Style Definitions */ p.MsoNormal, li.MsoNormal, div.MsoNormal {mso-style-parent:&quot;&quot;; margin-top:6.0pt; margin-right:0in; margin-bottom:0in; margin-left:0in; margin-bottom:.0001pt; mso-pagination:widow-orphan; font-size:12.0pt; mso-bidi-font-size:10.0pt; font-family:Arial; mso-fareast-font-family:&quot;Times New Roman&quot;; mso-bidi-font-family:&quot;Times New Roman&quot;;} a:link, span.MsoHyperlink {color:blue; text-decoration:underline; text-underline:single;} a:visited, span.MsoHyperlinkFollowed {color:purple; text-decoration:underline; text-underline:single;} @page Section1 {size:8.5in 11.0in; margin:1.0in 1.25in 1.0in 1.25in; mso-header-margin:.5in; mso-footer-margin:.5in; mso-paper-source:0;} div.Section1 {page:Section1;} --&gt;\r\n&lt;/style&gt;\r\n<p>Mikhail:</p>\r\n<p>&nbsp;</p>\r\n<p>My Russian is terrible, so if you don't mind I'd like to keep this in English.</p>\r\n<p>&nbsp;</p>\r\n<p>A Smith Chart is nothing more than a polar chart with an impedance grid laid down in the background. <span>&nbsp;&nbsp;</span>In my prior code I plotted the impedance grid first and then my data in standard polar coordinates. <span>&nbsp;&nbsp;</span>Then center of the Smith chart is (0,0) while the outer radius may exceed 1.0 (data showing gain).</p>\r\n<p>Here some (poorly documented) code in C++ for the impedance grid</p>\r\n<p>========================================================</p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new';color:blue\">for</span><span style=\"font-size:10pt;font-family:'courier new'\"> (r = 0.1; r &lt;= radius; r +=0.1)</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cx = 1 - r;</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cy = 0;</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:blue\">for</span> (aIndex = 0; aIndex &lt; numOfAngles; aIndex++)</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ang = aIndex*angInc;</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x[pIndex] = cx + r * System::Math::Cos(ang);</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; y[pIndex] = cy + r * System::Math::Sin(ang);</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"font-size:10pt;font-family:'courier new'\">pIndex++;</span></span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:blue\">double</span> dx, dy, D,t1, t2, rang, tinc;</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"font-size:10pt;font-family:'courier new';color:blue\">for</span><span style=\"font-size:10pt;font-family:'courier new'\"> (rang = 10; rang &lt; 360; rang +=10)</span></span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:blue\">if</span> (rang == 180)</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x[pIndex] = -radius;</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; y[pIndex] = 0;</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pIndex++;</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x[pIndex] = radius;</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; y[pIndex] = 0;</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pIndex++;</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:blue\">else</span></span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cx = 1;</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dx = System::Math::Cos(System::Math::PI*rang/180)-1;</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dy = System::Math::Sin(System::Math::PI*rang/180);</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; D = System::Math::Sqrt(dx*dx + dy*dy);</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; t2 = (System::Math::PI/2) - System::Math::Asin(dy/D);</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; r = D/(2*System::Math::Cos(t2));</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cy = r;</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"font-size:10pt;font-family:'courier new'\">t1 = System::Math::PI - 2*t2;</span></span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"font-size:10pt;font-family:'courier new'\">tinc = t1 / (numOfAngles-1);</span></span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:blue\">for</span> (aIndex = 0; aIndex &lt; numOfAngles; aIndex++)</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ang = -(aIndex*tinc + System::Math::PI/2);</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x[pIndex] = cx + r * System::Math::Cos(ang);</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; y[pIndex] = cy + r * System::Math::Sin(ang);</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pIndex++;</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:blue\">if</span> (rang &gt; 270)</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; t1 = System::Math::Asin(dy/radius);</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; tinc = -t1 / (numOfAngles-1);</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:blue\">else</span> <span style=\"color:blue\">if</span> (rang &gt; 180)</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; t1 = System::Math::PI - System::Math::Asin(dy/radius);</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; tinc = -t1 / (numOfAngles-1);</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:blue\">else</span> <span style=\"color:blue\">if</span> (rang &gt; 90)</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; t1 = System::Math::PI - System::Math::Asin(dy/radius);</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; tinc = t1 / (numOfAngles-1);</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:blue\">else</span></span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; t1 = System::Math::Asin(dy/radius);</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; tinc = t1 / (numOfAngles-1);</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; tinc = t1 / (numOfAngles-1);</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:blue\">for</span> (aIndex = 0; aIndex &lt; numOfAngles; aIndex++)</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ang = t1 -aIndex*tinc;</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x[pIndex] = radius * System::Math::Cos(ang);</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; y[pIndex] = radius * System::Math::Sin(ang);</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pIndex++;</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>\r\n<p style=\"margin-top:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;</span></p>\r\n<div style=\"border-style:none none double;border-color:-moz-use-text-color -moz-use-text-color windowtext;border-width:medium medium 2.25pt;padding:0in 0in 1pt\">\r\n<p style=\"border:medium none;padding:0in\"><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>\r\n</div>\r\n<p><span style=\"font-size:10pt;font-family:'courier new'\">I also use polar charts for Antenna data.&nbsp; Antenna charts have a polar grid: angular-radial and the center of the chart may not be zero. &nbsp;A typical Antenna chart may have -40 at the center and +5 at the outermost radius. &nbsp;&nbsp;It is useful to be able to rotate the angular 0 degree reference to any position (or at least the top, left, right or bottom of the chart).</span></p>\r\n<p><span style=\"font-size:10pt;font-family:'courier new'\">&nbsp;</span></p>\r\n<p><span style=\"font-size:10pt;font-family:'courier new'\">Here's a reference on Smith Charts:</span></p>\r\n<p><a href=\"http://www.sss-mag.com/smith.html\">http://www.sss-mag.com/smith.html</a></p>\r\n<p><span>&nbsp;</span>Here's some open source code for Antenna polar plots:</p>\r\n<p>http://sourceforge.net/projects/ardp/</p>\r\n<p>Spasiba!</p>\r\n<p>Keith Smith</p>\r\n",
    "PostedDate": "2009-04-15T13:57:01.717-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "180029",
    "ThreadId": "53272",
    "Html": "Hi Keith,<div><br></div><div>Thank you for links and description you've wrote, I'll try to create such chart type but a little bit later - maybe in 2-3 weeks.</div><div><br></div><div>Pozhaluysta!) (This is &quot;you are welcome&quot; in Russian :) )</div><div><br></div><div>Yours,</div><div>Mikhail Brinchuk.</div>",
    "PostedDate": "2009-04-16T02:30:11.19-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1430318",
    "ThreadId": "53272",
    "Html": "Hello,\r<br />\n<br />\nI've got a Windows Forms application that displays weather data using the Windows Forms Chart control.\r<br />\n<br />\nOne of the charts is a polar chart for displaying the wind direction.  The X-Axis is wind direction (compass angle as double), and the Y-Axis is DateTime.\r<br />\n<br />\nI also re-labelled the X-Axis to show N, NE, E, SE, etc. at the associated compass angles.\r<br />\n<br />\nA year's worth of records at 15 minute intervals is... largish and slow to load.  The Chart control is also prone to getting itself irretrievably 'in a knot', with a big red cross across it.\r<br />\n<br />\nTherefore, I've been looking for faster charting. I came across D3.\r<br />\n<br />\nD3 is certainly faster.  A full year's data loads in a fraction of the time it did with the Windows Form Chart control.\r<br />\n<br />\nI've started with the WPF version, as I don't really want to rely on Silverlight to be installed.\r<br />\n<br />\nBased on this post, I gather a polar chart should be possible by now, but I can't for the life of me find an example of how to create and configure one.\r<br />\n<br />\nCan I do it in 'plain old' WPF, or can I only do it in an application for Silverlight?<br />\n",
    "PostedDate": "2015-06-12T21:26:44.517-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]