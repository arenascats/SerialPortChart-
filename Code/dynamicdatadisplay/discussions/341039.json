[
  {
    "Id": "794872",
    "ThreadId": "341039",
    "Html": "<p>Hi,</p>\n<p>I want to diaply a text in x-Axis label in my charting. Presently what i can do is, can only display a double/DateTime value which i will bind through the \"SetXMapping\" function of \"EnumerableDataSource\". Instead i want to display a text corresponding to  the double value (I have a mapping table for each value i bind to X-coordinate) i bind through the \"SetXMapping\" function.</p>\n<p>Looking forward for a response.....</p>\n<p>Thanks,</p>\n<p>Sathish B.R</p>",
    "PostedDate": "2012-02-22T06:40:43.007-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "823768",
    "ThreadId": "341039",
    "Html": "<p>I'm looking forward to this solution too! If anybody has some idea how to manage this I would appreciate it!</p>",
    "PostedDate": "2012-04-14T00:43:16.363-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "825038",
    "ThreadId": "341039",
    "Html": "<p>I got close to a solution, but then the feature got cancelled for my project. &nbsp;You'll have to write a custom implementation of&nbsp;LabelProviderBase&lt;T&gt;, or maybe NumericLabelProviderBase. &nbsp;Pay particular attention to the&nbsp;CreateLabels method, which you'll have to implement - this method gets an ITicksInfo&lt;T&gt; argument, which is a value associated with an axis tick, and expects you to do something to that and return the actual tick label as any UIElement. &nbsp;Good luck!</p>",
    "PostedDate": "2012-04-17T12:50:35.283-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "832227",
    "ThreadId": "341039",
    "Html": "<p>I was able to do that.</p>\n<p>Its maybe not the best solution but here what I have done.</p>\n<p>First I am using the Figure control like this :</p>\n<div style=\"background-color: white; color: black;\">\n<pre><span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">d3</span><span style=\"color: blue;\">:</span><span style=\"color: #a31515;\">Figure</span><span style=\"color: blue;\">&gt;</span>\r\n\r\n\t<span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">d3</span><span style=\"color: blue;\">:</span><span style=\"color: #a31515;\">PlotAxis</span> <span style=\"color: red;\">x:Name</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">leftAxis</span><span style=\"color: black;\">\"</span>\r\n\t\t\t\t <span style=\"color: red;\">AxisOrientation</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">Left</span><span style=\"color: black;\">\"</span>\r\n\t\t\t\t <span style=\"color: red;\">d3:Figure.Placement</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">Left</span><span style=\"color: black;\">\"</span>\r\n\t\t\t\t <span style=\"color: red;\">Foreground</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">White</span><span style=\"color: black;\">\"</span> <span style=\"color: blue;\">/&gt;</span>\r\n\t<span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">d3</span><span style=\"color: blue;\">:</span><span style=\"color: #a31515;\">PlotAxis</span> <span style=\"color: red;\">x:Name</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">bottomAxis</span><span style=\"color: black;\">\"</span>\r\n\t\t\t\t <span style=\"color: red;\">AxisOrientation</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">Bottom</span><span style=\"color: black;\">\"</span>\r\n\t\t\t\t <span style=\"color: red;\">d3:Figure.Placement</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">Bottom</span><span style=\"color: black;\">\"</span>\r\n\t\t\t\t <span style=\"color: red;\">Foreground</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">White</span><span style=\"color: black;\">\"</span> \r\n\t\t\t\t <span style=\"color: red;\">Style</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">{StaticResource PlotDateAxis}</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">/&gt;</span>\r\n\r\n\t<span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">d3</span><span style=\"color: blue;\">:</span><span style=\"color: #a31515;\">AxisGrid</span> <span style=\"color: red;\">x:Name</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">axisGrid</span><span style=\"color: black;\">\"</span> <span style=\"color: blue;\">/&gt;</span>\r\n\r\n\t<span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">d3</span><span style=\"color: blue;\">:</span><span style=\"color: #a31515;\">MouseNavigation</span> <span style=\"color: blue;\">/&gt;</span>\r\n<span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">d3</span><span style=\"color: blue;\">:</span><span style=\"color: #a31515;\">Figure</span><span style=\"color: blue;\">&gt;</span>\r\n</pre>\n</div>\n<div style=\"background-color: white; color: black;\">Notice the PlotDateAxis custom style of the bottomAxis. Here is my implementation of&nbsp;the style:</div>\n<div style=\"background-color: white; color: black;\">\n<pre><span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Style</span> <span style=\"color: red;\">TargetType</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">d3:PlotAxis</span><span style=\"color: black;\">\"</span> <span style=\"color: red;\">x:Key</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">PlotDateAxis</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">&gt;</span>\r\n\t<span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Setter</span> <span style=\"color: red;\">Property</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">Template</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">&gt;</span>\r\n\t\t<span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Setter.Value</span><span style=\"color: blue;\">&gt;</span>\r\n\t\t\t<span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">ControlTemplate</span> <span style=\"color: red;\">TargetType</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">d3:PlotAxis</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">&gt;</span>\r\n\t\t\t\t<span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Grid</span><span style=\"color: blue;\">&gt;</span>\r\n\t\t\t\t\t<span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">DMS</span><span style=\"color: blue;\">:</span><span style=\"color: #a31515;\">RtAxis</span> <span style=\"color: red;\">x:Name</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">PART_Axis</span><span style=\"color: black;\">\"</span> <span style=\"color: red;\">AxisOrientation</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">{Binding AxisOrientation, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}</span><span style=\"color: black;\">\"</span> <span style=\"color: red;\">Ticks</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">{Binding Ticks, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}</span><span style=\"color: black;\">\"</span> <span style=\"color: red;\">Foreground</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">{Binding Foreground, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}</span><span style=\"color: black;\">\"</span> <span style=\"color: blue;\">/&gt;</span>\r\n\t\t\t\t\t<span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">ContentPresenter</span> <span style=\"color: blue;\">/&gt;</span>\r\n\t\t\t\t<span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">Grid</span><span style=\"color: blue;\">&gt;</span>\r\n\t\t\t<span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">ControlTemplate</span><span style=\"color: blue;\">&gt;</span>\r\n\t\t<span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">Setter.Value</span><span style=\"color: blue;\">&gt;</span>\r\n\t<span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">Setter</span><span style=\"color: blue;\">&gt;</span>\r\n\t<span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Setter</span> <span style=\"color: red;\">Property</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">IsTabStop</span><span style=\"color: black;\">\"</span> <span style=\"color: red;\">Value</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">False</span><span style=\"color: black;\">\"</span> <span style=\"color: blue;\">/&gt;</span>\r\n<span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">Style</span><span style=\"color: blue;\">&gt;</span>\r\n</pre>\n</div>\n<p>Notice the control \"DMS:RtAxis\". <br />DMS is my personal namespace. I have created a classe named RtAxis inherithing from Axis. This new implementation call the base contructor passing a custom LabelProvider:</p>\n<div style=\"background-color: white; color: black;\">\n<pre><span style=\"color: blue;\">namespace</span> DMS {\r\n    <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">class</span> RtAxis : Axis {\r\n        <span style=\"color: blue;\">public</span> RtAxis() : <span style=\"color: blue;\">base</span>(<span style=\"color: blue;\">new</span> CustomLabelProvider(),  <span style=\"color: blue;\">new</span> TicksProvider()) {            \r\n        }\r\n    }\r\n\r\n    <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">class</span> CustomLabelProvider : ILabelProvider {        \r\n        <span style=\"color: blue;\">public</span> FrameworkElement[] GetLabels(<span style=\"color: blue;\">double</span>[] ticks) {\r\n            <span style=\"color: blue;\">if</span> (ticks == <span style=\"color: blue;\">null</span>)            \r\n                <span style=\"color: blue;\">throw</span> <span style=\"color: blue;\">new</span> ArgumentNullException(<span style=\"color: #a31515;\">\"ticks\"</span>);\r\n\r\n            <span style=\"color: blue;\">return</span> ticks.Select(num =&gt; <span style=\"color: blue;\">new</span> TextBlock {\r\n                                            Text = DateTime.FromFileTimeUtc((<span style=\"color: blue;\">long</span>)num).ToString(<span style=\"color: #a31515;\">\"dd\"</span>)\r\n                                        }).ToArray();\r\n        }\r\n    }\r\n}﻿</pre>\n</div>\n<div style=\"background-color: white; color: black;\">The implementation of GetLabels from ILabelProvider generate a new TextBlock for each ticks but instead of converting the number to a string, I convert the number to a DateTime then format the output. Note that my&nbsp;X values are DateTimes converted to numbers using the DateTime function ToFileTimeUtc.</div>\n<div style=\"background-color: white; color: black;\">A lot of space&nbsp;for improvements</div>\n<div style=\"background-color: white; color: black;\">This is maybe not exactly what you&nbsp;are looking for but maybe a hint on how you can achieve your goal.</div>\n<div style=\"background-color: white; color: black;\">best luck !</div>\n<div style=\"background-color: white; color: black;\">Sebastien Chandonnet</div>",
    "PostedDate": "2012-05-04T08:01:04.113-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "835385",
    "ThreadId": "341039",
    "Html": "<p>Sebastien,</p>\n<p>If possible can you share a little more how you got this to work? I'm struggling with it (using Blend 5 preview), I have used the same XAML as you shared above with the new style in App.xaml, and a new class RtAxis. However the xaml in app.xaml cannot resolve the properties of <span style=\"color: red;\">AxisOrientation&nbsp;and Ticks<span style=\"color: #000000;\"> although I spent some time trying to work out how to reference one of my own classes in the xaml so that may be the problem. The (VB) class I used is below.</span></span></p>\n<p>I appreciate its a silverlight question not a D3 question however my knowledge isn't sufficient to work out what is needed.</p>\n<p>Merci.</p>\n<p>app.xaml snippets</p>\n<p>&nbsp;<span style=\"color: #c0c0c0;\">&nbsp;<span style=\"color: #808080;\">xmlns:DMS=\"clr-namespace:HA_Client_SL5\"</span></span></p>\n<p><span style=\"color: #c0c0c0;\"><span style=\"color: #808080;\">.......</span></span></p>\n<div style=\"background-color: white; color: black;\">\n<pre><span style=\"color: #888888;\">&lt;DMS:RtAxis x:Name=\"PART_Axis\" AxisOrientation=\"{Binding AxisOrientation, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}\" Ticks=\"{Binding Ticks, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}\" Foreground=\"{Binding Foreground, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}\" /&gt;</span></pre>\n<pre></pre>\n<pre><span style=\"color: blue;\">Public</span> <span style=\"color: blue;\">Class</span> RtAxis\r\n\t\t<span style=\"color: blue;\">Inherits</span> Axis\r\n\t\t<span style=\"color: blue;\">Public</span> <span style=\"color: blue;\">Sub</span> <span style=\"color: blue;\">New</span>()\r\n\t\t\t<span style=\"color: blue;\">MyBase</span>.<span style=\"color: blue;\">New</span>(<span style=\"color: blue;\">New</span> CustomLabelProvider(), <span style=\"color: blue;\">New</span> TicksProvider())\r\n\t\t<span style=\"color: blue;\">End</span> <span style=\"color: blue;\">Sub</span>\r\n<span style=\"color: blue;\">End</span> <span style=\"color: blue;\">Class</span>\r\n\r\n<span style=\"color: blue;\">Public</span> <span style=\"color: blue;\">Class</span> CustomLabelProvider\r\n\t<span style=\"color: blue;\">Implements</span> ILabelProvider\r\n\t<span style=\"color: blue;\">Public</span> <span style=\"color: blue;\">Function</span> GetLabels(ticks <span style=\"color: blue;\">As</span> <span style=\"color: blue;\">Double</span>()) <span style=\"color: blue;\">As</span> FrameworkElement()\r\n\t\t<span style=\"color: blue;\">If</span> ticks <span style=\"color: blue;\">Is</span> <span style=\"color: blue;\">Nothing</span> <span style=\"color: blue;\">Then</span>\r\n\t\t\t<span style=\"color: blue;\">Throw</span> <span style=\"color: blue;\">New</span> ArgumentNullException(<span style=\"color: #a31515;\">\"ticks\"</span>)\r\n\t\t<span style=\"color: blue;\">End</span> <span style=\"color: blue;\">If</span>\r\n\t\t<span style=\"color: blue;\">Return</span> ticks.[<span style=\"color: blue;\">Select</span>](<span style=\"color: blue;\">Function</span>(num) <span style=\"color: blue;\">New</span> TextBlock() <span style=\"color: blue;\">With</span> { _\r\n\t\t\t\t.Text = DateTime.FromFileTimeUtc(<span style=\"color: blue;\">CLng</span>(num)).ToString(<span style=\"color: #a31515;\">\"dd\"</span>)}).ToArray()\r\n\t<span style=\"color: blue;\">End</span> <span style=\"color: blue;\">Function</span>\r\n<span style=\"color: blue;\">End</span> <span style=\"color: blue;\">Class</span>\r\n</pre>\n</div>",
    "PostedDate": "2012-05-11T21:19:03.047-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]