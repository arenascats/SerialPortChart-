[
  {
    "Id": "254857",
    "ThreadId": "74496",
    "Html": "<p>I understand that you can bind a line graph to a data source in the ViewModel (as shown below), but there doesn't seem to be a way to bind a list of IPointDataSource source objects (each with a different description and stroke pen) &nbsp;from the ViewModel. &nbsp;I am guessing that the ChartPlotter would need to act like a ItemPresenter with support for ItemTemplate in order to pull this off. &nbsp;Is there something that I am missing that can be used to do this?</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">d3</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">ChartPlotter</span> <span style=\"color:Red\">Name</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">plotter</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">&gt;</span>\r\n\t<span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">d3</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">LineGraph</span> <span style=\"color:Red\">DataSource</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{Binding Data}</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">&gt;</span>\r\n\t\t<span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">d3</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">LineGraph.Filters</span><span style=\"color:Blue\">&gt;</span>\r\n\t\t\t<span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">d3</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">InclinationFilter</span> <span style=\"color:Blue\">/&gt;</span>\r\n\t\t\t<span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">d3</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">FrequencyFilter</span> <span style=\"color:Blue\">/&gt;</span>\r\n\t\t<span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">d3</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">LineGraph.Filters</span><span style=\"color:Blue\">&gt;</span>\r\n\t<span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">d3</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">LineGraph</span><span style=\"color:Blue\">&gt;</span>\r\n\r\n\t<span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">d3</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">DefaultContextMenu</span> <span style=\"color:Blue\">/&gt;</span>\r\n<span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">d3</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">ChartPlotter</span><span style=\"color:Blue\">&gt;</span>\r\n</pre>\r\n</div>\r\n<p>mike</p>\r\n<p>&nbsp;</p>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&lt;d3:ChartPlotter Name=&quot;plotter&quot;&gt;</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>&lt;d3:LineGraph DataSource=&quot;{Binding Data}&quot;&gt;</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>&lt;d3:LineGraph.Filters&gt;</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>&lt;d3:InclinationFilter /&gt;</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>&lt;d3:FrequencyFilter /&gt;</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>&lt;/d3:LineGraph.Filters&gt;</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>&lt;/d3:LineGraph&gt;</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>&lt;d3:DefaultContextMenu /&gt;</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>&lt;/d3:ChartPlotter&gt;</div>",
    "PostedDate": "2009-11-08T17:56:42.373-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "254902",
    "ThreadId": "74496",
    "Html": "<p>I played around a little more with this and think I found a decent solution. &nbsp; First I tried to use an ItemsControl with a ChartPlotter ItemsPanel, but since ChartPlotter doesn't descend from Panel, that didn't work. &nbsp;So I figured it would probably just be easier to write a ItemsControl-type chart.</p>\r\n<p>The result is a new Control called ChartItemsControl that can be used to bind to a collection that is IEnumerable&lt;IPlotterElement&gt;. &nbsp;This allows dynamic updating via a ViewModel of not only the line graphs but Context menu, mouse interaction, etc. &nbsp;In addition, children can still be specified in the XAML view and be preserved across changes to ItemsSource. &nbsp;Used something like this...</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">d3</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">ChartItemsControl</span> <span style=\"color:Red\">ItemsSource</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{Binding Path=ChartChildren}</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">&gt;</span>\r\n  <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">d3</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">DefaultContextMenu</span> <span style=\"color:Blue\">/&gt;</span>\r\n<span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">d3</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">ChartItemsControl</span><span style=\"color:Blue\">&gt;</span>\r\n</pre>\r\n</div>\r\n<p>I uploaded the path to codeplex, so take a look and see what you think. &nbsp;I am still cleaning up a sample if that will be of assistance.</p>\r\n<p>Thanks for a great library,</p>\r\n<p>mike</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2009-11-08T21:43:52.793-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "258350",
    "ThreadId": "74496",
    "Html": "<p>Hi Mike!</p>\r\n<p>I'm looking exactly for that, take a look in my question: <a href=\"http://dynamicdatadisplay.codeplex.com/Thread/View.aspx?ThreadId=63633\">http://dynamicdatadisplay.codeplex.com/Thread/View.aspx?ThreadId=63633</a>&nbsp;(last reply as for 18/11/2009).</p>\r\n<p>Could you please provide me the code?</p>\r\n<p>Thanks a lot in advance,</p>\r\n<p>Andr&eacute;</p>",
    "PostedDate": "2009-11-18T09:12:34.477-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "258363",
    "ThreadId": "74496",
    "Html": "<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"font-family:'Segoe UI', 'Microsoft Sans Serif', Arial, Geneva, sans-serif\"><span style=\"white-space:normal\">I moved away from having a separate control that did it and added it directly to the chart control, now you just</span></span></pre>\r\n<pre><span style=\"font-family:'Segoe UI', 'Microsoft Sans Serif', Arial, Geneva, sans-serif\"><span style=\"white-space:normal\"><div style=\"color:Black;background-color:White\"><pre><span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">ChartPlotter</span> <span style=\"color:Red\">ItemsSource</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{Binding Charts}</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Blue\">/&gt;</span></pre>\r\n<pre><span style=\"color:#0000ff\"><br></span></pre>\r\n</div>\r\n</span></span></pre>\r\n<pre><span style=\"font-family:'Segoe UI', 'Microsoft Sans Serif', Arial, Geneva, sans-serif;white-space:normal\">In the source directory under Stable\\v0.3.1\\src\\DynamicDataDisplay\\Common&nbsp;add the following code to the bottom of the Plotter&nbsp;class in Plotter.cs (sorry for the inline code, but I can't figure out how to do an attachment...) &nbsp;Of course I have not&nbsp;rigorously&nbsp;tested it, but have been using this for a week or so and has held up so far. &nbsp;Let me know if you have any problems and I'll see what I can do to fix them.</span></pre>\r\n<pre><span style=\"font-family:'Segoe UI', 'Microsoft Sans Serif', Arial, Geneva, sans-serif\"><span style=\"white-space:normal\"><br></span></span></pre>\r\n<pre><span style=\"font-family:'Segoe UI', 'Microsoft Sans Serif', Arial, Geneva, sans-serif\"><span style=\"white-space:normal\">mike</span></span></pre>\r\n<pre><span style=\"font-family:'Segoe UI', 'Microsoft Sans Serif', Arial, Geneva, sans-serif\"><span style=\"white-space:normal\"><br></span></span></pre>\r\n<pre><span style=\"font-family:'Segoe UI', 'Microsoft Sans Serif', Arial, Geneva, sans-serif\"><span style=\"white-space:normal\"><div style=\"color:Black;background-color:White\"><pre><span style=\"color:Blue\">#region</span> Items Source\r\n\r\n<span style=\"color:Blue\">public</span> <span style=\"color:Blue\">static</span> DependencyProperty ItemsSourceProperty = DependencyProperty.Register(<span style=\"color:#A31515\">&quot;ItemsSource&quot;</span>, <span style=\"color:Blue\">typeof</span>(IEnumerable), <span style=\"color:Blue\">typeof</span>(Plotter), <span style=\"color:Blue\">new</span> FrameworkPropertyMetadata(<span style=\"color:Blue\">null</span>, <span style=\"color:Blue\">new</span> PropertyChangedCallback(OnItemsSourceChanged)));\r\n\r\n[DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden), Bindable(<span style=\"color:Blue\">true</span>)]\r\n<span style=\"color:Blue\">public</span> IEnumerable ItemsSource\r\n{\r\n  <span style=\"color:Blue\">get</span>\r\n  {\r\n    <span style=\"color:Blue\">return</span> (IEnumerable)GetValue(ItemsSourceProperty);\r\n  }\r\n  <span style=\"color:Blue\">set</span>\r\n  {\r\n    <span style=\"color:Blue\">if</span>(value == <span style=\"color:Blue\">null</span>)\r\n      ClearValue(ItemsSourceProperty);\r\n    <span style=\"color:Blue\">else</span>\r\n      SetValue(ItemsSourceProperty, value);\r\n  }\r\n}\r\n\r\n<span style=\"color:Blue\">private</span> <span style=\"color:Blue\">static</span> <span style=\"color:Blue\">void</span> OnItemsSourceChanged(DependencyObject d, DependencyPropertyChangedEventArgs e)\r\n{\r\n  Plotter control = (Plotter)d;\r\n  IEnumerable oldValue = (IEnumerable)e.OldValue;\r\n  IEnumerable newValue = (IEnumerable)e.NewValue;\r\n\r\n  <span style=\"color:Blue\">if</span>(e.NewValue == <span style=\"color:Blue\">null</span>)\r\n    control.ClearItemsSource();\r\n  <span style=\"color:Blue\">else</span>\r\n    control.SetItemsSource(newValue);\r\n}\r\n\r\n<span style=\"color:Blue\">private</span> List&lt;IPlotterElement&gt; _elementsInItemsSource = <span style=\"color:Blue\">new</span> List&lt;IPlotterElement&gt;();\r\n<span style=\"color:Blue\">private</span> IEnumerable _itemsSource = <span style=\"color:Blue\">null</span>;\r\n\r\n<span style=\"color:Blue\">private</span> <span style=\"color:Blue\">void</span> ClearItemsSource()\r\n{\r\n  <span style=\"color:Blue\">if</span>(_itemsSource != <span style=\"color:Blue\">null</span> &amp;&amp; _itemsSource <span style=\"color:Blue\">is</span> INotifyCollectionChanged)\r\n    (_itemsSource <span style=\"color:Blue\">as</span> INotifyCollectionChanged).CollectionChanged -= ItemsSourceCollectionChanged;\r\n\r\n  <span style=\"color:Green\">//remove the elements that were added from the items source (create a copy since RemoveItemSourceChild changes the enumeration)</span>\r\n  List&lt;IPlotterElement&gt; removes = <span style=\"color:Blue\">new</span> List&lt;IPlotterElement&gt;(_elementsInItemsSource);\r\n  <span style=\"color:Blue\">foreach</span>(IPlotterElement elem <span style=\"color:Blue\">in</span> removes)\r\n    RemoveItemSourceChild(elem);\r\n\r\n  _elementsInItemsSource.Clear();\r\n}\r\n\r\n<span style=\"color:Blue\">private</span> <span style=\"color:Blue\">void</span> SetItemsSource(IEnumerable list)\r\n{\r\n  ClearItemsSource();\r\n\r\n  <span style=\"color:Blue\">foreach</span>(<span style=\"color:Blue\">object</span> o <span style=\"color:Blue\">in</span> list)\r\n  {\r\n    <span style=\"color:Blue\">if</span>(o <span style=\"color:Blue\">is</span> IPlotterElement)\r\n      AddItemSourceChild(o <span style=\"color:Blue\">as</span> IPlotterElement);\r\n  }\r\n\r\n  _itemsSource = list;\r\n  <span style=\"color:Blue\">if</span>(_itemsSource <span style=\"color:Blue\">is</span> INotifyCollectionChanged)\r\n    (_itemsSource <span style=\"color:Blue\">as</span> INotifyCollectionChanged).CollectionChanged += ItemsSourceCollectionChanged;\r\n}\r\n\r\n<span style=\"color:Blue\">private</span> <span style=\"color:Blue\">void</span> RemoveItemSourceChild(IPlotterElement elem)\r\n{\r\n  Children.Remove(elem);\r\n  <span style=\"color:Green\">//it's not in the plotter anymore</span>\r\n  _elementsInItemsSource.Remove(elem);\r\n}\r\n\r\n<span style=\"color:Blue\">private</span> <span style=\"color:Blue\">void</span> AddItemSourceChild(IPlotterElement elem)\r\n{\r\n  Children.Add(elem);\r\n  <span style=\"color:Green\">//it's in the plotter not</span>\r\n  _elementsInItemsSource.Add(elem);\r\n}\r\n\r\n<span style=\"color:Blue\">private</span> <span style=\"color:Blue\">void</span> ItemsSourceCollectionChanged(<span style=\"color:Blue\">object</span> sender, NotifyCollectionChangedEventArgs e)\r\n{\r\n  <span style=\"color:Blue\">if</span>(e.OldItems != <span style=\"color:Blue\">null</span>)\r\n  {\r\n    <span style=\"color:Blue\">foreach</span>(<span style=\"color:Blue\">object</span> o <span style=\"color:Blue\">in</span> e.OldItems)\r\n    {\r\n      <span style=\"color:Blue\">if</span>(o <span style=\"color:Blue\">is</span> IPlotterElement)\r\n        RemoveItemSourceChild(o <span style=\"color:Blue\">as</span> IPlotterElement);\r\n    }\r\n  }\r\n\r\n  <span style=\"color:Blue\">if</span>(e.NewItems != <span style=\"color:Blue\">null</span>)\r\n  {\r\n    <span style=\"color:Blue\">foreach</span>(<span style=\"color:Blue\">object</span> o <span style=\"color:Blue\">in</span> e.NewItems)\r\n    {\r\n      <span style=\"color:Blue\">if</span>(o <span style=\"color:Blue\">is</span> IPlotterElement)\r\n        AddItemSourceChild(o <span style=\"color:Blue\">as</span> IPlotterElement);\r\n    }\r\n  }\r\n}\r\n\r\n<span style=\"color:Blue\">#endregion</span>\r\n\r\n</pre>\r\n</div>\r\n<br></span></span></pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>#region Items Source</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>public static DependencyProperty ItemsSourceProperty = DependencyProperty.Register(&quot;ItemsSource&quot;, typeof(IEnumerable), typeof(Plotter), new FrameworkPropertyMetadata(null, new PropertyChangedCallback(OnItemsSourceChanged)));</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>[DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden), Bindable(true)]</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>public IEnumerable ItemsSource</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>{</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>get</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>{</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>return (IEnumerable)GetValue(ItemsSourceProperty);</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>}</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>set</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>{</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>if(value == null)</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>ClearValue(ItemsSourceProperty);</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>else</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>SetValue(ItemsSourceProperty, value);</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>}</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>}</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>private static void OnItemsSourceChanged(DependencyObject d, DependencyPropertyChangedEventArgs e)</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>{</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>Plotter control = (Plotter)d;</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>IEnumerable oldValue = (IEnumerable)e.OldValue;</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>IEnumerable newValue = (IEnumerable)e.NewValue;</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>if(e.NewValue == null)</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>control.ClearItemsSource();</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>else</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>control.SetItemsSource(newValue);</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>}</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>private List&lt;IPlotterElement&gt; _elementsInItemsSource = new List&lt;IPlotterElement&gt;();</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>private IEnumerable _itemsSource = null;</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>private void ClearItemsSource()</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>{</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>if(_itemsSource != null &amp;&amp; _itemsSource is INotifyCollectionChanged)</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>(_itemsSource as INotifyCollectionChanged).CollectionChanged -= ItemsSourceCollectionChanged;</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>//remove the elements that were added from the items source (create a copy since RemoveItemSourceChild changes the enumeration)</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>List&lt;IPlotterElement&gt; removes = new List&lt;IPlotterElement&gt;(_elementsInItemsSource);</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>foreach(IPlotterElement elem in removes)</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>RemoveItemSourceChild(elem);</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>_elementsInItemsSource.Clear();</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>}</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>private void SetItemsSource(IEnumerable list)</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>{</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>ClearItemsSource();</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>foreach(object o in list)</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>{</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>if(o is IPlotterElement)</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>AddItemSourceChild(o as IPlotterElement);</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>}</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>_itemsSource = list;</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>if(_itemsSource is INotifyCollectionChanged)</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>(_itemsSource as INotifyCollectionChanged).CollectionChanged += ItemsSourceCollectionChanged;</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>}</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>private void RemoveItemSourceChild(IPlotterElement elem)</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>{</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>Children.Remove(elem);</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>//it's not in the plotter anymore</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>_elementsInItemsSource.Remove(elem);</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>}</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>private void AddItemSourceChild(IPlotterElement elem)</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>{</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>Children.Add(elem);</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>//it's in the plotter not</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>_elementsInItemsSource.Add(elem);</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>}</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>private void ItemsSourceCollectionChanged(object sender, NotifyCollectionChangedEventArgs e)</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>{</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>if(e.OldItems != null)</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>{</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>foreach(object o in e.OldItems)</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>{</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>if(o is IPlotterElement)</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>RemoveItemSourceChild(o as IPlotterElement);</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>}</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>}</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>if(e.NewItems != null)</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>{</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>foreach(object o in e.NewItems)</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>{</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>if(o is IPlotterElement)</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>AddItemSourceChild(o as IPlotterElement);</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>}</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>}</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>}</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>#endregion</div>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2009-11-18T09:52:16.293-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "264886",
    "ThreadId": "74496",
    "Html": "<p>Hi Mike,</p>\r\n<p>Thanks a lot for the code, really appreciated.</p>\r\n<p>Cheers,</p>\r\n<p>Andr&eacute; Carlucci</p>",
    "PostedDate": "2009-12-08T04:46:51.147-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]