[
  {
    "Id": "486815",
    "ThreadId": "225408",
    "Html": "<p>Hi, i am following sample code described in http://msdn.microsoft.com/en-us/magazine/ff714591.aspx. I created data range from year 1600 to 2010. Now i want to display only 2010 data when loading first time. When user scrolls towards other dates range, then can view the data. Requirement is that it should not display all data at first time loading. I am not using ChtPlotter.Viewport.FitToView() but seems by default it will show all data. Even I dont want to map x-y axis for range of dates which i dont want to view. If i bind such huge data at first time (creating 10 line graphs), it takes very long time.</p>\r\n<p>Thanks in advance.</p>",
    "PostedDate": "2010-08-31T02:47:07.25-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "486857",
    "ThreadId": "225408",
    "Html": "<div><span style=\"font-family:Arial;font-size:x-small\">\r\n<div><span style=\"font-family:Arial\">\r\n<div><span style=\"font-family:Arial;font-size:medium\">&nbsp; Doesn't using</span></div>\r\n<div>\r\n<div style=\"background-color:white;color:black\">\r\n<pre><span style=\"font-family:Arial;font-size:medium\">plotter.Visible = <span style=\"color:blue\">new</span> DataRect(minX, minY, widthX, WidthY);</span></pre>\r\n</div>\r\n<div style=\"background-color:white;color:black\">\r\n<pre><span style=\"font-family:Arial;font-size:medium\">for the initial range not solve the problem?</span></pre>\r\n<pre><span style=\"font-family:Arial;font-size:medium\">See </span><a><span style=\"font-family:Arial;font-size:medium\">http://dynamicdatadisplay.codeplex.com/Thread/View.aspx?ThreadId=225274</span></a></pre>\r\n<pre><span style=\"font-family:Arial;font-size:medium\">David Roh</span></pre>\r\n</div>\r\n</div>\r\n</span></div>\r\n</span></div>",
    "PostedDate": "2010-08-31T04:31:25.377-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "487321",
    "ThreadId": "225408",
    "Html": "<p>I am using chart plotter with HorizontalDateTimeAxis and VerticalIntegerAxis. buginfo.txt is having data from 1900 to 2011. When chtplotter loads, it should display only 2010-2011 data. User can view rest data when scrolls.<br>\r\n<div style=\"color:black;background-color:white\">\r\n<pre> <span style=\"color:blue\">public</span> <span style=\"color:blue\">partial</span> <span style=\"color:blue\">class</span> Window1 : Window\r\n    {\r\n        <span style=\"color:blue\">public</span> Window1()\r\n        {\r\n            InitializeComponent();\r\n        }\r\n\r\n        <span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> Window_Loaded(<span style=\"color:blue\">object</span> sender, RoutedEventArgs e)\r\n        {\r\n            DisplayBugInfo();            \r\n        }\r\n\r\n        <span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> DisplayBugInfo()\r\n        {\r\n            List&lt;BugInfo&gt; bugInfoList = LoadBugInfo(<span style=\"color:#a31515\">&quot;..\\\\..\\\\BugInfo.txt&quot;</span>);\r\n            DateTime[] dates = <span style=\"color:blue\">new</span> DateTime[bugInfoList.Count];\r\n            <span style=\"color:blue\">int</span>[] numberOpen = <span style=\"color:blue\">new</span> <span style=\"color:blue\">int</span>[bugInfoList.Count];\r\n            <span style=\"color:blue\">int</span>[] numberClosed = <span style=\"color:blue\">new</span> <span style=\"color:blue\">int</span>[bugInfoList.Count];\r\n            <span style=\"color:blue\">int</span>[] numberPerformanceRating = <span style=\"color:blue\">new</span> <span style=\"color:blue\">int</span>[bugInfoList.Count];\r\n            <span style=\"color:blue\">int</span>[] numberTransitionInterval = <span style=\"color:blue\">new</span> <span style=\"color:blue\">int</span>[bugInfoList.Count];\r\n            <span style=\"color:blue\">int</span>[] numberSteps = <span style=\"color:blue\">new</span> <span style=\"color:blue\">int</span>[bugInfoList.Count];\r\n            <span style=\"color:blue\">int</span>[] numberIntegration = <span style=\"color:blue\">new</span> <span style=\"color:blue\">int</span>[bugInfoList.Count];\r\n            <span style=\"color:blue\">int</span>[] numberTestingFail = <span style=\"color:blue\">new</span> <span style=\"color:blue\">int</span>[bugInfoList.Count];\r\n            <span style=\"color:blue\">int</span>[] numberTestingSuccess = <span style=\"color:blue\">new</span> <span style=\"color:blue\">int</span>[bugInfoList.Count];\r\n            <span style=\"color:blue\">int</span>[] numberTestingPhase = <span style=\"color:blue\">new</span> <span style=\"color:blue\">int</span>[bugInfoList.Count];\r\n\r\n            <span style=\"color:blue\">for</span> (<span style=\"color:blue\">int</span> i = 0; i &lt; bugInfoList.Count; i++)\r\n            {\r\n                dates[i] = bugInfoList[i].date;\r\n\r\n                numberOpen[i] = bugInfoList[i].numberopen;\r\n                numberClosed[i] = bugInfoList[i].numberclosed;\r\n                numberPerformanceRating[i] = bugInfoList[i].PerformanceRating;\r\n                numberTransitionInterval[i] = bugInfoList[i].TransitionInterval;\r\n                numberSteps[i] = bugInfoList[i].Steps;\r\n                numberIntegration[i] = bugInfoList[i].Integration;\r\n                numberTestingFail[i] = bugInfoList[i].TestingFail;\r\n                numberTestingPhase[i] = bugInfoList[i].TestingPhase;\r\n                numberTestingSuccess[i] = bugInfoList[i].TestingSuccess;\r\n            }\r\n\r\n\r\n            <span style=\"color:green\">//i dont want to map all data initially??</span>\r\n            <span style=\"color:blue\">var</span> datesDataSource = <span style=\"color:blue\">new</span> EnumerableDataSource&lt;DateTime&gt;(dates);\r\n            datesDataSource.SetXMapping(x =&gt; DateAxis.ConvertToDouble(x));\r\n\r\n            <span style=\"color:blue\">var</span> numberOpenDataSource = <span style=\"color:blue\">new</span> EnumerableDataSource&lt;<span style=\"color:blue\">int</span>&gt;(numberOpen);\r\n            numberOpenDataSource.SetYMapping(y =&gt; y);\r\n\r\n            <span style=\"color:blue\">var</span> numberClosedDataSource = <span style=\"color:blue\">new</span> EnumerableDataSource&lt;<span style=\"color:blue\">int</span>&gt;(numberClosed);\r\n            numberClosedDataSource.SetYMapping(y =&gt; y);\r\n\r\n            <span style=\"color:blue\">var</span> numberRatingDataSource = <span style=\"color:blue\">new</span> EnumerableDataSource&lt;<span style=\"color:blue\">int</span>&gt;(numberPerformanceRating);\r\n            numberRatingDataSource.SetYMapping(y =&gt; y);\r\n\r\n            <span style=\"color:blue\">var</span> numberIntervalDataSource = <span style=\"color:blue\">new</span> EnumerableDataSource&lt;<span style=\"color:blue\">int</span>&gt;(numberTransitionInterval);\r\n            numberIntervalDataSource.SetYMapping(y =&gt; y);\r\n\r\n            <span style=\"color:blue\">var</span> numberStepsDataSource = <span style=\"color:blue\">new</span> EnumerableDataSource&lt;<span style=\"color:blue\">int</span>&gt;(numberSteps);\r\n            numberStepsDataSource.SetYMapping(y =&gt; y);\r\n\r\n            <span style=\"color:blue\">var</span> numberIntegrationDataSource = <span style=\"color:blue\">new</span> EnumerableDataSource&lt;<span style=\"color:blue\">int</span>&gt;(numberIntegration);\r\n            numberIntegrationDataSource.SetYMapping(y =&gt; y);\r\n\r\n            <span style=\"color:blue\">var</span> numberTestFailDataSource = <span style=\"color:blue\">new</span> EnumerableDataSource&lt;<span style=\"color:blue\">int</span>&gt;(numberTestingFail);\r\n            numberTestFailDataSource.SetYMapping(y =&gt; y);\r\n\r\n            <span style=\"color:blue\">var</span> numberTestPhaseDataSource = <span style=\"color:blue\">new</span> EnumerableDataSource&lt;<span style=\"color:blue\">int</span>&gt;(numberTestingPhase);\r\n            numberTestPhaseDataSource.SetYMapping(y =&gt; y);\r\n\r\n            <span style=\"color:blue\">var</span> numberTestSuccessDataSource = <span style=\"color:blue\">new</span> EnumerableDataSource&lt;<span style=\"color:blue\">int</span>&gt;(numberTestingSuccess);\r\n            numberTestSuccessDataSource.SetYMapping(y =&gt; y);            \r\n\r\n            CompositeDataSource compositedatasource1 = <span style=\"color:blue\">new</span> CompositeDataSource(datesDataSource, numberOpenDataSource);\r\n            CompositeDataSource compositedatasource2 = <span style=\"color:blue\">new</span> CompositeDataSource(datesDataSource, numberClosedDataSource);\r\n            CompositeDataSource compositedatasource3 = <span style=\"color:blue\">new</span> CompositeDataSource(datesDataSource, numberRatingDataSource);\r\n            CompositeDataSource compositedatasource4 = <span style=\"color:blue\">new</span> CompositeDataSource(datesDataSource, numberIntervalDataSource);\r\n            CompositeDataSource compositedatasource5 = <span style=\"color:blue\">new</span> CompositeDataSource(datesDataSource, numberStepsDataSource);\r\n            CompositeDataSource compositedatasource6 = <span style=\"color:blue\">new</span> CompositeDataSource(datesDataSource, numberIntegrationDataSource);\r\n            CompositeDataSource compositedatasource7 = <span style=\"color:blue\">new</span> CompositeDataSource(datesDataSource, numberTestFailDataSource);\r\n            CompositeDataSource compositedatasource8 = <span style=\"color:blue\">new</span> CompositeDataSource(datesDataSource, numberTestPhaseDataSource);\r\n            CompositeDataSource compositedatasource9 = <span style=\"color:blue\">new</span> CompositeDataSource(datesDataSource, numberTestSuccessDataSource);\r\n\r\n            ChtPlotter.AddLineGraph(compositedatasource1,\r\n                                    <span style=\"color:blue\">new</span> Pen(Brushes.Blue, 2),\r\n                                    <span style=\"color:blue\">new</span> CirclePointMarker { Size = 10.0, Fill = Brushes.Red },\r\n                                    <span style=\"color:blue\">new</span> PenDescription(<span style=\"color:#a31515\">&quot;New Bugs Open&quot;</span>));\r\n\r\n            ChtPlotter.AddLineGraph(compositedatasource2,\r\n                                    <span style=\"color:blue\">new</span> Pen(Brushes.Green, 2),\r\n                                    <span style=\"color:green\">//new TrianglePointMarker { Size = 10.0, Fill = Brushes.GreenYellow, Pen = new Pen(Brushes.Black, 2.0) },</span>\r\n                                     <span style=\"color:blue\">new</span> CirclePointMarker { Size = 10.0, Fill = Brushes.GreenYellow },\r\n                                    <span style=\"color:blue\">new</span> PenDescription(<span style=\"color:#a31515\">&quot;Number Bugs Closed&quot;</span>));\r\n\r\n            ChtPlotter.AddLineGraph(compositedatasource3,\r\n                                    <span style=\"color:blue\">new</span> Pen(Brushes.MediumPurple, 2),\r\n                                    <span style=\"color:green\">//new TrianglePointMarker { Size = 10.0, Fill = Brushes.Magenta, Pen = new Pen(Brushes.Black, 2.0) },</span>\r\n                                    <span style=\"color:blue\">new</span> CirclePointMarker { Size = 10.0, Fill = Brushes.Magenta },\r\n                                    <span style=\"color:blue\">new</span> PenDescription(<span style=\"color:#a31515\">&quot;Performance Rating&quot;</span>));\r\n\r\n            ChtPlotter.AddLineGraph(compositedatasource4,\r\n                                    <span style=\"color:blue\">new</span> Pen(Brushes.Brown, 2),\r\n                                    <span style=\"color:blue\">new</span> CirclePointMarker { Size = 10.0, Fill = Brushes.Red },\r\n                                    <span style=\"color:blue\">new</span> PenDescription(<span style=\"color:#a31515\">&quot;Number of Transition Interval&quot;</span>));\r\n\r\n            ChtPlotter.AddLineGraph(compositedatasource5,\r\n                                    <span style=\"color:blue\">new</span> Pen(Brushes.Chocolate, 2),\r\n                                    <span style=\"color:green\">//new TrianglePointMarker { Size = 10.0, Fill = Brushes.LightPink, Pen = new Pen(Brushes.Black, 2.0) },</span>\r\n                                    <span style=\"color:blue\">new</span> CirclePointMarker { Size = 10.0, Fill = Brushes.LightPink },\r\n                                    <span style=\"color:blue\">new</span> PenDescription(<span style=\"color:#a31515\">&quot;Number of Steps&quot;</span>));\r\n\r\n            ChtPlotter.AddLineGraph(compositedatasource6,\r\n                                    <span style=\"color:blue\">new</span> Pen(Brushes.DarkBlue, 2),\r\n                                    <span style=\"color:blue\">new</span> CirclePointMarker { Size = 10.0, Fill = Brushes.Red },\r\n                                    <span style=\"color:blue\">new</span> PenDescription(<span style=\"color:#a31515\">&quot;Number of Integration&quot;</span>));\r\n\r\n            ChtPlotter.AddLineGraph(compositedatasource7,\r\n                                    <span style=\"color:blue\">new</span> Pen(Brushes.DarkMagenta, 2),\r\n                                    <span style=\"color:blue\">new</span> CirclePointMarker { Size = 10.0, Fill = Brushes.Red },\r\n                                    <span style=\"color:blue\">new</span> PenDescription(<span style=\"color:#a31515\">&quot;Number of Test Failed&quot;</span>));\r\n\r\n            ChtPlotter.AddLineGraph(compositedatasource8,\r\n                                    <span style=\"color:blue\">new</span> Pen(Brushes.Orange, 2),\r\n                                    <span style=\"color:green\">//new TrianglePointMarker { Size = 10.0, Fill = Brushes.Gray, Pen = new Pen(Brushes.Black, 2.0) },</span>\r\n                                     <span style=\"color:blue\">new</span> CirclePointMarker { Size = 10.0, Fill = Brushes.Gray },\r\n                                    <span style=\"color:blue\">new</span> PenDescription(<span style=\"color:#a31515\">&quot;Number of Testing Phase&quot;</span>));\r\n\r\n            ChtPlotter.AddLineGraph(compositedatasource9,\r\n                                    <span style=\"color:blue\">new</span> Pen(Brushes.DeepPink, 2),\r\n                                    <span style=\"color:green\">//new TrianglePointMarker { Size = 10.0, Fill = Brushes.FloralWhite, Pen = new Pen(Brushes.Black, 2.0) },</span>\r\n                                     <span style=\"color:blue\">new</span> CirclePointMarker { Size = 10.0, Fill = Brushes.FloralWhite },\r\n                                    <span style=\"color:blue\">new</span> PenDescription(<span style=\"color:#a31515\">&quot;Number of Test Succeed&quot;</span>));\r\n\r\n            <span style=\"color:green\">// want to view data from 2000 to 2010. when user scrolls, then can view other data.</span>\r\n            <span style=\"color:green\">//ChtPlotter.Viewport.FitToView();            </span>\r\n            <span style=\"color:green\">//ChtPlotter.Visible = new DataRect(2000, 0, 2010, 1000);</span>\r\n        }   \r\n\r\n        <span style=\"color:blue\">private</span> <span style=\"color:blue\">static</span> List&lt;BugInfo&gt; LoadBugInfo(<span style=\"color:blue\">string</span> filename)\r\n        {\r\n            <span style=\"color:blue\">var</span> result = <span style=\"color:blue\">new</span> List&lt;BugInfo&gt;();\r\n            FileStream fs = <span style=\"color:blue\">new</span> FileStream(filename, FileMode.Open);\r\n            StreamReader sr = <span style=\"color:blue\">new</span> StreamReader(fs);\r\n            <span style=\"color:blue\">string</span> line = <span style=\"color:#a31515\">&quot;&quot;</span>;\r\n            <span style=\"color:blue\">while</span> ((line = sr.ReadLine()) != <span style=\"color:blue\">null</span>)\r\n            {\r\n                <span style=\"color:blue\">try</span>\r\n                {\r\n                    <span style=\"color:blue\">string</span>[] pieces = line.Split(<span style=\"color:#a31515\">':'</span>);\r\n                    DateTime dt = DateTime.Parse(pieces[0]);\r\n                    <span style=\"color:blue\">int</span> numopen = <span style=\"color:blue\">int</span>.Parse(pieces[1]);\r\n                    <span style=\"color:blue\">int</span> numclosed = <span style=\"color:blue\">int</span>.Parse(pieces[2]);\r\n                    <span style=\"color:blue\">int</span> numrating = <span style=\"color:blue\">int</span>.Parse(pieces[3]);\r\n                    <span style=\"color:blue\">int</span> numinterval = <span style=\"color:blue\">int</span>.Parse(pieces[4]);\r\n                    <span style=\"color:blue\">int</span> numsteps = <span style=\"color:blue\">int</span>.Parse(pieces[5]);\r\n                    <span style=\"color:blue\">int</span> numintegration = <span style=\"color:blue\">int</span>.Parse(pieces[6]);\r\n                    <span style=\"color:blue\">int</span> numtestfail = <span style=\"color:blue\">int</span>.Parse(pieces[7]);\r\n                    <span style=\"color:blue\">int</span> numtestphase = <span style=\"color:blue\">int</span>.Parse(pieces[8]);\r\n                    <span style=\"color:blue\">int</span> numtestsuccess = <span style=\"color:blue\">int</span>.Parse(pieces[9]);\r\n                    BugInfo bi = <span style=\"color:blue\">new</span> BugInfo(dt, numopen, numclosed, numrating, numinterval, numsteps,\r\n                                            numintegration, numtestfail, numtestphase, numtestsuccess);\r\n                    result.Add(bi);\r\n                }\r\n                <span style=\"color:blue\">catch</span>(Exception ex)\r\n                { <span style=\"color:blue\">throw</span>; }\r\n            }\r\n            sr.Close();\r\n            fs.Close();\r\n            <span style=\"color:blue\">return</span> result;\r\n        }     \r\n    }\r\n    \r\n    <span style=\"color:blue\">public</span> <span style=\"color:blue\">class</span> BugInfo\r\n    {\r\n        <span style=\"color:blue\">public</span> DateTime date;\r\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">int</span> numberopen;\r\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">int</span> numberclosed;\r\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">int</span> PerformanceRating;\r\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">int</span> TransitionInterval;\r\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">int</span> Steps;\r\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">int</span> Integration;\r\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">int</span> TestingFail;\r\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">int</span> TestingPhase;\r\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">int</span> TestingSuccess;\r\n\r\n        <span style=\"color:blue\">public</span> BugInfo(DateTime date, <span style=\"color:blue\">int</span> numberOpen, <span style=\"color:blue\">int</span> numberClosed, <span style=\"color:blue\">int</span> rating, <span style=\"color:blue\">int</span> interval, \r\n                        <span style=\"color:blue\">int</span> steps, <span style=\"color:blue\">int</span> integration, <span style=\"color:blue\">int</span> testfail, <span style=\"color:blue\">int</span> testphase, <span style=\"color:blue\">int</span> testsuccess)\r\n        {\r\n            <span style=\"color:blue\">this</span>.date = date;\r\n            <span style=\"color:blue\">this</span>.numberopen = numberOpen;\r\n            <span style=\"color:blue\">this</span>.numberclosed = numberClosed;\r\n            <span style=\"color:blue\">this</span>.PerformanceRating = rating;\r\n            <span style=\"color:blue\">this</span>.TransitionInterval = interval;\r\n            <span style=\"color:blue\">this</span>.Steps = steps;\r\n            <span style=\"color:blue\">this</span>.Integration = integration;\r\n            <span style=\"color:blue\">this</span>.TestingFail = testfail;\r\n            <span style=\"color:blue\">this</span>.TestingPhase = testphase;\r\n            <span style=\"color:blue\">this</span>.TestingSuccess = testsuccess;\r\n        }\r\n    }\r\n\r\n</pre>\r\n</div>\r\n<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.Steps = steps;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.Integration = integration;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.TestingFail = testfail;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.TestingPhase = testphase;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.TestingSuccess = testsuccess;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>",
    "PostedDate": "2010-08-31T19:39:50.387-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]