[
  {
    "Id": "430258",
    "ThreadId": "209121",
    "Html": "<p>Is there a way to adjust the spacing of the tick marks? I have a date time axis on the horizontal axis of the plot and it only displays a tick mark label every 12 hours. I want to adjust it so that it displays a tick mark label every 1 hour. I couldn't find a sample of how to do this in the sample code.</p>\r\n<p>Thanks</p>",
    "PostedDate": "2010-04-12T17:03:49.833-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "431124",
    "ThreadId": "209121",
    "Html": "<p>Let me ask a different question. Is there a way to force the graph to recalculate where it puts the major tick marks?</p>\r\n<p>It seems like the graph calculates the spacing between the tick marks correctly, but if you zoom in and out alot it can get in a mode where it is only showing one major tick mark on the graph. Then if you double click on the graph it zooms in a little bit and recalculates the amount of major tick marks show on the graph. I want to know how to force it to recalculate the major tick marks.</p>\r\n<p>Thanks</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2010-04-14T12:44:51.69-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "434543",
    "ThreadId": "209121",
    "Html": "<p>Hi,</p>\r\n<p>Override ModifyTicks method and</p>\r\n<div style=\"color:black;background-color:white\">\r\n<pre><span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;summary&gt;</span>\r\n    <span style=\"color:gray\">///</span><span style=\"color:green\"> This class will provide custom ticks for x axis.</span>\r\n    <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;/summary&gt;</span>\r\n    <span style=\"color:blue\">public</span> <span style=\"color:blue\">class</span> ChartCustomTicksProvider : DateTimeTicksProvider\r\n    {\r\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;summary&gt;</span>\r\n        <span style=\"color:gray\">///</span><span style=\"color:green\"> Modifies the ticks.</span>\r\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;/summary&gt;</span>\r\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;param name=&quot;ticks&quot;&gt;</span><span style=\"color:green\">The ticks list.&lt;/param&gt;</span>\r\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;param name=&quot;info&quot;&gt;</span><span style=\"color:green\">The difference in info.&lt;/param&gt;</span>\r\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;returns&gt;</span><span style=\"color:green\">The calculated ticks&lt;/returns&gt;</span>\r\n        <span style=\"color:blue\">protected</span> <span style=\"color:blue\">override</span> DateTime[] ModifyTicks(DateTime[] ticks, <span style=\"color:blue\">object</span> info)\r\n        {\r\n            <span style=\"color:blue\">if</span> (ticks[0].Ticks &gt; 0)\r\n            {\r\n                <span style=\"color:blue\">if</span> (info.Equals(DifferenceIn.Minute))\r\n                {\r\n                    <span style=\"color:blue\">var</span> largerResult = SetMinutesTicks(ticks);\r\n                    <span style=\"color:blue\">return</span> largerResult;\r\n                }\r\n                <span style=\"color:blue\">else</span> <span style=\"color:blue\">if</span> (info.Equals(DifferenceIn.Hour))\r\n                {\r\n                    <span style=\"color:blue\">var</span> largerResult = SetHoursTicks(ticks);\r\n                    <span style=\"color:blue\">return</span> largerResult;\r\n                }\r\n                <span style=\"color:blue\">else</span> <span style=\"color:blue\">if</span> (info.Equals(DifferenceIn.Day))\r\n                {\r\n                    <span style=\"color:blue\">var</span> largerResult = SetDaysTicks(ticks);\r\n                    <span style=\"color:blue\">return</span> largerResult;\r\n                }\r\n                <span style=\"color:blue\">else</span> <span style=\"color:blue\">if</span> (info.Equals(DifferenceIn.Month))\r\n                {\r\n                    <span style=\"color:blue\">var</span> largerResult = SetMonthTicks(ticks);\r\n                    <span style=\"color:blue\">return</span> largerResult;\r\n                }\r\n            }\r\n\r\n            <span style=\"color:blue\">return</span> <span style=\"color:blue\">base</span>.ModifyTicks(ticks, info);\r\n        }\r\n\r\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;summary&gt;</span>\r\n        <span style=\"color:gray\">///</span><span style=\"color:green\"> Sets the month ticks.</span>\r\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;/summary&gt;</span>\r\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;param name=&quot;ticks&quot;&gt;</span><span style=\"color:green\">The ticks.&lt;/param&gt;</span>\r\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;returns&gt;</span><span style=\"color:green\">The calculated month ticks&lt;/returns&gt;</span>\r\n        <span style=\"color:blue\">private</span> <span style=\"color:blue\">static</span> DateTime[] SetMonthTicks(DateTime[] ticks)\r\n        {\r\n            TimeSpan ts = ticks[ticks.ToList().Count - 1].Subtract(ticks[0]);\r\n            <span style=\"color:blue\">int</span> noOfTicks = 0;\r\n            <span style=\"color:blue\">int</span> factor = 1;\r\n            <span style=\"color:blue\">if</span> (ts.TotalDays &gt; 30 &amp;&amp; ts.TotalDays &lt;= 60)\r\n            {\r\n                factor = 5;\r\n                noOfTicks = (<span style=\"color:blue\">int</span>)ts.Days / factor;\r\n            }\r\n            <span style=\"color:blue\">else</span> <span style=\"color:blue\">if</span> (ts.TotalDays &gt; 60 &amp;&amp; ts.TotalDays &lt;= 120)\r\n            {\r\n                factor = 15;\r\n                noOfTicks = (<span style=\"color:blue\">int</span>)ts.Days / factor;\r\n            }\r\n            <span style=\"color:blue\">else</span> <span style=\"color:blue\">if</span> (ts.TotalDays &gt; 120 &amp;&amp; ts.TotalDays &lt;= 240)\r\n            {\r\n                factor = 30;\r\n                noOfTicks = (<span style=\"color:blue\">int</span>)ts.Days / factor;\r\n            }\r\n            <span style=\"color:blue\">else</span> <span style=\"color:blue\">if</span> (ts.TotalDays &gt; 240 &amp;&amp; ts.TotalDays &lt;= 360)\r\n            {\r\n                factor = 60;\r\n                noOfTicks = (<span style=\"color:blue\">int</span>)ts.Days / factor;\r\n            }\r\n            <span style=\"color:blue\">else</span> <span style=\"color:blue\">if</span> (ts.TotalDays &gt; 360)\r\n            {\r\n                factor = 120;\r\n                noOfTicks = (<span style=\"color:blue\">int</span>)ts.Days / factor;\r\n            }\r\n\r\n            <span style=\"color:blue\">var</span> largerResult = <span style=\"color:blue\">new</span> DateTime[noOfTicks + 2];\r\n            largerResult[0] = ticks[0];\r\n\r\n            <span style=\"color:blue\">for</span> (<span style=\"color:blue\">int</span> l = 1; l &lt; largerResult.ToList().Count; l++)\r\n            {\r\n                largerResult[l] = largerResult[l - 1].AddDays(factor);\r\n            }\r\n\r\n            <span style=\"color:blue\">return</span> largerResult;\r\n        }\r\n\r\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;summary&gt;</span>\r\n        <span style=\"color:gray\">///</span><span style=\"color:green\"> Sets the days ticks.</span>\r\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;/summary&gt;</span>\r\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;param name=&quot;ticks&quot;&gt;</span><span style=\"color:green\">The ticks.&lt;/param&gt;</span>\r\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;returns&gt;</span><span style=\"color:green\">The calculated day ticks &lt;/returns&gt;</span>\r\n        <span style=\"color:blue\">private</span> <span style=\"color:blue\">static</span> DateTime[] SetDaysTicks(DateTime[] ticks)\r\n        {\r\n            TimeSpan ts = ticks[ticks.ToList().Count - 1].Subtract(ticks[0]);\r\n            <span style=\"color:blue\">int</span> noOfTicks = 0;\r\n            <span style=\"color:blue\">int</span> factor = 1;\r\n            <span style=\"color:blue\">bool</span> minFactor = <span style=\"color:blue\">false</span>;\r\n            <span style=\"color:blue\">bool</span> daysFactor = <span style=\"color:blue\">false</span>;\r\n            <span style=\"color:blue\">if</span> (ts.TotalMinutes &gt; 1440 &amp;&amp; ts.TotalMinutes &lt;= 2880)\r\n            {\r\n                factor = 240;\r\n                noOfTicks = (<span style=\"color:blue\">int</span>)ts.TotalMinutes / factor;\r\n                minFactor = <span style=\"color:blue\">true</span>;\r\n                daysFactor = <span style=\"color:blue\">false</span>;\r\n            }\r\n            <span style=\"color:blue\">else</span> <span style=\"color:blue\">if</span> (ts.TotalMinutes &gt; 2880 &amp;&amp; ts.TotalMinutes &lt;= 7200)\r\n            {\r\n                factor = 720;\r\n                noOfTicks = (<span style=\"color:blue\">int</span>)ts.TotalMinutes / factor;\r\n                minFactor = <span style=\"color:blue\">true</span>;\r\n                daysFactor = <span style=\"color:blue\">false</span>;\r\n            }\r\n            <span style=\"color:blue\">else</span> <span style=\"color:blue\">if</span> (ts.TotalDays &gt; 5 &amp;&amp; ts.TotalDays &lt;= 14)\r\n            {\r\n                factor = 1;\r\n                noOfTicks = (<span style=\"color:blue\">int</span>)ts.TotalDays / factor;\r\n                minFactor = <span style=\"color:blue\">false</span>;\r\n                daysFactor = <span style=\"color:blue\">true</span>;\r\n            }\r\n            <span style=\"color:blue\">else</span> <span style=\"color:blue\">if</span> (ts.TotalDays &gt; 14 &amp;&amp; ts.TotalDays &lt;= 30)\r\n            {\r\n                factor = 2;\r\n                noOfTicks = (<span style=\"color:blue\">int</span>)ts.TotalDays / factor;\r\n                minFactor = <span style=\"color:blue\">false</span>;\r\n                daysFactor = <span style=\"color:blue\">true</span>;\r\n            }\r\n            <span style=\"color:blue\">else</span> <span style=\"color:blue\">if</span> (ts.TotalDays &gt; 30)\r\n            {\r\n                factor = 2;\r\n                noOfTicks = (<span style=\"color:blue\">int</span>)ts.TotalDays / factor;\r\n                minFactor = <span style=\"color:blue\">false</span>;\r\n                daysFactor = <span style=\"color:blue\">true</span>;\r\n            }\r\n\r\n            <span style=\"color:blue\">var</span> largerResult = <span style=\"color:blue\">new</span> DateTime[noOfTicks + 2];\r\n            largerResult[0] = ticks[0];\r\n            <span style=\"color:blue\">if</span> (minFactor &amp;&amp; !daysFactor)\r\n            {\r\n                <span style=\"color:blue\">for</span> (<span style=\"color:blue\">int</span> l = 1; l &lt; largerResult.ToList().Count; l++)\r\n                {\r\n                    largerResult[l] = largerResult[l - 1].AddMinutes(factor);\r\n                }\r\n            }\r\n            <span style=\"color:blue\">else</span> <span style=\"color:blue\">if</span> (!minFactor &amp;&amp; daysFactor)\r\n            {\r\n                <span style=\"color:blue\">for</span> (<span style=\"color:blue\">int</span> l = 1; l &lt; largerResult.ToList().Count; l++)\r\n                {\r\n                    largerResult[l] = largerResult[l - 1].AddDays(factor);\r\n                }\r\n            }\r\n\r\n            <span style=\"color:blue\">return</span> largerResult;\r\n        }\r\n\r\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;summary&gt;</span>\r\n        <span style=\"color:gray\">///</span><span style=\"color:green\"> Sets the hours ticks.</span>\r\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;/summary&gt;</span>\r\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;param name=&quot;ticks&quot;&gt;</span><span style=\"color:green\">The ticks.&lt;/param&gt;</span>\r\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;returns&gt;</span><span style=\"color:green\">The calculated hour ticks&lt;/returns&gt;</span>\r\n        <span style=\"color:blue\">private</span> <span style=\"color:blue\">static</span> DateTime[] SetHoursTicks(DateTime[] ticks)\r\n        {\r\n            TimeSpan ts = ticks[ticks.ToList().Count - 1].Subtract(ticks[0]);\r\n            <span style=\"color:blue\">int</span> noOfTicks = 0;\r\n            <span style=\"color:blue\">int</span> factor = 1;\r\n            <span style=\"color:blue\">if</span> (ts.TotalMinutes &gt; 60 &amp;&amp; ts.TotalMinutes &lt;= 90)\r\n            {\r\n                factor = 10;\r\n                noOfTicks = (<span style=\"color:blue\">int</span>)ts.TotalMinutes / factor;\r\n            }\r\n            <span style=\"color:blue\">else</span> <span style=\"color:blue\">if</span> (ts.TotalMinutes &gt; 90 &amp;&amp; ts.TotalMinutes &lt;= 120)\r\n            {\r\n                factor = 15;\r\n                noOfTicks = (<span style=\"color:blue\">int</span>)ts.TotalMinutes / factor;\r\n            }\r\n            <span style=\"color:blue\">else</span> <span style=\"color:blue\">if</span> (ts.TotalMinutes &gt; 120 &amp;&amp; ts.TotalMinutes &lt;= 200)\r\n            {\r\n                factor = 20;\r\n                noOfTicks = (<span style=\"color:blue\">int</span>)ts.TotalMinutes / factor;\r\n            }\r\n            <span style=\"color:blue\">else</span> <span style=\"color:blue\">if</span> (ts.TotalMinutes &gt; 200 &amp;&amp; ts.TotalMinutes &lt;= 300)\r\n            {\r\n                factor = 30;\r\n                noOfTicks = (<span style=\"color:blue\">int</span>)ts.TotalMinutes / factor;\r\n            }\r\n            <span style=\"color:blue\">else</span> <span style=\"color:blue\">if</span> (ts.TotalMinutes &gt; 300 &amp;&amp; ts.TotalMinutes &lt;= 540)\r\n            {\r\n                factor = 60;\r\n                noOfTicks = (<span style=\"color:blue\">int</span>)ts.TotalMinutes / factor;\r\n            }\r\n            <span style=\"color:blue\">else</span> <span style=\"color:blue\">if</span> (ts.TotalMinutes &gt; 540 &amp;&amp; ts.TotalMinutes &lt;= 720)\r\n            {\r\n                factor = 90;\r\n                noOfTicks = (<span style=\"color:blue\">int</span>)ts.TotalMinutes / factor;\r\n            }\r\n            <span style=\"color:blue\">else</span> <span style=\"color:blue\">if</span> (ts.TotalMinutes &gt; 720 &amp;&amp; ts.TotalMinutes &lt;= 960)\r\n            {\r\n                factor = 120;\r\n                noOfTicks = (<span style=\"color:blue\">int</span>)ts.TotalMinutes / factor;\r\n            }\r\n            <span style=\"color:blue\">else</span> <span style=\"color:blue\">if</span> (ts.TotalMinutes &gt; 960 &amp;&amp; ts.TotalMinutes &lt;= 1440)\r\n            {\r\n                factor = 180;\r\n                noOfTicks = (<span style=\"color:blue\">int</span>)ts.TotalMinutes / factor;\r\n            }\r\n            <span style=\"color:blue\">else</span> <span style=\"color:blue\">if</span> (ts.TotalMinutes &gt; 1440)\r\n            {\r\n                factor = 240;\r\n                noOfTicks = (<span style=\"color:blue\">int</span>)ts.TotalMinutes / factor;\r\n            }\r\n\r\n            <span style=\"color:blue\">var</span> largerResult = <span style=\"color:blue\">new</span> DateTime[noOfTicks + 2];\r\n            largerResult[0] = ticks[0];\r\n\r\n            <span style=\"color:blue\">for</span> (<span style=\"color:blue\">int</span> l = 1; l &lt; largerResult.ToList().Count; l++)\r\n            {\r\n                largerResult[l] = largerResult[l - 1].AddMinutes(factor);\r\n            }\r\n\r\n            <span style=\"color:blue\">return</span> largerResult;\r\n        }\r\n\r\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;summary&gt;</span>\r\n        <span style=\"color:gray\">///</span><span style=\"color:green\"> Sets the minutes ticks.</span>\r\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;/summary&gt;</span>\r\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;param name=&quot;ticks&quot;&gt;</span><span style=\"color:green\">The ticks.&lt;/param&gt;</span>\r\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;returns&gt;</span><span style=\"color:green\">The calculated minutes ticks&lt;/returns&gt;</span>\r\n        <span style=\"color:blue\">private</span> <span style=\"color:blue\">static</span> DateTime[] SetMinutesTicks(DateTime[] ticks)\r\n        {\r\n            TimeSpan ts = ticks[ticks.ToList().Count - 1].Subtract(ticks[0]);\r\n            <span style=\"color:blue\">int</span> noOfTicks = 0;\r\n            <span style=\"color:blue\">int</span> factor = 1;\r\n            <span style=\"color:blue\">bool</span> secondsFactor = <span style=\"color:blue\">false</span>;\r\n            <span style=\"color:blue\">if</span> (ts.TotalMinutes &lt;= 3)\r\n            {\r\n                secondsFactor = <span style=\"color:blue\">true</span>;\r\n                factor = 30;\r\n                noOfTicks = (<span style=\"color:blue\">int</span>)ts.TotalSeconds / factor;\r\n            }\r\n            <span style=\"color:blue\">else</span> <span style=\"color:blue\">if</span> (ts.TotalMinutes &gt; 3 &amp;&amp; ts.TotalMinutes &lt;= 6)\r\n            {\r\n                factor = 1;\r\n                noOfTicks = (<span style=\"color:blue\">int</span>)ts.TotalMinutes / factor;\r\n                secondsFactor = <span style=\"color:blue\">false</span>;\r\n            }\r\n            <span style=\"color:blue\">else</span> <span style=\"color:blue\">if</span> (ts.TotalMinutes &gt; 6 &amp;&amp; ts.TotalMinutes &lt;= 12)\r\n            {\r\n                factor = 2;\r\n                noOfTicks = (<span style=\"color:blue\">int</span>)ts.TotalMinutes / factor;\r\n                secondsFactor = <span style=\"color:blue\">false</span>;\r\n            }\r\n            <span style=\"color:blue\">else</span> <span style=\"color:blue\">if</span> (ts.TotalMinutes &gt; 12 &amp;&amp; ts.TotalMinutes &lt;= 24)\r\n            {\r\n                factor = 3;\r\n                noOfTicks = (<span style=\"color:blue\">int</span>)ts.TotalMinutes / factor;\r\n                secondsFactor = <span style=\"color:blue\">false</span>;\r\n            }\r\n            <span style=\"color:blue\">else</span> <span style=\"color:blue\">if</span> (ts.TotalMinutes &gt; 24 &amp;&amp; ts.TotalMinutes &lt;= 45)\r\n            {\r\n                factor = 5;\r\n                noOfTicks = (<span style=\"color:blue\">int</span>)ts.TotalMinutes / factor;\r\n                secondsFactor = <span style=\"color:blue\">false</span>;\r\n            }\r\n            <span style=\"color:blue\">else</span> <span style=\"color:blue\">if</span> (ts.TotalMinutes &gt; 45 &amp;&amp; ts.TotalMinutes &lt; 60)\r\n            {\r\n                factor = 6;\r\n                noOfTicks = (<span style=\"color:blue\">int</span>)ts.TotalMinutes / factor;\r\n                secondsFactor = <span style=\"color:blue\">false</span>;\r\n            }\r\n            <span style=\"color:blue\">else</span> <span style=\"color:blue\">if</span> (ts.TotalMinutes &gt;= 60)\r\n            {\r\n                factor = 10;\r\n                noOfTicks = (<span style=\"color:blue\">int</span>)ts.TotalMinutes / factor;\r\n                secondsFactor = <span style=\"color:blue\">false</span>;\r\n            }\r\n\r\n            <span style=\"color:blue\">var</span> largerResult = <span style=\"color:blue\">new</span> DateTime[noOfTicks + 2];\r\n            largerResult[0] = ticks[0];\r\n\r\n            <span style=\"color:blue\">if</span> (secondsFactor)\r\n            {\r\n                <span style=\"color:blue\">for</span> (<span style=\"color:blue\">int</span> l = 1; l &lt; largerResult.ToList().Count; l++)\r\n                {\r\n                    largerResult[l] = largerResult[l - 1].AddSeconds(factor);\r\n                }\r\n            }\r\n            <span style=\"color:blue\">else</span>\r\n            {\r\n                <span style=\"color:blue\">for</span> (<span style=\"color:blue\">int</span> l = 1; l &lt; largerResult.ToList().Count; l++)\r\n                {\r\n                    largerResult[l] = largerResult[l - 1].AddMinutes(factor);\r\n                }\r\n            }\r\n\r\n            <span style=\"color:blue\">return</span> largerResult;\r\n        }\r\n    }\r\n</pre>\r\n<pre>And in XAML </pre>\r\n<pre style=\"color:black;background-color:white\"><pre><span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">c</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">ChartPlotter</span><span style=\"color:blue\">&gt;</span>\r\n   <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">c</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">ChartPlotter.MainHorizontalAxis</span><span style=\"color:blue\">&gt;</span>\r\n        <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">c</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">HorizontalDateTimeAxis</span> <span style=\"color:red\">x:Name</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">dateAxis</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">&gt;</span>\r\n              <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">c</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">HorizontalDateTimeAxis.TicksProvider</span><span style=\"color:blue\">&gt;</span>\r\n                     <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">chart</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">ChartCustomTicksProvider</span><span style=\"color:blue\">/&gt;</span>\r\n              <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">c</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">HorizontalDateTimeAxis.TicksProvider</span><span style=\"color:blue\">&gt;</span>\r\n        <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">c</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">HorizontalDateTimeAxis</span><span style=\"color:blue\">&gt;</span>\r\n   <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">c</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">ChartPlotter.MainHorizontalAxis</span><span style=\"color:blue\">&gt;</span>\r\n<span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">c</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">ChartPlotter</span><span style=\"color:blue\">&gt;</span>\r\n</pre>\r\n<pre>This will help</pre>\r\n<pre>refer DevSamples\\AxesApp</pre>\r\n<pre>Regards</pre>\r\n<pre>Ravi.Battula</pre>\r\n</pre>\r\n</div>",
    "PostedDate": "2010-04-23T02:36:58.143-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "566756",
    "ThreadId": "209121",
    "Html": "<p>Ravi,</p>\r\n<p>&nbsp;</p>\r\n<p>In this ModifyTicks function, base.ModifyTicks(ticks, info); is not found in base class.</p>",
    "PostedDate": "2011-02-15T14:09:43.563-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "566869",
    "ThreadId": "209121",
    "Html": "<p>Hi,</p>\r\n<p>Which version are you using.</p>\r\n<p>I used some old version. Check ﻿﻿ \"DateTimeTicksProvider\" class name properly. They might have changes the name.</p>\r\n<p>Regards</p>\r\n<p>Ravi.</p>",
    "PostedDate": "2011-02-15T18:22:58.243-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "859252",
    "ThreadId": "209121",
    "Html": "<p>Hi Ravi,</p>\r\n<p>It looks like ModifyTicks() no longer exists in DateTimeTicksProvider and I cannot find a similar method with a different name. Any update on this thread?<br /><br />Thanks,</p>\r\n<p>Evan</p>",
    "PostedDate": "2012-07-09T09:30:08.023-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]