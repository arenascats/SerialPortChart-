[
  {
    "Id": "981628",
    "ThreadId": "427997",
    "Html": "\r\n<p>I do not know what happen to new version D3, but the real time performance become bad. I use the old version DynamicDataDisplay libraby in&nbsp;Stable folder It is OK, but when I use&nbsp;DynamicDataDisplay libraby in&nbsp;Nightly floder. The horizontal\r\n axis flicks very heavy.Could some one can give me an explain? &nbsp;code as follow.\r\n</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">public</span> <span style=\"color:blue\">partial</span> <span style=\"color:blue\">class</span> Window1 : Window\r\n    {\r\n        <span style=\"color:blue\">double</span> phase = 0;\r\n\r\n        <span style=\"color:blue\">readonly</span> <span style=\"color:blue\">double</span>[] animatedX = <span style=\"color:blue\">new</span> <span style=\"color:blue\">double</span>[1000];\r\n        <span style=\"color:blue\">readonly</span> <span style=\"color:blue\">double</span>[] animatedY = <span style=\"color:blue\">new</span> <span style=\"color:blue\">double</span>[1000];\r\n        EnumerableDataSource&lt;<span style=\"color:blue\">double</span>&gt; animatedDataSource = <span style=\"color:blue\">null</span>;\r\n        EnumerableDataSource&lt;<span style=\"color:blue\">double</span>&gt; xSrc = <span style=\"color:blue\">null</span>;\r\n\r\n        DispatcherTimer timer = <span style=\"color:blue\">new</span> DispatcherTimer\r\n        {\r\n            Interval = TimeSpan.FromMilliseconds(100)\r\n        };\r\n\r\n        <span style=\"color:blue\">public</span> Window1()\r\n        {\r\n            InitializeComponent();\r\n            Loaded &#43;= <span style=\"color:blue\">new</span> RoutedEventHandler(Window1_Loaded);\r\n        }\r\n\r\n        <span style=\"color:blue\">void</span> Window1_Loaded(<span style=\"color:blue\">object</span> sender, RoutedEventArgs e)\r\n        {\r\n            <span style=\"color:blue\">for</span> (<span style=\"color:blue\">int</span> i = 0; i &lt; animatedX.Length; i&#43;&#43;)\r\n            {\r\n                animatedX[i] = 2 * Math.PI * i / animatedX.Length&#43;phase;\r\n                animatedY[i] = Math.Sin(animatedX[i]);\r\n            }\r\n            xSrc = <span style=\"color:blue\">new</span> EnumerableDataSource&lt;<span style=\"color:blue\">double</span>&gt;(animatedX);\r\n            xSrc.SetXMapping(x =&gt; x);\r\n            animatedDataSource = <span style=\"color:blue\">new</span> EnumerableDataSource&lt;<span style=\"color:blue\">double</span>&gt;(animatedY);\r\n            animatedDataSource.SetYMapping(y =&gt; y);\r\n\r\n            <span style=\"color:green\">// Adding graph to plotter</span>\r\n            CompositeDataSource ds=<span style=\"color:blue\">new</span> CompositeDataSource(xSrc, animatedDataSource);\r\n            plotter.AddLineGraph(ds,\r\n                <span style=\"color:blue\">new</span> Pen(Brushes.Magenta, 3),\r\n                <span style=\"color:blue\">new</span> PenDescription(<span style=\"color:#a31515\">&quot;Sin(x &#43; phase)&quot;</span>));\r\n\r\n            timer.Tick &#43;= <span style=\"color:blue\">new</span> EventHandler(timer_Tick);\r\n            timer.Start();\r\n        }\r\n\r\n        <span style=\"color:blue\">void</span> timer_Tick(<span style=\"color:blue\">object</span> sender, EventArgs e)\r\n        {\r\n            phase &#43;= 0.05;\r\n            <span style=\"color:blue\">for</span> (<span style=\"color:blue\">int</span> i = 0; i &lt; animatedX.Length; i&#43;&#43;)\r\n            {\r\n                animatedX[i] = 2 * Math.PI * i / animatedX.Length &#43; phase;\r\n                animatedY[i] = Math.Sin(animatedX[i] &#43; phase);\r\n            }\r\n            animatedDataSource.RaiseDataChanged();\r\n        }\r\n    }\r\n</pre>\r\n</div>\r\n<p></p>\r\n",
    "PostedDate": "2012-12-29T08:37:54.84-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]