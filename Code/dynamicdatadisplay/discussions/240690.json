[
  {
    "Id": "544759",
    "ThreadId": "240690",
    "Html": "\r\n<p>Hi,</p>\r\n<p>I'm having trouble with the multiple Y axis in the TwoIndependentAxis sample when the graphs are continously updated. I'm not sure where, exactly, the problem kicks in.</p>\r\n<p>The problem is, the main Y axis seems to scale to contain the injected graph. If main graph is values 0-3 and injected graph is 0-100, the main axis scales to 0-100 so the graph is almost flat. It works when i run the sample as-is. The expected result is\r\n that main (left axis) is ~0-3 and right axis is 0-100&#43;</p>\r\n<p>I added this code to the sample for testing purposes:</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>        ObservableDataSource&lt;Point&gt; horsePowersDS;\r\n        ObservableDataSource&lt;Point&gt; torqueDS;\r\n\r\n<span style=\"color:blue\">void</span> timer_Elapsed(<span style=\"color:blue\">object</span> sender, System.Timers.ElapsedEventArgs e)\r\n        {\r\n            torqueDS.AppendAsync(Dispatcher, <span style=\"color:blue\">new</span> Point(cnt, Math.Pow(cnt, 1.1)));\r\n            horsePowersDS.AppendAsync(Dispatcher,<span style=\"color:blue\">new</span> Point(cnt, (cnt % 3)));\r\n\r\n            cnt&#43;&#43;;\r\n        }\r\n\r\n<span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> Window1_Loaded(<span style=\"color:blue\">object</span> sender, RoutedEventArgs e)\r\n\t\t{\r\n            torqueDS = <span style=\"color:blue\">new</span> ObservableDataSource&lt;Point&gt;();\r\n            horsePowersDS = <span style=\"color:blue\">new</span> ObservableDataSource&lt;Point&gt;();\r\n\r\n            timer = <span style=\"color:blue\">new</span> System.Timers.Timer(100);\r\n\r\n            timer.Elapsed &#43;= <span style=\"color:blue\">new</span> System.Timers.ElapsedEventHandler(timer_Elapsed);\r\n            timer.AutoReset = <span style=\"color:blue\">true</span>;\r\n            timer.Start();\r\n\r\n            plotter.AddLineGraph(horsePowersDS, Colors.Red, 2, <span style=\"color:#a31515\">&quot;HP per RPM&quot;</span>);\r\n            <span style=\"color:blue\">var</span> line = innerPlotter.AddLineGraph(torqueDS, Colors.Blue, 2, <span style=\"color:#a31515\">&quot;Torque per RPM&quot;</span>);\r\n</pre>\r\n</div>\r\n<p>I realize this is not the place for c# support, so if I have done something terribly wrong, just show me the door ;) This way of using AppendAsync seems to drop samples when gui is busy, but this is not my actual implementation and just a sample.</p>\r\n<p>Regards,</p>\r\n<p>Michael</p>\r\n",
    "PostedDate": "2011-01-06T04:59:49.02-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]