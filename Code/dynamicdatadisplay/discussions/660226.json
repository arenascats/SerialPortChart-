[
  {
    "Id": "1490061",
    "ThreadId": "660226",
    "Html": "Hello.\r<br />\n<br />\nI my application I am using a button, which when pressed, several Tabs are created and each tab has an enclosing D3 ChartPlotter. So every time I press the button I delete the previous Tab Items and create  the new ones.\r<br />\n<br />\nThe way I was  closing the tabs was just by using the  \r<br />\n<pre><code>tabControl.Items.Clear();</code></pre>\n\nHowever after a more in-depth research I have found out that the ChartPlotter leave something behind that prevets the Garbage Collector from releasing the memory. So every time I press the button, the old tabs disappear and the new appear BUT the memory of the old tabs is Still in Use.\r<br />\n<br />\nTo help you understand better I will give you a simplified code of how I create and populate the individual tabs inside a for loop of varying size (some time it could iterate 10 times or 5 or 15 or... ) :<br />\n<pre><code>for( Varying Number Of Itterations)\n{\n// Create Anindividual Tab \n                TabItem IndividualResultsTab = new TabItem();\n// Create the individual ChartPlotter\n                ChartPlotter chartPlotter = new ChartPlotter();                \n                HorizontalDateTimeAxis MyAxis2 = new HorizontalDateTimeAxis();\n                chartPlotter.HorizontalAxis = MyAxis2;\n// Create the X and Y data\n                DateTime[] X_ArrayM = new DateTime[somedates];\n                double[] Y_ArrayM = new double[someValues];\n                EnumerableDataSource&lt;DateTime&gt; datesDataSourceM = new EnumerableDataSource&lt;DateTime&gt;(X_ArrayM);\n                datesDataSourceM.SetXMapping(x =&gt; MyAxis.ConvertToDouble(x));\n                datesDataSourceM.AddMapping(ShapeElementPointMarker.ToolTipTextProperty, (DateTime X) =&gt; string.Format(&quot;Date is: {0}&quot;, X);\n// Create Tooltips      \n                CompositeDataSource compositeDataSourceM = datesDataSourceM.Join(Y_ArrayM.AsYDataSource());\n                IPointDataSource pointDataSourceM = compositeDataSourceM;\n// Add Line Chart\n                this.chart = Plotter2DExtensions.AddLineGraph(chartPlotter, pointDataSourceM, new Pen(Brushes.Green, 2), circleElementPointMarker, new PenDescription(&quot;NTI &quot; + MasterNTINum.ToString()));\n\n}</code></pre>\n\nWhen I run the VS2015 memory diagnostic tool I get that the most memory increase in each ittereation is in the following Object Types:<br />\n<ol>\n<li>&quot;RenderData&quot; of the PresentationCore.dll</li>\n<li>&quot;Pen&quot; of the PresentationCore.dll</li>\n<li>&quot;Ellipse&quot;  of the PresentationFramework.dll</li>\n<li>\n&quot;ToolTip&quot; of the PresentationFramework.dll<br />\n</li>\n</ol>\nI believe that there might be some events that I need to detach before I call the tabControl.Items.Clear(); but to be honest I have no idea which events.\r<br />\n<br />\nI am not using any events myself, but there must be some MouseOver events, because I can hover the mouse over the plots and get the data.\r<br />\n<br />\nThe problem is I have no idea how to precede as I am still quite new to C# in general so I cannot quite understand event handling yet.\r<br />\n<br />\nCould you please suggest any ways that I can overcome this memory leak?\r<br />\n<br />\nShould the Reply of Battula32 in the following post answer my problem?\r<br />\n<a href=\"https://dynamicdatadisplay.codeplex.com/discussions/442251\" rel=\"nofollow\">Link to another answer</a>\r<br />\n<br />\nThank you.\r<br />\n<br />\nPS: I cannot use static Tabs, because the number of tabs each time could by varying. So I need to create Tabs inside a for loop, however I am not sure that the way I am doing it is the correct way.<br />\n",
    "PostedDate": "2016-12-19T07:50:50.863-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]