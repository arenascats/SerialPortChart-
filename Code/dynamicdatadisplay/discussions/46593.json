[
  {
    "Id": "155693",
    "ThreadId": "46593",
    "Html": "<p>Hi,<br>\r\nI am trying to implement the HelloWorldSample in F#. I have got to as far as getting an empty plot with just a legend.<br>\r\nIn order to see the ChartPlotter, I've had to change the xaml code from</p>\r\n<p>xmlns:d3=&quot;<a href=\"http://research.microsoft.com/DynamicDataDisplay/1.0\">http://research.microsoft.com/DynamicDataDisplay/1.0</a>&quot; <br>\r\nto<br>\r\nxmlns:d3=&quot;clr-namespace:Microsoft.Research.DynamicDataDisplay;assembly=DynamicDataDisplay&quot;</p>\r\n<p>Currently I only get to see an empty chart, and I wonder what is missing from my implementation.<br>\r\nHere is the complete F# and xaml code.<br>\r\nThanks</p>\r\n<p>&lt;Window<br>\r\n    xmlns=&quot;<a href=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\">http://schemas.microsoft.com/winfx/2006/xaml/presentation</a>&quot;<br>\r\n    xmlns:x=&quot;<a href=\"http://schemas.microsoft.com/winfx/2006/xaml\">http://schemas.microsoft.com/winfx/2006/xaml</a>&quot;<br>\r\n    xmlns:d3=&quot;clr-namespace:Microsoft.Research.DynamicDataDisplay;assembly=DynamicDataDisplay&quot;<br>\r\n    Title=&quot;Simplest plot sample&quot; Height=&quot;243&quot; Width=&quot;416&quot;&gt;</p>\r\n<p>    &lt;d3:ChartPlotter Name=&quot;plotter&quot;&gt;<br>\r\n        &lt;d3:Header TextBlock.FontSize=&quot;20&quot;&gt;<br>\r\n    Very simple chart<br>\r\n  &lt;/d3:Header&gt;<br>\r\n  <br>\r\n  &lt;d3:VerticalAxisTitle&gt;Sine value&lt;/d3:VerticalAxisTitle&gt;<br>\r\n  &lt;d3:HorizontalAxisTitle&gt;Sine argument&lt;/d3:HorizontalAxisTitle&gt;<br>\r\n    &lt;/d3:ChartPlotter&gt;<br>\r\n&lt;/Window&gt;</p>\r\n<p>&nbsp;</p>\r\n<p>#light</p>\r\n<p>(*<br>\r\n#r &quot;DynamicDataDisplay.dll&quot;</p>\r\n<p>#I @&quot;C:\\Program Files\\Reference Assemblies\\Microsoft\\Framework\\v3.0&quot;<br>\r\n#r @&quot;WindowsBase.dll&quot;<br>\r\n#r @&quot;PresentationCore.dll&quot;<br>\r\n#r @&quot;PresentationFramework.dll&quot;<br>\r\n#r &quot;System.Xml.dll&quot;<br>\r\n*)</p>\r\n<p>open System<br>\r\nopen System.IO<br>\r\nopen System.Text<br>\r\nopen System.Windows<br>\r\nopen System.Windows.Controls<br>\r\nopen System.Windows.Data<br>\r\nopen System.Windows.Markup<br>\r\nopen System.Windows.Threading<br>\r\nopen System.Xml<br>\r\nopen System.Collections.Generic<br>\r\nopen System.Threading<br>\r\nopen System.Windows.Media<br>\r\nopen Microsoft.Research.DynamicDataDisplay<br>\r\nopen Microsoft.Research.DynamicDataDisplay.DataSources<br>\r\nopen Microsoft.Research.DynamicDataDisplay.PointMarkers</p>\r\n<p>let createWindow(wFileName: string) = <br>\r\n   using (XmlReader.Create(wFileName)) (fun stream -&gt; (XamlReader.Load(stream)):?&gt; Window ) <br>\r\n   <br>\r\nlet window =    createWindow       &quot;..\\\\..\\\\MainWindow.xaml&quot; <br>\r\nlet plotter = window.FindName(&quot;plotter&quot;) :?&gt;  ChartPlotter</p>\r\n<p>window.Loaded.Add( fun _ -&gt; ()<br>\r\n                            let temp = [| 0..1000|]<br>\r\n                            let x = Array.map (fun i -&gt; (float i) * 0.1) temp<br>\r\n                            let y =Array.map (fun i -&gt; Math.Sin i ) x <br>\r\n                            let xDataSource  = x.AsXDataSource&lt;float&gt;()<br>\r\n                            let yDataSource = y.AsYDataSource&lt;float&gt;()                          <br>\r\n                            let compositeDataSource = xDataSource.Join(yDataSource)                         <br>\r\n                            plotter.AddLineGraph(compositeDataSource, Colors.Goldenrod , 3., &quot;Sine&quot;) |&gt; ignore<br>\r\n                            plotter.FitToView()<br>\r\n                            <br>\r\n                      )</p>\r\n<p>#if COMPILED <br>\r\n[&lt;STAThread()&gt;]<br>\r\ndo <br>\r\n  let app = new Application() in </p>\r\n<p>  app.Run(window) |&gt; ignore <br>\r\n#endif  </p>\r\n",
    "PostedDate": "2009-02-09T00:34:48.637-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "186911",
    "ThreadId": "46593",
    "Html": "Hi,<div><br></div><div>Sorry for making you wait fot a long time)</div><div><br></div><div>Here is the F# code that is working:</div><div><br><div style=\"font-family:consolas;font-size:9pt;color:black;background-image:initial;background-repeat:initial;background-attachment:initial;background-color:white;background-position:initial initial\"><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px\"><span style=\"color:blue\">#light</span></p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px\"> </p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px\"><span style=\"color:blue\">open</span> System</p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px\"><span style=\"color:blue\">open</span> System.IO</p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px\"><span style=\"color:blue\">open</span> System.Text</p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px\"><span style=\"color:blue\">open</span> System.Windows</p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px\"><span style=\"color:blue\">open</span> System.Windows.Controls</p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px\"><span style=\"color:blue\">open</span> System.Windows.Data</p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px\"><span style=\"color:blue\">open</span> System.Windows.Markup</p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px\"><span style=\"color:blue\">open</span> System.Windows.Threading</p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px\"><span style=\"color:blue\">open</span> System.Collections.Generic</p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px\"><span style=\"color:blue\">open</span> System.Threading</p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px\"><span style=\"color:blue\">open</span> System.Windows.Media</p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px\"><span style=\"color:blue\">open</span> Microsoft.Research.DynamicDataDisplay</p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px\"><span style=\"color:blue\">open</span> Microsoft.Research.DynamicDataDisplay.DataSources</p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px\"><span style=\"color:blue\">open</span> Microsoft.Research.DynamicDataDisplay.PointMarkers</p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px\"> </p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px\">[&lt;STAThread&gt;]</p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px\"><span style=\"color:blue\">do</span> </p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px\">    <span style=\"color:blue\">let</span> window = <span style=\"color:blue\">new</span> Window()</p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px\">    <span style=\"color:blue\">let</span> plotter = <span style=\"color:blue\">new</span> ChartPlotter()</p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px\">    window.Content &lt;- plotter</p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px\">    <span style=\"color:blue\">let</span> temp = [|0..1000|]</p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px\">    <span style=\"color:blue\">let</span> x = Array.map (<span style=\"color:blue\">fun</span> i <span style=\"color:blue\">-&gt;</span> (float i) * 0.1) temp</p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px\">    <span style=\"color:blue\">let</span> y = Array.map (<span style=\"color:blue\">fun</span> i <span style=\"color:blue\">-&gt;</span> Math.Sin i ) x </p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px\">    <span style=\"color:blue\">let</span> xDataSource = x.AsXDataSource&lt;float&gt;()</p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px\">    xDataSource.SetXMapping(<span style=\"color:blue\">fun</span> f <span style=\"color:blue\">-&gt;</span> f);</p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px\">    <span style=\"color:blue\">let</span> yDataSource = y.AsYDataSource&lt;float&gt;()                          </p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px\">    yDataSource.SetYMapping(<span style=\"color:blue\">fun</span> f <span style=\"color:blue\">-&gt;</span> f);</p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px\">    <span style=\"color:blue\">let</span> compositeDataSource = xDataSource.Join(yDataSource)                         </p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px\">    plotter.AddLineGraph(compositeDataSource, Colors.Goldenrod , 3., <span style=\"color:maroon\">&quot;Sine&quot;</span>) |&gt; ignore</p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px\">    <span style=\"color:blue\">let</span> app = <span style=\"color:blue\">new</span> Application() <span style=\"color:blue\">in</span></p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px\">    app.Run(window) |&gt; ignore </p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px\"> </p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px\">As you can see, the difference is in calls of Set*Mapping methods of partial data sources. This has to be done with the version of D3 that is published because F# weirdly chooses which extensions method to use.</p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px\"></p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px\">Regards,</p><p style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px\">Mikhail.</p></div></div>",
    "PostedDate": "2009-05-05T05:29:34.957-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]