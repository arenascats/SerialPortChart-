[
  {
    "Id": "251535",
    "ThreadId": "73597",
    "Html": "<p>Hi,</p>\r\n<p>First of all, thanks for the excellent and constantly improving library, I'm using a nightly build (v0.3.4231.0) and ran into the following problem. I have a DataTemplate, where a LineGraph is bound to display some data:</p>\r\n<p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">d3</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">LineGraph</span> <span style=\"color:Red\">DataSource</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{Binding Values}</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">/&gt;</span>\r\n</pre>\r\n</div>\r\n</p>\r\n<p>Normally, the LineGraph is updated when the underlying object changes and the DataTemplate is re-evaluated. But if I move or zoom from the initial view, the LineGraph doesn't update anymore. Other UI elements do show the change, for example I tested with a VerticalLine and it does change correctly all the time:</p>\r\n<p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">d3</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">VerticalLine</span> <span style=\"color:Red\">Value</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{Binding Value}</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">/&gt;</span>\r\n</pre>\r\n</div>\r\n</p>\r\n<p>To correct this, I need to right-click on the view and select 'Fit to View'. It immediately updates to display the correct LineGraph and continues to work until the view is moved or zoomed again.</p>\r\n<p>This error came up within a bigger prototype application and I don't have a repro solution, sorry.</p>\r\n<p>Best regards,</p>\r\n<p>&nbsp;&nbsp; - Jussi</p>",
    "PostedDate": "2009-10-30T04:21:47.643-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "251672",
    "ThreadId": "73597",
    "Html": "<p>Hi Jussi,</p>\r\n<p>Can you please give me a sample of that DataTemplate that contains LineGraph - it may help me to reproduce this error.</p>\r\n<p>Best regards,</p>\r\n<p>Mikhail.</p>",
    "PostedDate": "2009-10-30T10:24:49.083-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "251858",
    "ThreadId": "73597",
    "Html": "<p>Hi Jussi,</p>\r\n<p>I've created a simple application that has:</p>\r\n<p>ObservableCollection&lt;Point&gt;, that is a container for our data,</p>\r\n<p>in plotter.Loaded I've wrapped this collection into dataSource by calling data.AsDataSource() extension method,</p>\r\n<p>and assigned this to window's DataContext.</p>\r\n<p>&nbsp;</p>\r\n<p>In Xaml I have plotter with LineGraph inside, with lineGraph's DataSource property bound to DataContext (by this markup: DataSource=&quot;{Binding}&quot;).</p>\r\n<p>And all worked as it was supposed to work - when collection changes, chart redraws.</p>\r\n<p>That's why I have a question - maybe you are using underlying data collection that does not support notifications about its changes? If this is so, than behavior you've described is right, as at FitToView command being executed chart refetches its data and redraws itself.</p>\r\n<p>Best regards,</p>\r\n<p>Mikhail.</p>",
    "PostedDate": "2009-10-30T20:51:30.66-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "252314",
    "ThreadId": "73597",
    "Html": "<p>Hi Mikhail,</p>\r\n<p>Thank you for looking into this. I don't think I was able to describe my situation clearly enough, so I'll try again.</p>\r\n<p>First of all, you're right, the underlying data source doesn't support change notifications. But that should be okay in my case, I don't really need that. Let me elaborate. I have a master list of objects, some of which (when selected) are visualized in a details panel with a LineGraph. Some are visualized with other UI components. There's a DataTemplateSelector for the details panel, which chooses the DataTemplate to use depending on the selected item's type. Here's XAML for the details panel:</p>\r\n<p><span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">ContentControl</span> <span style=\"color:Red\">HorizontalAlignment</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">Stretch</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">VerticalAlignment</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">Stretch</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">Content</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{Binding Path=SelectedItem}</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">ContentTemplateSelector</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{DynamicResource ComparisonsItemDataTemplateSelector}</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">/&gt;</span></p>\r\n<p>SelectedItem in the Content parameter is bound to the list's selected item. Below is the DataTemplate with LineGraphs, which is bound implicitly to the selected item whenever they are selected in the list and the DataTemplateSelector is evaluated.</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">DataTemplate</span> <span style=\"color:Red\">x:Key</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">ScalarDistributionDataTemplate</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">&gt;</span>\r\n  <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">Grid</span><span style=\"color:Blue\">&gt;</span>\r\n    <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">d3</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">ChartPlotter</span><span style=\"color:Blue\">&gt;</span>\r\n      <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">d3</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">LineGraph</span> <span style=\"color:Red\">Stroke</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">Blue</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">DataSource</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{Binding Distribution.ControlValues}</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">/&gt;</span>\r\n      <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">d3</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">LineGraph </span><span style=\"color:Red\">Stroke</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">Red</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">DataSource</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{Binding Distribution.ComparisonValues}</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">/&gt;</span>\r\n      <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">d3</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">VerticalLine</span> <span style=\"color:Red\">Value</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{Binding Value}</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">/&gt;</span>\r\n    <span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">d3</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">ChartPlotter</span><span style=\"color:Blue\">&gt;</span>\r\n  <span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">Grid</span><span style=\"color:Blue\">&gt;</span>\r\n<span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">DataTemplate</span><span style=\"color:Blue\">&gt;</span>\r\n</pre>\r\n</div>\r\n<p>ControlValues and ComparisonValues are EnumerableDataSource&lt;Point&gt;s and they are replaced (as are the containing objects) whenever the list selection is changed. As I explained in my previous post, everything works fine as long as the user doesn't zoom or move ChartPlotter's view. That is, selecting an item from the master list results in the ScalarDistributionDataTemplate being chosen and the graph being updated correctly. Only if the view is zoomed or moved by the user, LineGraph updates don't happen (VerticalLine is still updated correctly).</p>\r\n<p>One more thing. I put breakpoints to property getters in Value, ControlValues and ComparisonValues (which are displayed in the ChartPlotter). All getters are called once immediately when a new item is selected in the list. Then, VerticalLine is updated immediately in the view, but ControlValues and ComparisonValues are not updated if the chart is not fitted to view. When the chart is fit to view, ControlValues and ComparisonValues getters are not called again, which means that the new values have been stored by the LineGraphs when the selected item was changed, but it just didn't update the view at that time.</p>\r\n<p>I hope my explanation of the situation is not too cryptic...</p>\r\n<p>&nbsp;&nbsp;&nbsp; - Jussi</p>",
    "PostedDate": "2009-11-02T00:42:46.76-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "252327",
    "ThreadId": "73597",
    "Html": "<p>Hi Jussi,</p>\r\n<p>I have reproduced this bug thanks to your explanations and there is a fix:</p>\r\n<p>paste the following code somewhere in the LineGraph class:</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Blue\">protected</span> <span style=\"color:Blue\">override</span> <span style=\"color:Blue\">void</span> OnDataSourceChanged(DependencyPropertyChangedEventArgs args)\r\n{\r\n  filteredPoints = <span style=\"color:Blue\">null</span>;\r\n  <span style=\"color:Blue\">base</span>.OnDataSourceChanged(args);\r\n}\r\n</pre>\r\n</div>\r\n<p>This fix will also be included in the next and following changesets.</p>\r\n<p>Thanks for discovering the bug!</p>\r\n<p>Best regards,</p>\r\n<p>Mikhail.</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2009-11-02T02:03:37.633-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "252362",
    "ThreadId": "73597",
    "Html": "<p>Excellent, thank you for the fix. Keep up the great work!</p>\r\n<p>BR,</p>\r\n<p>&nbsp;&nbsp;&nbsp; - Jussi</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2009-11-02T04:11:58.537-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]