[
  {
    "Id": "234904",
    "ThreadId": "69034",
    "Html": "<p>When plotting some data with NaNs I was having some display issues. This is the code I used to draw only values that are not double.NaN. The NaNs appear as a break in the linegraph.&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>I put this code in the LineGraph class:</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>protected override void OnRenderCore(DrawingContext dc, RenderState state)</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>{</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>if (DataSource == null) return;</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>if (filteredPoints.HasPoints)</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>{</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;if (IsTranslated)</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;<span style=\"white-space:pre\"> </span>dc.PushTransform(new TranslateTransform(Offset.X, Offset.Y));</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;using (StreamGeometryContext context = streamGeometry.Open())</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Point lastPoint = new Point(0, double.NaN);</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;foreach (var point in filteredPoints)</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;if(!double.IsNaN(point.Y) &amp;&amp; double.IsNaN(lastPoint.Y))</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;context.BeginFigure(point, false, false);</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;else if(!double.IsNaN(point.Y))</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;context.LineTo(point, true, true);</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;lastPoint = point;</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;dc.DrawGeometry(null, LinePen, streamGeometry);</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;if (IsTranslated)</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span> &nbsp; &nbsp;dc.Pop();</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>}</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>}</div>\r\n<p>\r\n<p><span style=\"white-space:pre\"> </span>protected override void OnRenderCore(DrawingContext dc, RenderState state)</p>\r\n<p><span style=\"white-space:pre\"> </span>{</p>\r\n<p><span style=\"white-space:pre\"> </span>if (DataSource == null) return;</p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"white-space:pre\"> </span>if (filteredPoints.HasPoints)</p>\r\n<p><span style=\"white-space:pre\"> </span>{</p>\r\n<p>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"white-space:pre\"> </span>if (IsTranslated)</p>\r\n<p>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;<span style=\"white-space:pre\"> </span>dc.PushTransform(new TranslateTransform(Offset.X, Offset.Y));</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"white-space:pre\"> </span>using (StreamGeometryContext context = streamGeometry.Open())</p>\r\n<p>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"white-space:pre\"> </span>{</p>\r\n<p>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"white-space:pre\"> </span>Point lastPoint = new Point(0, double.NaN);</p>\r\n<p>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"white-space:pre\"> </span>foreach (var point in filteredPoints)</p>\r\n<p>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"white-space:pre\"> </span>{</p>\r\n<p>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"white-space:pre\"> </span>if(!double.IsNaN(point.Y) &amp;&amp; double.IsNaN(lastPoint.Y))</p>\r\n<p>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"white-space:pre\"> </span>&nbsp;<span style=\"white-space:pre\"> </span>context.BeginFigure(point, false, false);</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"white-space:pre\"> </span>else if(!double.IsNaN(point.Y))</p>\r\n<p>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"white-space:pre\"> </span>context.LineTo(point, true, true);</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"white-space:pre\"> </span>&nbsp;lastPoint = point;</p>\r\n<p>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"white-space:pre\"> </span>}</p>\r\n<p>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"white-space:pre\"> </span>}</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"white-space:pre\"> </span>dc.DrawGeometry(null, LinePen, streamGeometry);</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"white-space:pre\"> </span>&nbsp;if (IsTranslated)</p>\r\n<p><span style=\"white-space:pre\"> </span> &nbsp; &nbsp;dc.Pop();</p>\r\n<p><span style=\"white-space:pre\"> </span>}</p>\r\n<p><span style=\"white-space:pre\"> </span>}</p>\r\n</p>\r\n<p>&nbsp;</p>\r\n<p>Just thought I would post incase anyone else wanted something like this.&nbsp;</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2009-09-15T14:32:06.407-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "245635",
    "ThreadId": "69034",
    "Html": "<p>Rather good solution, though this can be performed by filters, which will return only those points which coordinates are not NaNs, and also these filters should support line breaks. This feature is included in our plans.</p>\r\n<p>Mikhail.</p>",
    "PostedDate": "2009-10-14T08:23:51.21-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "292598",
    "ThreadId": "69034",
    "Html": "<p>Hi Mikhail,</p>\r\n<p>I'm getting completely blank charts when I have NaNs in my data source.</p>\r\n<p>After reading this thread, I created a Filter to display only points that are not NaN, but I still have the same results (blank chart).</p>\r\n<p>I also tried Kells solution with no success.</p>\r\n<p>It seems that something happens before the filter, because the filter is called and it seems to work (I checked with unit tests and debug). I also noticed that &quot;FilteredPoints.HasPoints&quot; is returning false on the OnRenderCore of LineGraph class.</p>\r\n<p>Here is my filter:</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Blue\">public</span> <span style=\"color:Blue\">class</span> NanFilter : PointsFilterBase {\r\n\t<span style=\"color:Blue\">public</span> <span style=\"color:Blue\">override</span> List&lt;Point&gt; Filter(List&lt;Point&gt; points) {\r\n\t\t<span style=\"color:Blue\">return</span> points.Where(point =&gt; !point.X.Equals(Double.NaN) &amp;&amp; !point.Y.Equals(Double.NaN)).ToList();\r\n\t}\r\n}\r\n</pre>\r\n</div>\r\n<p>I'm using this solution to bind the LineGraphs to the ChartPlotter:&nbsp;<a href=\"http://dynamicdatadisplay.codeplex.com/Thread/View.aspx?ThreadId=78607\">http://dynamicdatadisplay.codeplex.com/Thread/View.aspx?ThreadId=78607</a></p>\r\n<p>Any thoughts?</p>\r\n<p>Cheers,</p>\r\n<p>Andr&eacute; Carlucci</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2010-02-19T04:40:02.577-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "447966",
    "ThreadId": "69034",
    "Html": "<p>To make Kells solution work on the current builds, you also need to change the static method&nbsp;GetViewportBounds in the&nbsp;BoundsHelper class.</p>\r\n<p>GetViewportBounds doesn't check if X &amp; Y values are NaN before doing its min/max calculation.</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:black;background-color:white\">\r\n<pre><span style=\"color:blue\">foreach</span> (Point p <span style=\"color:blue\">in</span> viewportPoints)\r\n{<span style=\"white-space:pre\">\t</span>\r\n<span style=\"color:blue\"><span style=\"white-space:pre\"><span style=\"color:#000000\">\t</span></span>if</span> (!Double.IsNaN(p.X))  <span style=\"color:green\">// Check added by GHD</span>\r\n<span style=\"white-space:pre\">\t</span>{\r\n<span style=\"white-space:pre\">\t\t</span>xMin = Math.Min(xMin, p.X);\r\n                xMax = Math.Max(xMax, p.X);\r\n<span style=\"white-space:pre\">\t</span>}\r\n<span style=\"color:blue\"><span style=\"white-space:pre\"><span style=\"color:#000000\">\t</span></span>if</span> (!Double.IsNaN(p.Y))  <span style=\"color:green\">// Check added by GHD</span>\r\n<span style=\"white-space:pre\">\t</span>{\r\n<span style=\"white-space:pre\">\t\t</span>yMin = Math.Min(yMin, p.Y);\r\n        <span style=\"white-space:pre\">\t</span>yMax = Math.Max(yMax, p.Y);\r\n        }\r\n}\r\n\r\n</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2010-05-26T22:29:09.223-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]