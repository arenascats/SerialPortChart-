[
  {
    "Id": "252871",
    "ThreadId": "73933",
    "Html": "<p>Mikhail,</p>\r\n<p>Is there any way to create manual grid lines and tick marks?</p>\r\n<p>That is ... I would like to tell the D3 component that I want a grid line at these values and I want the gridlines to look like this. And the same for the tick marks.</p>\r\n<p>Can you point me to some sample code, if the chart does support this?</p>\r\n<p>Cory</p>",
    "PostedDate": "2009-11-03T08:16:16.52-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "254328",
    "ThreadId": "73933",
    "Html": "<p>Hi Cory,</p>\r\n<p>if you want different ticks for axisGrid and corresponding axes, than it is impossible now. AxisGrid takes its lines' coordinates from axes.</p>\r\n<p>You can easily send your own ticks to any axis - simply:</p>\r\n<p>1) create your own class, implementing ITicksProvider&lt;TickType&gt;:</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre>        <span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;summary&gt;</span>\r\n\t<span style=\"color:Gray\">///</span><span style=\"color:Green\">\tBase interface for ticks generator.</span>\r\n\t<span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;/summary&gt;</span>\r\n\t<span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;typeparam name=&quot;T&quot;&gt;</span><span style=\"color:Gray\">&lt;/typeparam&gt;</span>\r\n\t<span style=\"color:Blue\">public</span> <span style=\"color:Blue\">interface</span> ITicksProvider&lt;T&gt;\r\n\t{\r\n\t\t<span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;summary&gt;</span>\r\n\t\t<span style=\"color:Gray\">///</span><span style=\"color:Green\"> Generates ticks for given range and preferred ticks count.</span>\r\n\t\t<span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;/summary&gt;</span>\r\n\t\t<span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;param name=&quot;range&quot;&gt;</span><span style=\"color:Green\">The range.&lt;/param&gt;</span>\r\n\t\t<span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;param name=&quot;ticksCount&quot;&gt;</span><span style=\"color:Green\">The ticks count.&lt;/param&gt;</span>\r\n\t\t<span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;returns&gt;</span><span style=\"color:Gray\">&lt;/returns&gt;</span>\r\n\t\tITicksInfo&lt;T&gt; GetTicks(Range&lt;T&gt; range, <span style=\"color:Blue\">int</span> ticksCount);\r\n\t\t<span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;summary&gt;</span>\r\n\t\t<span style=\"color:Gray\">///</span><span style=\"color:Green\"> Decreases the tick count.</span>\r\n\t\t<span style=\"color:Gray\">///</span><span style=\"color:Green\"> Returned value should be later passed as ticksCount parameter to GetTicks method.</span>\r\n\t\t<span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;/summary&gt;</span>\r\n\t\t<span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;param name=&quot;ticksCount&quot;&gt;</span><span style=\"color:Green\">The ticks count.&lt;/param&gt;</span>\r\n\t\t<span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;returns&gt;</span><span style=\"color:Green\">Decreased ticks count.&lt;/returns&gt;</span>\r\n\t\t<span style=\"color:Blue\">int</span> DecreaseTickCount(<span style=\"color:Blue\">int</span> ticksCount);\r\n\t\t<span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;summary&gt;</span>\r\n\t\t<span style=\"color:Gray\">///</span><span style=\"color:Green\"> Increases the tick count.</span>\r\n\t\t<span style=\"color:Gray\">///</span><span style=\"color:Green\"> Returned value should be later passed as ticksCount parameter to GetTicks method.</span>\r\n\t\t<span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;/summary&gt;</span>\r\n\t\t<span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;param name=&quot;ticksCount&quot;&gt;</span><span style=\"color:Green\">The ticks count.&lt;/param&gt;</span>\r\n\t\t<span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;returns&gt;</span><span style=\"color:Green\">Increased ticks count.&lt;/returns&gt;</span>\r\n\t\t<span style=\"color:Blue\">int</span> IncreaseTickCount(<span style=\"color:Blue\">int</span> ticksCount);\r\n\r\n\t\t<span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;summary&gt;</span>\r\n\t\t<span style=\"color:Gray\">///</span><span style=\"color:Green\"> Gets the minor ticks provider, used to generate ticks between each two adjacent ticks.</span>\r\n\t\t<span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;/summary&gt;</span>\r\n\t\t<span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;value&gt;</span><span style=\"color:Green\">The minor provider. If there is no minor provider available, returns null.&lt;/value&gt;</span>\r\n\t\tITicksProvider&lt;T&gt; MinorProvider { <span style=\"color:Blue\">get</span>; }\r\n\t\t<span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;summary&gt;</span>\r\n\t\t<span style=\"color:Gray\">///</span><span style=\"color:Green\"> Gets the mayor provider, used to generate mayor ticks - for example, years for common ticks as months.</span>\r\n\t\t<span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;/summary&gt;</span>\r\n\t\t<span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;value&gt;</span><span style=\"color:Green\">The mayor provider. If there is no mayor provider available, returns null.&lt;/value&gt;</span>\r\n\t\tITicksProvider&lt;T&gt; MayorProvider { <span style=\"color:Blue\">get</span>; }\r\n\r\n\t\t<span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;summary&gt;</span>\r\n\t\t<span style=\"color:Gray\">///</span><span style=\"color:Green\"> Occurs when properties of ticks provider changeds.</span>\r\n\t\t<span style=\"color:Gray\">///</span><span style=\"color:Green\"> Notifies axis to rebuild its view.</span>\r\n\t\t<span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;/summary&gt;</span>\r\n\t\t<span style=\"color:Blue\">event</span> EventHandler Changed;\r\n\t}\r\n</pre>\r\n</div>\r\n<p>or you can create a descendant class of any of this interface existing implementers.</p>\r\n<p>2) pass an instance of this class to axis: axis.TicksProvider = new YourTicksProvider();</p>\r\n<p>That's is how you can have custom axis ticks.</p>\r\n<p>&nbsp;</p>\r\n<p>Best regards,</p>\r\n<p>Mikhail.</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2009-11-06T11:13:16.953-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]