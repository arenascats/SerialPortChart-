[
  {
    "Id": "451825",
    "ThreadId": "215015",
    "Html": "<p>Setup:</p>\r\n<p>I have a chart with a Header label and a VerticalAxisTitle, and some simple CompositeDataSources in it.</p>\r\n<p>&nbsp;</p>\r\n<p>I want to be able to remove all of the line and marker graphs within this chart, and subsequently add new ones to the chart.</p>\r\n<p>I am able to do this just fine if I link the remove to one button, and the add to a separate button.&nbsp; However, if I try to link both the remove, and the add lines to the same button, my Left Margin of my graph will cover half of my axis labels, every other time I click the button.&nbsp; This is obviously really annoying, and I believe it has something to do with the order of the way the UI dispatcher, and the DataSource collection dispatchers are interacting at different speeds and different times.</p>\r\n<p>&nbsp;</p>\r\n<p>This is extremely easy to reproduce, using the &quot;PlotterLayoutSample&quot; project in the samples/v0.2 folder, simply add another MenuItem to refresh the Chart, then call &quot;plotter.RemoveAll(typeof(LineGraph)&quot; followed by creating a simple data source and then calling AddLine on it...here is my refresh function:</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:black;background-color:white\">\r\n<pre>        <span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> UpdateGraphData()\r\n        {\r\n            plotter.Children.RemoveAll(<span style=\"color:blue\">typeof</span>(LineGraph));\r\n            plotter.Children.RemoveAll(<span style=\"color:blue\">typeof</span>(MarkerPointsGraph));\r\n            <span style=\"color:blue\">const</span> <span style=\"color:blue\">int</span> N = 100;\r\n            <span style=\"color:blue\">double</span>[] x = <span style=\"color:blue\">new</span> <span style=\"color:blue\">double</span>[N];\r\n            <span style=\"color:blue\">double</span>[] cs = <span style=\"color:blue\">new</span> <span style=\"color:blue\">double</span>[N];\r\n            <span style=\"color:blue\">double</span>[] sn = <span style=\"color:blue\">new</span> <span style=\"color:blue\">double</span>[N];\r\n\r\n            <span style=\"color:blue\">for</span> (<span style=\"color:blue\">int</span> i = 0; i &lt; N; i++)\r\n            {\r\n                x[i] = i * 0.1;\r\n                cs[i] = Math.Sin(x[i]);\r\n                sn[i] = Math.Cos(x[i]);\r\n            }\r\n\r\n            <span style=\"color:green\">// Add data sources:</span>\r\n            <span style=\"color:green\">// 3 partial data sources, containing each of arrays</span>\r\n            <span style=\"color:blue\">var</span> snDataSource = <span style=\"color:blue\">new</span> EnumerableDataSource&lt;<span style=\"color:blue\">double</span>&gt;(sn);\r\n            snDataSource.SetYMapping(y =&gt; y);\r\n\r\n            <span style=\"color:blue\">var</span> xDataSource = <span style=\"color:blue\">new</span> EnumerableDataSource&lt;<span style=\"color:blue\">double</span>&gt;(x);\r\n            xDataSource.SetXMapping(lx =&gt; lx);\r\n\r\n            <span style=\"color:blue\">var</span> csDataSource = <span style=\"color:blue\">new</span> EnumerableDataSource&lt;<span style=\"color:blue\">double</span>&gt;(cs);\r\n            csDataSource.SetYMapping(y =&gt; y);\r\n\r\n            <span style=\"color:green\">// 2 composite data sources and 2 charts respectively:</span>\r\n            <span style=\"color:green\">// creating composite data source</span>\r\n            CompositeDataSource compositeDataSource1 = <span style=\"color:blue\">new</span> CompositeDataSource(xDataSource, snDataSource);\r\n            <span style=\"color:gray\">///</span><span style=\"color:green\">/ adding graph to plotter</span>\r\n            <span style=\"color:gray\">///</span><span style=\"color:green\">/compositeDataSource1 = (CompositeDataSource)(</span>\r\n            plotter.AddLineGraph(compositeDataSource1,\r\n            <span style=\"color:blue\">new</span> Pen(Brushes.DarkGoldenrod, 3),\r\n            <span style=\"color:blue\">new</span> CirclePointMarker { Size = 10, Fill = Brushes.Red },\r\n            <span style=\"color:blue\">new</span> PenDescription(<span style=\"color:#a31515\">&quot;Sin&quot;</span>));<span style=\"color:green\">//.LineGraph.DataSource);</span>\r\n\r\n            <span style=\"color:green\">// creating composite data source for cs values</span>\r\n            CompositeDataSource compositeDataSource2 = <span style=\"color:blue\">new</span> CompositeDataSource(xDataSource, csDataSource);\r\n            <span style=\"color:green\">// Adding second graph to plotter</span>\r\n            plotter.AddLineGraph(compositeDataSource2,\r\n            <span style=\"color:blue\">new</span> Pen(Brushes.Blue, 3),\r\n            <span style=\"color:blue\">new</span> TrianglePointMarker { Size = 20, Fill = Brushes.Blue },\r\n            <span style=\"color:blue\">new</span> PenDescription(<span style=\"color:#a31515\">&quot;Cos&quot;</span>));<span style=\"color:green\">&nbsp;</span><br>&nbsp;       }\r\n<br><br>Edit: accidentally submitted...<br><br>&nbsp;I tried forcing them to remove and add via the object's dispatcher, but that didn't fix it...and I've thrown multiple plotter.FitToView() calls to no avail...<br><br>Edit2: I appear to have found a workaround...<br><br>Create a list of elements to remove, after adding new ones, remove all of the old ones</pre>\r\n</div>\r\n<p>&nbsp;</p>",
    "PostedDate": "2010-06-04T11:37:10.51-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "496091",
    "ThreadId": "215015",
    "Html": "<p>Can you explain your 'workaround' a bit more; I'm having nearly identically the same problem as you explained here.&nbsp; In my code, the application itself is taking 'realtime' data and every second I need to update the current plot with the new, just-taken, data.&nbsp; To do this, I create an object to hold the 'currentGraph' and then, each second, I remove that graph and add the new one.&nbsp; With every other data display, I get the half-covered vertical axis labels issue you described.</p>\r\n<p>Thanks for the advice!</p>",
    "PostedDate": "2010-09-20T09:36:28.02-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "496097",
    "ThreadId": "215015",
    "Html": "<p>For your issue, i would recommend just using the ObservableDataSource, with the Append function to add another data point.</p>\r\n<p>&nbsp;</p>\r\n<p>My workaround was fairly simple, all I did was loop through all of the elements of the chart and add to a list all of the elements i wanted to delete.&nbsp; In my case, this was just all of the LineGraph and MarkerGraph types.</p>\r\n<p>&nbsp;</p>\r\n<p>After adding those to a list, I added the new lines that I wanted to add.</p>\r\n<p>&nbsp;</p>\r\n<p>Finally, I looped through all of the items in the list of items to remove, and called Chart.Children.Remove(item) so in code:</p>\r\n<p>&nbsp;</p>\r\n<p>\r\n<div style=\"color:black;background-color:white\">\r\n<pre><span style=\"color:blue\">For</span> <span style=\"color:blue\">Each</span> child <span style=\"color:blue\">As</span> IPlotterElement <span style=\"color:blue\">In</span> chart.Children\r\n    <span style=\"color:blue\">If</span> <span style=\"color:blue\">TypeOf</span> child <span style=\"color:blue\">Is</span> LineGraph <span style=\"color:blue\">OrElse</span> _\r\n        <span style=\"color:blue\">TypeOf</span> child <span style=\"color:blue\">Is</span> MarkerPointsGraph <span style=\"color:blue\">Then</span>\r\n                \r\n        RemoveList.Add(child)\r\n    <span style=\"color:blue\">End</span> <span style=\"color:blue\">If</span>\r\n<span style=\"color:blue\">Next</span>\r\n\r\n<span style=\"color:green\">'Add my items</span>\r\n\r\n<span style=\"color:blue\">For</span> <span style=\"color:blue\">Each</span> child <span style=\"color:blue\">In</span> RemoveList\r\n    chart.Children.Remove(child)\r\n<span style=\"color:blue\">Next</span>\r\n</pre>\r\n</div>\r\n</p>",
    "PostedDate": "2010-09-20T09:49:15.113-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "551380",
    "ThreadId": "215015",
    "Html": "\r\n<p>thanks for the answer to this question, i was amazed there is not a removegraph method ...</p>\r\n<p>i've wrapped the method you mention as follows:</p>\r\n<p>&nbsp;<span style=\"color:blue\">private</span>&nbsp;<span style=\"color:blue\">void</span>&nbsp;ClearPlotter()&nbsp;{<br>\r\n<span style=\"color:blue\">&nbsp;&nbsp;&nbsp; foreach</span>&nbsp;(<span style=\"color:blue\">var</span>&nbsp;elem&nbsp;<span style=\"color:blue\">in</span>&nbsp;<span style=\"color:blue\">this</span>.plotter.Children.Where(&nbsp;e&nbsp;=&gt;&nbsp;e&nbsp;<span style=\"color:blue\">is</span>&nbsp;<span style=\"color:#2b91af\">LineGraph</span>&nbsp;||&nbsp;e&nbsp;<span style=\"color:blue\">is</span>&nbsp;<span style=\"color:#2b91af\">MarkerPointsGraph</span>).ToArray())&nbsp;{<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue\">this</span>.plotter.Children.Remove(elem);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;}<br>\r\n}</p>\r\n",
    "PostedDate": "2011-01-18T10:15:14.497-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "552953",
    "ThreadId": "215015",
    "Html": "\r\n<p>There is an extension method that can be used to remove graphs. &nbsp;It's in the extension class\r\n<span style=\"font-family:Consolas,'Courier New',Courier,monospace; white-space:pre\">\r\nPlotterChildrenCollectionExtensions</span></p>\r\n<pre>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Plotter.Children.RemoveAll&lt;<span>LineGraph</span>&gt;();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<pre><span style=\"white-space:pre\">\t</span>Plotter.Children.RemoveAll&lt;<span>MarkerPointsGraph</span>&gt;();</pre>\r\n</pre>\r\n<p>Grant.</p>\r\n",
    "PostedDate": "2011-01-20T19:17:31.56-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "695188",
    "ThreadId": "215015",
    "Html": "<p>Hi all,</p>\r\n<p>&nbsp;</p>\r\n<p>I have encountered the overriding tick issue too.</p>\r\n<p>I fixed it using two changes:</p>\r\n<p>1. when creating CompositeDataSource, first give the y axis data, and then give the x axis data - CompositeDataSource compositeDataSource1 = <span style=\"color: blue;\">new</span> CompositeDataSource(snDataSource, xDataSource);</p>\r\n<p>2. I removed the y axis declaration from the XAML, I only left the X axis because it is a datetime axis.</p>\r\n<p>Worked for me...</p>\r\n<p>Good luck.</p>",
    "PostedDate": "2011-11-08T01:31:54.607-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]