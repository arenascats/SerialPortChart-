[
  {
    "Id": "181669",
    "ThreadId": "53943",
    "Html": "<p style=\"margin:0in 0in 0pt\">Hi,</p>\r\n<p style=\"margin:0in 0in 0pt\">Will this chart supports real time application</p>\r\n<p style=\"margin:0in 0in 0pt\">I am developing some real time chart application. In this I am trying to do some thing like </p>\r\n<p style=\"margin:0in 0in 0pt\">Adding (trying to add) data dynamically in timer</p>\r\n<p style=\"margin:0in 0in 0pt\"> </p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">//Private</span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-size:10pt;color:blue;font-family:'courier new'\">const</span><span style=\"font-size:10pt;font-family:'courier new'\"> <span style=\"color:blue\">int</span> N = 180;</span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-size:10pt;color:blue;font-family:'courier new'\">double</span><span style=\"font-size:10pt;font-family:'courier new'\">[] y = <span style=\"color:blue\">new</span> <span style=\"color:blue\">double</span>[N];</span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-size:10pt;color:#2b91af;font-family:'courier new'\">DateTime</span><span style=\"font-size:10pt;font-family:'courier new'\">[] date = <span style=\"color:blue\">new</span> <span style=\"color:#2b91af\">DateTime</span>[N];</span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-size:10pt;color:#2b91af;font-family:'courier new'\">LineGraph </span><span style=\"font-size:10pt;font-family:'courier new'\">chart;</span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-size:10pt;color:#2b91af;font-family:'courier new'\">Random</span><span style=\"font-size:10pt;font-family:'courier new'\"> rand = <span style=\"color:blue\">new</span> <span style=\"color:#2b91af\">Random</span>();</span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-size:10pt;color:#2b91af;font-family:'courier new'\">EnumerableDataSource</span><span style=\"font-size:10pt;font-family:'courier new'\">&lt;<span style=\"color:blue\">double</span>&gt; ys;</span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-size:10pt;color:#2b91af;font-family:'courier new'\">EnumerableDataSource</span><span style=\"font-size:10pt;font-family:'courier new'\">&lt;<span style=\"color:#2b91af\">DateTime</span>&gt;  xs;</span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-size:10pt;color:#2b91af;font-family:'courier new'\">CompositeDataSource</span><span style=\"font-size:10pt;font-family:'courier new'\"> ds;</span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-size:10pt;color:#2b91af;font-family:'courier new'\">DispatcherTimer</span><span style=\"font-size:10pt;font-family:'courier new'\"> timer = <span style=\"color:blue\">new</span> <span style=\"color:#2b91af\">DispatcherTimer</span>();</span></p>\r\n<p style=\"margin:0in 0in 0pt\"> </p>\r\n<p style=\"margin:0in 0in 0pt\">//Initialize</p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-size:10pt;color:blue;font-family:'courier new'\">void</span><span style=\"font-size:10pt;font-family:'courier new'\"> Window1_Loaded(<span style=\"color:blue\">object</span> sender, <span style=\"color:#2b91af\">RoutedEventArgs</span> e)</span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">{ </span></p>\r\n<p style=\"margin:0in 0in 0pt 0.5in\"><span style=\"font-size:10pt;color:blue;font-family:'courier new'\">for</span><span style=\"font-size:10pt;font-family:'courier new'\"> (<span style=\"color:blue\">int</span> i = 0; i &lt; N; i++)</span></p>\r\n<p style=\"margin:0in 0in 0pt 0.5in\"><span style=\"font-size:10pt;font-family:'courier new'\">{</span></p>\r\n<p style=\"margin:0in 0in 0pt 0.5in\"><span style=\"font-size:10pt;font-family:'courier new'\">y[i] = rand.Next();</span></p>\r\n<p style=\"margin:0in 0in 0pt 0.5in\"><span style=\"font-size:10pt;font-family:'courier new'\">      date[i] = <span style=\"color:#2b91af\">DateTime</span>.Now.AddMinutes(-N + i);</span></p>\r\n<p style=\"margin:0in 0in 0pt 0.5in\"><span style=\"font-size:10pt;font-family:'courier new'\">}</span></p>\r\n<p style=\"margin:0in 0in 0pt 0.5in\"><span style=\"font-size:10pt;font-family:'courier new'\"> </span></p>\r\n<p style=\"margin:0in 0in 0pt 0.5in\"><span style=\"font-size:10pt;font-family:'courier new'\">ys = <span style=\"color:blue\">new</span> <span style=\"color:#2b91af\">EnumerableDataSource</span>&lt;<span style=\"color:blue\">double</span>&gt;(y);</span></p>\r\n<p style=\"margin:0in 0in 0pt 0.5in\"><span style=\"font-size:10pt;font-family:'courier new'\">ys.SetYMapping(_y =&gt; _y);</span></p>\r\n<p style=\"margin:0in 0in 0pt 0.5in\"><span style=\"font-size:10pt;font-family:'courier new'\">xs = <span style=\"color:blue\">new</span> <span style=\"color:#2b91af\">EnumerableDataSource</span>&lt;<span style=\"color:#2b91af\">DateTime</span>&gt;(date);</span></p>\r\n<p style=\"margin:0in 0in 0pt 0.5in\"><span style=\"font-size:10pt;font-family:'courier new'\">xs.SetXMapping(dateAxis.ConvertToDouble);</span></p>\r\n<p style=\"margin:0in 0in 0pt 0.5in\"><span style=\"font-size:10pt;font-family:'courier new'\">ds = <span style=\"color:blue\">new</span> <span style=\"color:#2b91af\">CompositeDataSource</span>(xs, ys);</span></p>\r\n<p style=\"margin:0in 0in 0pt 0.5in\"><span style=\"font-size:10pt;font-family:'courier new'\">chart = plotter.AddLineGraph(ds1,<span style=\"color:#2b91af\">Color</span>.FromRgb(0,0,255),1,<span style=\"color:#a31515\">&quot;Test&quot;</span>);</span></p>\r\n<p style=\"margin:0in 0in 0pt 0.5in\"><span style=\"font-size:10pt;font-family:'courier new'\"> </span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">timer.Tick += OnTimerTick;    </span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">      timer.Start();</span></p>\r\n<p style=\"margin:0in 0in 0pt 0.5in\"><span style=\"font-size:10pt;font-family:'courier new'\">timer.Interval = <span style=\"color:blue\">new</span> <span style=\"color:#2b91af\">TimeSpan</span>(0, 0, 1);</span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">}</span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\"> </span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-size:10pt;color:blue;font-family:'courier new'\">private</span><span style=\"font-size:10pt;font-family:'courier new'\"> <span style=\"color:blue\">void</span> OnTimerTick(<span style=\"color:blue\">object</span> sender, <span style=\"color:#2b91af\">EventArgs</span> e)</span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">{</span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-size:10pt;color:#2b91af;font-family:'courier new'\">      TimeSpan</span><span style=\"font-size:10pt;font-family:'courier new'\"> ts = <span style=\"color:#2b91af\">DateTime</span>.Now.Subtract(endtime);</span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">      <span style=\"color:blue\">int</span> n = (<span style=\"color:blue\">int</span>)ts.TotalSeconds;</span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">      <span style=\"color:blue\">double</span>[] y1 = <span style=\"color:blue\">new</span> <span style=\"color:blue\">double</span>[n];</span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\"> </span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">      <span style=\"color:#2b91af\">DateTime</span>[] date1 = <span style=\"color:blue\">new</span> <span style=\"color:#2b91af\">DateTime</span>[n];</span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">      <span style=\"color:#2b91af\">Random</span> rand = <span style=\"color:blue\">new</span> <span style=\"color:#2b91af\">Random</span>();</span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-size:10pt;color:blue;font-family:'courier new'\">for</span><span style=\"font-size:10pt;font-family:'courier new'\"> (<span style=\"color:blue\">int</span> i = 0; i &lt; n; i++)</span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">{</span></p>\r\n<p style=\"margin:0in 0in 0pt 0.5in\"><span style=\"font-size:10pt;font-family:'courier new'\">Y1[i] = rand.Next();</span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">            Date1[i] = <span style=\"color:#2b91af\">DateTime</span>.Now.AddMinutes(-n + i);</span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">}</span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\"> </span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-size:10pt;color:#2b91af;font-family:'courier new'\">EnumerableDataSource</span><span style=\"font-size:10pt;font-family:'courier new'\">&lt;<span style=\"color:blue\">double</span>&gt; ys1 = <span style=\"color:blue\">new</span> <span style=\"color:#2b91af\">EnumerableDataSource</span>&lt;<span style=\"color:blue\">double</span>&gt;(y1);</span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-size:10pt;color:#2b91af;font-family:'courier new'\">EnumerableDataSource</span><span style=\"font-size:10pt;font-family:'courier new'\">&lt;<span style=\"color:#2b91af\">DateTime</span>&gt;  xs1 = <span style=\"color:blue\">new</span>  <span style=\"color:#2b91af\">EnumerableDataSource</span>&lt;<span style=\"color:#2b91af\">DateTime</span>&gt;(date1);</span></p>\r\n<p style=\"margin:0in 0in 0pt\"> </p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">xs.Join(xs1); // No change</span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">ys.Join(ys1); // No change</span></p>\r\n<p style=\"margin:0in 0in 0pt\"> </p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">ds.DataParts.Concat&lt;<span style=\"color:#2b91af\">CompositeDataSource</span>&gt;((<span style=\"color:#2b91af\">CompositeDataSource</span>)ds1); //Compilation error</span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">}</span></p>\r\n<p style=\"margin:0in 0in 0pt\"> </p>\r\n<p style=\"margin:0in 0in 0pt\">//I saw few properties like “Join” “Concat”, I tried to use these properties, But it didn’t work for me.</p>\r\n<p style=\"margin:0in 0in 0pt\"> </p>\r\n<p style=\"margin:0in 0in 0pt\"> As I read in some forum, I tried to use </p>\r\n<p style=\"margin:0in 0in 0pt\"> </p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-size:10pt;color:blue;font-family:'courier new'\">using</span><span style=\"font-size:10pt;font-family:'courier new'\"> Microsoft.Research.DynamicDataDisplay.Common.Auxiliary;</span></p>\r\n<p style=\"margin:0in 0in 0pt\"> </p>\r\n<p style=\"margin:0in 0in 0pt\">I tried to use the following statements in timer, with these I got the result (with few lines of code change), But this is taking lot of CPU utilization</p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\"> </span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">plotter.Children.Remove(chart);</span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">chart = plotter.AddLineGraph(ds1, <span style=\"color:#2b91af\">Color</span>.FromRgb(0,0,255),1,<span style=\"color:#a31515\">&quot;Test&quot;</span>);</span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\"> </span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span>It would be very nice if you give some solution how to <b>Add or Concat </b> two </span><span style=\"font-size:10pt;color:#2b91af;font-family:'courier new'\">CompositeDataSource</span> etc.</p>\r\n<p style=\"margin:0in 0in 0pt\"> <br>\r\n<br>\r\nRegards<br>\r\nRavi.</p>\r\n",
    "PostedDate": "2009-04-21T02:03:08.737-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "181773",
    "ThreadId": "53943",
    "Html": "Hi Ravi,<br>\r\n<br>\r\nFor real time application see the following code.<br>\r\n<br>\r\nThis is an extract from the Simulation Sample in the first release of DDD. <br>\r\nDon't ask me, I don't know why this sample was not available in the 2nd release :)<br>\r\n<br>\r\nIn a word, You should use the AppendAsync method.<br>\r\n<br>\r\nI hope it will help you.<br>\r\n<br>\r\nKamel<br>\r\n<br>\r\n<br>\r\nPS: How do you manage to post some code with the color? When I do a copy / paste from from VS it doesn't work. Colors are funny...<br>\r\n<br>\r\n<br>\r\n<br>\r\n<br>\r\nusing System;<br>\r\nusing System.Collections.Generic;<br>\r\nusing System.Linq;<br>\r\nusing System.Text;<br>\r\nusing System.Windows;<br>\r\nusing System.Windows.Controls;<br>\r\nusing System.Windows.Data;<br>\r\nusing System.Windows.Documents;<br>\r\nusing System.Windows.Input;<br>\r\nusing System.Windows.Media;<br>\r\nusing System.Windows.Media.Imaging;<br>\r\nusing System.Windows.Navigation;<br>\r\nusing System.Windows.Shapes;<br>\r\nusing System.Threading;<br>\r\nusing Microsoft.Research.DynamicDataDisplay.DataSources;<br>\r\nusing System.Globalization;<br>\r\nusing System.Reflection;<br>\r\nusing System.IO;<br>\r\n<br>\r\nnamespace Simulation<br>\r\n{<br>\r\n&nbsp;&nbsp; &nbsp;<br>\r\n&nbsp;&nbsp;&nbsp; /// &lt;summary&gt;<br>\r\n&nbsp;&nbsp;&nbsp; /// Interaction logic for Window1.xaml<br>\r\n&nbsp;&nbsp;&nbsp; /// &lt;/summary&gt;<br>\r\n&nbsp;&nbsp;&nbsp; public partial class Window1 : Window<br>\r\n&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Three observable data sources. Observable data source contains<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // inside ObservableCollection. Modification of collection instantly modify<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // visual representation of graph. <br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ObservableDataSource&lt;Point&gt; source1 = null;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ObservableDataSource&lt;Point&gt; source2 = null;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ObservableDataSource&lt;Point&gt; source3 = null;<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public Window1()<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; InitializeComponent();<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private void Simulation()<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CultureInfo culture = CultureInfo.InvariantCulture;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Assembly executingAssembly = Assembly.GetExecutingAssembly();<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // load spim-generated data from embedded resource file<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; const string spimDataName = &quot;Simulation.Repressilator.txt&quot;;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; using (Stream spimStream = executingAssembly.GetManifestResourceStream(spimDataName))<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; using (StreamReader r = new StreamReader(spimStream))<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; string line = r.ReadLine();<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; while (!r.EndOfStream)<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; line = r.ReadLine();<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; string[] values = line.Split(',');<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; double x = Double.Parse(values[0], culture);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; double y1 = Double.Parse(values[1], culture);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; double y2 = Double.Parse(values[2], culture);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; double y3 = Double.Parse(values[3], culture);<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Point p1 = new Point(x, y1);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Point p2 = new Point(x, y2);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Point p3 = new Point(x, y3);<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <strong>source1.AppendAsync(Dispatcher, p1);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; source2.AppendAsync(Dispatcher, p2);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; source3.AppendAsync(Dispatcher, p3);</strong><br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //Thread.Sleep(10); // Long-long time for computations...<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private void Window_Loaded(object sender, RoutedEventArgs e)<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Create first source<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; source1 = new ObservableDataSource&lt;Point&gt;();<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Set identity mapping of point in collection to point on plot<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; source1.SetXYMapping(p =&gt; p);<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Create second source<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; source2 = new ObservableDataSource&lt;Point&gt;();<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Set identity mapping of point in collection to point on plot<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; source2.SetXYMapping(p =&gt; p);<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Create third source<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; source3 = new ObservableDataSource&lt;Point&gt;();<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Set identity mapping of point in collection to point on plot<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; source3.SetXYMapping(p =&gt; p);<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Add all three graphs. Colors are not specified and chosen random<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; plotter.AddLineGraph(source1, 2, &quot;Data row 1&quot;);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; plotter.AddLineGraph(source2, 2, &quot;Data row 2&quot;);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; plotter.AddLineGraph(source3, 2, &quot;Data row 3&quot;);<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Force everyting to fit in view<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; plotter.Viewport.FitToView();<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Start computation process in second thread<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Thread simThread = new Thread(new ThreadStart(Simulation));<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; simThread.IsBackground = true;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; simThread.Start();<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n&nbsp;&nbsp;&nbsp; }<br>\r\n}<br>\r\n<br>\r\n",
    "PostedDate": "2009-04-21T07:05:48.55-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "181822",
    "ThreadId": "53943",
    "Html": "Hi,<br>\r\n<br>\r\nPS: How do you manage to post some code with the color? When I do a copy / paste from from VS it doesn't work. Colors are funny...<br>\r\n<br>\r\n<br>\r\nI don't know excatly.<br>\r\n<br>\r\nI copided code in word. I did some modification to the content in word. <br>\r\n<br>\r\nThen I pasted here, It came with colors.<br>\r\n<br>\r\nRegards<br>\r\nRavi\r\n",
    "PostedDate": "2009-04-21T08:50:07.707-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "182238",
    "ThreadId": "53943",
    "Html": "Hi, Kamel and Ravi!<div><br></div><div>Thank you, Kamel, seems like you've given right answer :)</div><div><br></div><div>About SimulationSample - it was deleted from release 0.2 and next by a mistake, and it will be returned to samples. Again, thank you!</div><div><br></div><div>P.S.: I'm using <a href=\"http://www.jtleigh.com/people/colin/software/CopySourceAsHtml/\">http://www.jtleigh.com/people/colin/software/CopySourceAsHtml/</a> extension for Visual Studio to copy source code as HTML.</div><div><br></div><div>Regards,</div><div>Mikhail Brinchuk,</div><div>DynamicDataDisplay Dev team.</div>",
    "PostedDate": "2009-04-22T03:27:19.853-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "182257",
    "ThreadId": "53943",
    "Html": "Hi both Kamel, Mikhail <br>\r\n<br>\r\nThanks for the reply, Its working.<br>\r\nI tested it with some sample application.<br>\r\n<br>\r\nRegards<br>\r\nRavi.\r\n",
    "PostedDate": "2009-04-22T04:09:23.1-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "182420",
    "ThreadId": "53943",
    "Html": "<p>Hi</p>\r\n<p>thank you very much for you all disscussed this question, and thank you kawone that you post this  Simulation Sample which i couldnt have it from this new release, </p>\r\n<p>But there is a problem when i use Kawone's code, just simply copy past to my own .cs file, and there is an error when it prepare UI,it says Value cannot be null.<br>\r\nParameter name: stream<br>\r\nat this   using (StreamReader r = new StreamReader(spimStream)) code. is that missing some stream in the Simulation Sample folder you didnt specify it?</p>\r\n<p>Can you please let me know as i really want to implement this display in real time function,</p>\r\n<p>thank you</p>\r\n<p>Tao</p>\r\n",
    "PostedDate": "2009-04-22T09:32:04.143-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "182469",
    "ThreadId": "53943",
    "Html": "Hi,<br>\r\n<br>\r\nThe following should help.<br>\r\n<br>\r\nXAML code:<br>\r\n<br>\r\n&lt;Window x:Class=&quot;ddd_LiveSample.Window1&quot;<br>\r\n&nbsp;&nbsp;&nbsp; xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;<br>\r\n&nbsp;&nbsp;&nbsp; xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;<br>\r\n&nbsp;&nbsp;&nbsp; xmlns:my=&quot;http://research.microsoft.com/DynamicDataDisplay/1.0&quot;<br>\r\n&nbsp;&nbsp;&nbsp; Title=&quot;Window1&quot; Height=&quot;300&quot; Width=&quot;300&quot;&gt;<br>\r\n&nbsp;&nbsp;&nbsp; &lt;Grid&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;my:ChartPlotter Margin=&quot;12,12.02,12,41&quot; Name=&quot;plotter&quot; &gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;my:ChartPlotter.HorizontalAxis&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;my:HorizontalDateTimeAxis Name=&quot;dateAxis&quot;/&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/my:ChartPlotter.HorizontalAxis&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/my:ChartPlotter&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Button Height=&quot;23&quot; Margin=&quot;98,0,80,12&quot; Name=&quot;button1&quot; VerticalAlignment=&quot;Bottom&quot; Click=&quot;button1_Click&quot;&gt;Begin Simulation!&lt;/Button&gt;<br>\r\n&nbsp;&nbsp;&nbsp; &lt;/Grid&gt;<br>\r\n&lt;/Window&gt;<br>\r\n<br>\r\n<br>\r\n<br>\r\nC# code:<br>\r\n<br>\r\n<div style=\"background:white none repeat scroll 0% 0%;font-family:courier new;font-size:10pt;color:black\">\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;&nbsp;1</span>&nbsp;<span style=\"color:blue\">using</span> System;</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;&nbsp;2</span>&nbsp;<span style=\"color:blue\">using</span> System.Collections.Generic;</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;&nbsp;3</span>&nbsp;<span style=\"color:blue\">using</span> System.Linq;</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;&nbsp;4</span>&nbsp;<span style=\"color:blue\">using</span> System.Text;</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;&nbsp;5</span>&nbsp;<span style=\"color:blue\">using</span> System.Windows;</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;&nbsp;6</span>&nbsp;<span style=\"color:blue\">using</span> System.Windows.Controls;</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;&nbsp;7</span>&nbsp;<span style=\"color:blue\">using</span> System.Windows.Data;</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;&nbsp;8</span>&nbsp;<span style=\"color:blue\">using</span> System.Windows.Documents;</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;&nbsp;9</span>&nbsp;<span style=\"color:blue\">using</span> System.Windows.Input;</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;10</span>&nbsp;<span style=\"color:blue\">using</span> System.Windows.Media;</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;11</span>&nbsp;<span style=\"color:blue\">using</span> System.Windows.Media.Imaging;</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;12</span>&nbsp;<span style=\"color:blue\">using</span> System.Windows.Navigation;</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;13</span>&nbsp;<span style=\"color:blue\">using</span> System.Windows.Shapes;</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;14</span>&nbsp;<span style=\"color:blue\">using</span> Microsoft.Research.DynamicDataDisplay;</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;15</span>&nbsp;<span style=\"color:blue\">using</span> Microsoft.Research.DynamicDataDisplay.DataSources;</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;16</span>&nbsp;<span style=\"color:blue\">using</span> System.Threading;</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;17</span>&nbsp;</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;18</span>&nbsp;<span style=\"color:blue\">namespace</span> ddd_LiveSample</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;19</span>&nbsp;{</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;20</span>&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:gray\">///</span><span style=\"color:green\"> </span><span style=\"color:gray\">&lt;summary&gt;</span></p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;21</span>&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:gray\">///</span><span style=\"color:green\"> Interaction logic for Window1.xaml</span></p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;22</span>&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:gray\">///</span><span style=\"color:green\"> </span><span style=\"color:gray\">&lt;/summary&gt;</span></p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;23</span>&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:blue\">public</span> <span style=\"color:blue\">partial</span> <span style=\"color:blue\">class</span> <span style=\"color:#2b91af\">Window1</span> : <span style=\"color:#2b91af\">Window</span></p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;24</span>&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;25</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style=\"color:blue\">private</span> <span style=\"color:#2b91af\">ObservableDataSource</span>&lt;<span style=\"color:#2b91af\">Trade</span>&gt; _source;</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;26</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style=\"color:blue\">private</span> <span style=\"color:#2b91af\">Random</span> _Random;</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;27</span>&nbsp;</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;28</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style=\"color:blue\">public</span> Window1()</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;29</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; {</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;30</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; InitializeComponent();</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;31</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; _Random = <span style=\"color:blue\">new</span> <span style=\"color:#2b91af\">Random</span>();</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;32</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; EditPlotter();</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;33</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; }</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;34</span>&nbsp;</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;35</span>&nbsp;</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;36</span>&nbsp;</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;37</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style=\"color:blue\">public</span> <span style=\"color:blue\">void</span> EditPlotter()</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;38</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; {</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;39</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; _source = <span style=\"color:blue\">new</span> <span style=\"color:#2b91af\">ObservableDataSource</span>&lt;<span style=\"color:#2b91af\">Trade</span>&gt;();</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;40</span>&nbsp;</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;41</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style=\"color:green\">// Set identity mapping of point in collection to point on plot</span></p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;42</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; _source.SetXMapping(ci =&gt; <span style=\"color:#2b91af\">TimeSpan</span>.FromTicks(ci.Date.Ticks).TotalDays);</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;43</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; _source.SetYMapping(p =&gt; p.Price);</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;44</span>&nbsp;</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;45</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; dateAxis.ConvertToDouble = dt =&gt; <span style=\"color:#2b91af\">TimeSpan</span>.FromTicks(dt.Ticks).TotalDays;</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;46</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; dateAxis.ConvertFromDouble = d =&gt; <span style=\"color:blue\">new</span> <span style=\"color:#2b91af\">DateTime</span>(<span style=\"color:#2b91af\">TimeSpan</span>.FromDays(d).Ticks);</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;47</span>&nbsp;</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;48</span>&nbsp;</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;49</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style=\"color:green\">// Add graph. Colors are not specified and chosen random</span></p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;50</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; plotter.AddLineGraph(_source, 2, <span style=\"color:#a31515\">&quot;Data row 1&quot;</span>);</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;51</span>&nbsp;</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;52</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style=\"color:green\">// Force everyting to fit in view</span></p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;53</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; plotter.Viewport.FitToView();</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;54</span>&nbsp;</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;55</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; }</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;56</span>&nbsp;</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;57</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> button1_Click(<span style=\"color:blue\">object</span> sender, <span style=\"color:#2b91af\">RoutedEventArgs</span> e)</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;58</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; {</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;59</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style=\"color:#2b91af\">Thread</span> thread = <span style=\"color:blue\">new</span> <span style=\"color:#2b91af\">Thread</span>(Simulation);</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;60</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; thread.Start();</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;61</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; thread.IsBackground = <span style=\"color:blue\">true</span>;</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;62</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; }</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;63</span>&nbsp;</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;64</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> Simulation()</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;65</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; {</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;66</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style=\"color:blue\">for</span> (<span style=\"color:blue\">int</span> counter = 0; counter &lt; 100; counter++)</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;67</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; {</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;68</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style=\"color:#2b91af\">Trade</span> trade = <span style=\"color:blue\">new</span> <span style=\"color:#2b91af\">Trade</span>(<span style=\"color:#2b91af\">DateTime</span>.Now, _Random.NextDouble());</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;69</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;<strong> _source.AppendAsync(Dispatcher, trade);</strong></p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;70</span>&nbsp;</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;71</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style=\"color:#2b91af\">Thread</span>.Sleep(100);</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;72</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; }</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;73</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; }</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;74</span>&nbsp;</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;75</span>&nbsp;</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;76</span>&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;77</span>&nbsp;</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;78</span>&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:blue\">public</span> <span style=\"color:blue\">class</span> <span style=\"color:#2b91af\">Trade</span></p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;79</span>&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;80</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style=\"color:blue\">public</span> <span style=\"color:#2b91af\">DateTime</span> Date { <span style=\"color:blue\">get</span>; <span style=\"color:blue\">set</span>; }</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;81</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style=\"color:blue\">public</span> <span style=\"color:blue\">double</span> Price { <span style=\"color:blue\">get</span>; <span style=\"color:blue\">set</span>; }</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;82</span>&nbsp;</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;83</span>&nbsp;</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;84</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style=\"color:blue\">public</span> Trade(<span style=\"color:#2b91af\">DateTime</span> dateTime, <span style=\"color:blue\">double</span> price)</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;85</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; {</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;86</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; Date = dateTime;</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;87</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; Price = price;</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;88</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; }</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;89</span>&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;90</span>&nbsp;</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;91</span>&nbsp;</p>\r\n<p style=\"margin:0px\"><span style=\"color:#2b91af\">&nbsp;&nbsp;&nbsp;92</span>&nbsp;}</p>\r\n</div>\r\n<br>\r\n",
    "PostedDate": "2009-04-22T11:35:00.813-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "182687",
    "ThreadId": "53943",
    "Html": "<p>kawone</p>\r\n<p>Just tried your example, it works fine, very good. but only one thing it wonder me is that possible to make the chart moving when this simulation line goes further, not the one it compress together, in another word, when the simulation line goes more, the chart should start to move in order to keep the line among it self. Like the background is moving, but not the HorizontalDateTimeAxis</p>\r\n<p>just new to this, thanks,</p>\r\n<p></p>\r\n<p>regards</p>\r\n<p>tao</p>\r\n",
    "PostedDate": "2009-04-23T02:01:15.557-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "182734",
    "ThreadId": "53943",
    "Html": "Hi,<br>\r\n<br>\r\n<span style=\"font-size:13px\">\r\n<p>&nbsp;</p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#008000\"><span style=\"font-size:13px;color:#008000\"><span style=\"font-size:13px\">\r\n<p>&nbsp;</p>\r\n</span><span style=\"font-size:13px\">\r\n<p>&nbsp;</p>\r\n</span>\r\n<p>&nbsp;</p>\r\n</span>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#008000\">\r\n<p>&nbsp;</p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-size:10pt;color:blue;font-family:'courier new'\">double</span><span style=\"font-size:10pt;font-family:'courier new'\"> xMin = <span style=\"color:blue\">this</span>.dateAxis.ConvertToDouble(<span style=\"color:#2b91af\">DateTime</span>.Now.AddMinutes(-20));</span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-size:10pt;color:blue;font-family:'courier new'\">double</span><span style=\"font-size:10pt;font-family:'courier new'\"> xMax = <span style=\"color:blue\">this</span>.dateAxis.ConvertToDouble(<span style=\"color:#2b91af\">DateTime</span>.Now.AddMinutes(2));</span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\"> </span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-size:10pt;color:#2b91af;font-family:'courier new'\">Rect</span><span style=\"font-size:10pt;font-family:'courier new'\"> visibleRect = <span style=\"color:blue\">new</span> <span style=\"color:#2b91af\">Rect</span>(xMin, <span style=\"font-size:13px\">-1000000000</span>, xMax - xMin, <span style=\"font-size:13px\">4000000000</span>);<br>\r\n<span style=\"color:blue\">this</span>.plotter.Viewport.Visible = visibleRect;<br>\r\n</span></p>\r\n<p style=\"margin:0in 0in 0pt\"> </p>\r\n<p style=\"margin:0in 0in 0pt\">This will help you.  Call this part of code, for every 2 minutes. This code will fix chart limits as 22 minutes, initially you the chart with 20 minutes, for 2 minutes you use</p>\r\n<p style=\"margin:0in 0in 0pt\"><b><span style=\"font-size:10pt;color:black;font-family:'courier new'\">AppendAsync </span></b>method to fill the chart<br>\r\n<br>\r\n<br>\r\nRegards<br>\r\nRavi.</p>\r\n</span></p>\r\n",
    "PostedDate": "2009-04-23T04:38:47.07-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "237912",
    "ThreadId": "53943",
    "Html": "<p>Hi,</p>\r\n<p>Is there a way to do this horizontal 'scrolling' of the chart in a thread-safe manner.&nbsp; I am updating it in a thread different from the one that has access to the plotter.</p>\r\n<p>Thanks!</p>",
    "PostedDate": "2009-09-23T09:47:55.85-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "237922",
    "ThreadId": "53943",
    "Html": "<p>Have it working - thanks anyway.</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2009-09-23T10:04:36.173-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "578915",
    "ThreadId": "53943",
    "Html": "<p>Hello Guys,</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; When I used <span style=\"color: #2b91af;\">ObservableDataSource&nbsp; </span>it works well for me. But the issue is that for me the datasource is a <span style=\"color: #ff0000;\">List </span>(<span style=\"color: #ff0000;\">List</span>&lt;DateTime&gt; and <span style=\"color: #ff0000;\">List</span>&lt;double&gt;) . So as for a dynamically growing data source, when i use <span style=\"color: #2b91af;\">ObservableDataSource&nbsp; </span>, I have to add data to the <span style=\"color: #2b91af;\">ObservableDataSource&nbsp;</span> &lt;DateTime&gt; and <span style=\"color: #2b91af;\">ObservableDataSource&nbsp;</span> &lt;double&gt; when ever the new values is been added to my <span style=\"color: #ff0000;\">List</span>&lt;DateTime&gt; and <span style=\"color: #ff0000;\">List</span>&lt;double&gt;. And this ends up in duplication of values and ends up in memory issue.</p>\r\n<p>My dataSource looks like this</p>\r\n<p><strong>Parameter </strong>object that contains the following....</p>\r\n<ul>\r\n<li>&nbsp; <span style=\"color: #ff0000;\">List</span>&lt;DateTime&gt; // these values are dynamically growing through a different thread</li>\r\n<li>&nbsp;&nbsp; <span style=\"color: #ff0000;\">List</span>&lt;double&gt;&nbsp;&nbsp; // these values are dynamically growing through a different thread</li>\r\n</ul>\r\n<p>I tried with <strong>EnumerableDataSource </strong>but this fails in adding new values to the chart (<em>draws all the existing lines,&nbsp; but when values are getting added to <span style=\"color: #ff0000;\">List</span>s, it shows no change</em>.) I tried some it make it work by calling '<strong>RaiseDataChanged()</strong>' for the changed DataSources but no progress!!!! I have noticed in some sample codes that uses '<strong>RingArray</strong>' but in my project I have to use '<strong><span style=\"color: #ff0000;\">List</span></strong>', not '<strong>RingArray</strong>'</p>\r\n<p>Please advise...</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2011-03-11T01:23:45.4-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]