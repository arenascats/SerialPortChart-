<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files\microsoft visual studio 9.0\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="1.36">
 <Namespaces>
  <Namespace Name="Microsoft.Research.DynamicDataDisplay.Filters">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2008-10-27 23:23:43Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'Microsoft.Research.DynamicDataDisplay.Filters' with another namespace.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="XamlGeneratedNamespace">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2008-10-27 23:23:43Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'XamlGeneratedNamespace' with another namespace.</Issue>
    </Message>
   </Messages>
  </Namespace>
 </Namespaces>
 <Targets>
  <Target Name="C:\Documents and Settings\Nick\My Documents\Visual Studio 2008\Projects\dynamicdatadisplay\Main\src\DynamicDataDisplay\bin\Debug\DynamicDataDisplay.dll">
   <Modules>
    <Module Name="dynamicdatadisplay.dll">
     <Messages>
      <Message TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210" Status="Active" Created="2008-10-27 23:23:43Z" FixCategory="NonBreaking">
       <Issue Name="NoStrongName" Certainty="95" Level="CriticalError">Sign 'DynamicDataDisplay.dll' with a strong name key.</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="Microsoft.Research.DynamicDataDisplay">
       <Types>
        <Type Name="ColorExtensions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ToHsbColor(System.Windows.Media.Color)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Hsb" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2008-10-27 23:23:43Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Documents and Settings\Nick\My Documents\Visual Studio 2008\Projects\dynamicdatadisplay\Main\src\DynamicDataDisplay\Common\Auxiliary" File="HsbColor.cs" Line="195">Correct the spelling of 'Hsb' in member name 'ColorExtensions.ToHsbColor(this Color)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ColorHelper" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CreateRandomHsbColor()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Hsb" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2008-10-27 23:23:43Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Documents and Settings\Nick\My Documents\Visual Studio 2008\Projects\dynamicdatadisplay\Main\src\DynamicDataDisplay\Common\Auxiliary" File="ColorHelper.cs" Line="29">Correct the spelling of 'Hsb' in member name 'ColorHelper.CreateRandomHsbColor()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CoordinateUtilities" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Transform(System.Collections.Generic.IEnumerable`1&lt;System.Windows.Point&gt;,System.Windows.Rect,System.Windows.Rect)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2008-10-27 23:23:43Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Documents and Settings\Nick\My Documents\Visual Studio 2008\Projects\dynamicdatadisplay\Main\src\DynamicDataDisplay\Common\Auxiliary" File="CoordinateUtils.cs" Line="9">Change 'List&lt;Point&gt;' in 'CoordinateUtilities.Transform(IEnumerable&lt;Point&gt;, Rect, Rect)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HorizontalAxis" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetScreenX(System.Double)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="x" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2008-10-27 23:23:43Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Documents and Settings\Nick\My Documents\Visual Studio 2008\Projects\dynamicdatadisplay\Main\src\DynamicDataDisplay\2D\Axes" File="HorizontalAxis.cs" Line="72">In method 'HorizontalAxis.GetScreenX(double)', consider providing a more meaningful name than parameter name 'x'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HsbColor" Kind="Struct" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Hsb" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2008-10-27 23:23:43Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Hsb' in type name 'HsbColor'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#FromArgb(System.Windows.Media.Color)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Argb" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2008-10-27 23:23:43Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Documents and Settings\Nick\My Documents\Visual Studio 2008\Projects\dynamicdatadisplay\Main\src\DynamicDataDisplay\Common\Auxiliary" File="HsbColor.cs" Line="78">Correct the spelling of 'Argb' in member name 'HsbColor.FromArgb(Color)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToArgb()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Argb" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2008-10-27 23:23:43Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Documents and Settings\Nick\My Documents\Visual Studio 2008\Projects\dynamicdatadisplay\Main\src\DynamicDataDisplay\Common\Auxiliary" File="HsbColor.cs" Line="105">Correct the spelling of 'Argb' in member name 'HsbColor.ToArgb()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ListGenerator" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GeneratePoints(System.Int32,System.Func`2&lt;System.Int32,System.Double&gt;,System.Func`2&lt;System.Int32,System.Double&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="x" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2008-10-27 23:23:43Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning">In method 'ListGenerator.GeneratePoints(int, Func&lt;int, double&gt;, Func&lt;int, double&gt;)', consider providing a more meaningful name than parameter name 'x'.</Issue>
            </Message>
            <Message Id="y" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2008-10-27 23:23:43Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning">In method 'ListGenerator.GeneratePoints(int, Func&lt;int, double&gt;, Func&lt;int, double&gt;)', consider providing a more meaningful name than parameter name 'y'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MathHelper" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CreateRectByPoints(System.Double,System.Double,System.Double,System.Double)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="xmax" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2008-10-27 23:23:43Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Documents and Settings\Nick\My Documents\Visual Studio 2008\Projects\dynamicdatadisplay\Main\src\DynamicDataDisplay\Common\Auxiliary" File="MathHelper.cs" Line="23">In method 'MathHelper.CreateRectByPoints(double, double, double, double)', correct the spelling of 'xmax' in parameter name 'xmax' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="xmin" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2008-10-27 23:23:43Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Documents and Settings\Nick\My Documents\Visual Studio 2008\Projects\dynamicdatadisplay\Main\src\DynamicDataDisplay\Common\Auxiliary" File="MathHelper.cs" Line="23">In method 'MathHelper.CreateRectByPoints(double, double, double, double)', correct the spelling of 'xmin' in parameter name 'xmin' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="ymax" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2008-10-27 23:23:43Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Documents and Settings\Nick\My Documents\Visual Studio 2008\Projects\dynamicdatadisplay\Main\src\DynamicDataDisplay\Common\Auxiliary" File="MathHelper.cs" Line="23">In method 'MathHelper.CreateRectByPoints(double, double, double, double)', correct the spelling of 'ymax' in parameter name 'ymax' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="ymin" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2008-10-27 23:23:43Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Documents and Settings\Nick\My Documents\Visual Studio 2008\Projects\dynamicdatadisplay\Main\src\DynamicDataDisplay\Common\Auxiliary" File="MathHelper.cs" Line="23">In method 'MathHelper.CreateRectByPoints(double, double, double, double)', correct the spelling of 'ymin' in parameter name 'ymin' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ObservableUIElementCollection" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="CollectionsShouldImplementGenericInterface" Category="Microsoft.Design" CheckId="CA1010" Status="Active" Created="2008-10-27 23:23:43Z" FixCategory="NonBreaking">
           <Issue Certainty="90" Level="Error">'ObservableUIElementCollection' appears to be a non-generic, strongly typed collection. Add an implementation to the instance of IList&lt;T&gt; where T is the underlying element type of 'ObservableUIElementCollection'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#ChildAdded" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2008-10-27 23:23:43Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ObservableUIElementCollection.ChildAdded' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ChildRemoved" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2008-10-27 23:23:43Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ObservableUIElementCollection.ChildRemoved' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Plotter" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#SaveScreenshot(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotIndirectlyExposeMethodsWithLinkDemands" Category="Microsoft.Security" CheckId="CA2122" Status="Active" Created="2008-10-27 23:23:43Z" FixCategory="NonBreaking">
             <Issue Certainty="33" Level="CriticalError" Path="C:\Documents and Settings\Nick\My Documents\Visual Studio 2008\Projects\dynamicdatadisplay\Main\src\DynamicDataDisplay\Common" File="Plotter.xaml.cs" Line="145">'Plotter.SaveScreenshot(string)' calls into 'BitmapEncoder.Save(Stream)' which has a LinkDemand. By making this call, 'BitmapEncoder.Save(Stream)' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'Plotter.SaveScreenshot(string)'&#xD;&#xA;   -&gt;'Plotter.SaveScreenshot(string)'</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#System.Windows.Markup.IComponentConnector.Connect(System.Int32,System.Object)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2008-10-27 23:23:43Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Warning">'target', a parameter, is cast to type 'StackPanel' multiple times in method 'Plotter.IComponentConnector.Connect(int, object)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Parameter" Certainty="95" Level="Warning">'target', a parameter, is cast to type 'StackPanel' multiple times in method 'Plotter.IComponentConnector.Connect(int, object)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Parameter" Certainty="95" Level="Warning">'target', a parameter, is cast to type 'StackPanel' multiple times in method 'Plotter.IComponentConnector.Connect(int, object)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PointListExtensions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Transform(System.Collections.Generic.IEnumerable`1&lt;System.Windows.Point&gt;,System.Windows.Rect,System.Windows.Rect)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2008-10-27 23:23:43Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Documents and Settings\Nick\My Documents\Visual Studio 2008\Projects\dynamicdatadisplay\Main\src\DynamicDataDisplay\Common\Auxiliary" File="PointListExtensions.cs" Line="9">Change 'List&lt;Point&gt;' in 'PointListExtensions.Transform(this IEnumerable&lt;Point&gt;, Rect, Rect)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Viewport2D" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#RaiseChildrenChanged()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UseEventsWhereAppropriate" Category="Microsoft.Design" CheckId="CA1030" Status="Active" Created="2008-10-27 23:23:43Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Documents and Settings\Nick\My Documents\Visual Studio 2008\Projects\dynamicdatadisplay\Main\src\DynamicDataDisplay\2D" File="Viewport2d.cs" Line="183">Consider making 'Viewport2D.RaiseChildrenChanged()' an event.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ViewportChanged" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2008-10-27 23:23:43Z" FixCategory="Breaking">
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'ViewportChangedEventHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ViewportChangedEventHandler" Kind="Delegate" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="e" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2008-10-27 23:23:43Z" FixCategory="Breaking">
           <Issue Name="DelegateParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning">In delegate 'ViewportChangedEventHandler', consider providing a more meaningful name than parameter name 'e'.</Issue>
          </Message>
         </Messages>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Microsoft.Research.DynamicDataDisplay.DataSources">
       <Types>
        <Type Name="CompositeDataSource" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#RaiseDataChanged()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UseEventsWhereAppropriate" Category="Microsoft.Design" CheckId="CA1030" Status="Active" Created="2008-10-27 23:23:43Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Documents and Settings\Nick\My Documents\Visual Studio 2008\Projects\dynamicdatadisplay\Main\src\DynamicDataDisplay\2D\DataSources" File="CompositeDataSource.cs" Line="48">Consider making 'CompositeDataSource.RaiseDataChanged()' an event.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="EnumerableDataSourceBase`1" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#RaiseDataChanged()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UseEventsWhereAppropriate" Category="Microsoft.Design" CheckId="CA1030" Status="Active" Created="2008-10-27 23:23:43Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Documents and Settings\Nick\My Documents\Visual Studio 2008\Projects\dynamicdatadisplay\Main\src\DynamicDataDisplay\2D\DataSources" File="EnumerableDataSourceBase.cs" Line="45">Consider making 'EnumerableDataSourceBase&lt;T&gt;.RaiseDataChanged()' an event.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="IPointEnumerator" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetCurrent(System.Windows.Point&amp;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2008-10-27 23:23:43Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Consider a design that does not require that 'p' be a reference parameter.</Issue>
            </Message>
            <Message Id="p" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2008-10-27 23:23:43Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning">In method 'IPointEnumerator.GetCurrent(ref Point)', consider providing a more meaningful name than parameter name 'p'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Microsoft.Research.DynamicDataDisplay.Filters">
       <Types>
        <Type Name="CompositeFilter" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Filter(System.Collections.Generic.List`1&lt;System.Windows.Point&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2008-10-27 23:23:43Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Documents and Settings\Nick\My Documents\Visual Studio 2008\Projects\dynamicdatadisplay\Main\src\DynamicDataDisplay\2D\Filters" File="CompositeFilter.cs" Line="30">Change 'List&lt;Point&gt;' in 'CompositeFilter.Filter(List&lt;Point&gt;)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Documents and Settings\Nick\My Documents\Visual Studio 2008\Projects\dynamicdatadisplay\Main\src\DynamicDataDisplay\2D\Filters" File="CompositeFilter.cs" Line="30">Change 'List&lt;Point&gt;' in 'CompositeFilter.Filter(List&lt;Point&gt;)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="InclinationFilter" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Filter(System.Collections.Generic.List`1&lt;System.Windows.Point&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2008-10-27 23:23:43Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Documents and Settings\Nick\My Documents\Visual Studio 2008\Projects\dynamicdatadisplay\Main\src\DynamicDataDisplay\2D\Filters" File="InclinationFilter.cs" Line="23">Change 'List&lt;Point&gt;' in 'InclinationFilter.Filter(List&lt;Point&gt;)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Documents and Settings\Nick\My Documents\Visual Studio 2008\Projects\dynamicdatadisplay\Main\src\DynamicDataDisplay\2D\Filters" File="InclinationFilter.cs" Line="23">Change 'List&lt;Point&gt;' in 'InclinationFilter.Filter(List&lt;Point&gt;)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="IPointFilter" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Filter(System.Collections.Generic.List`1&lt;System.Windows.Point&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2008-10-27 23:23:43Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;Point&gt;' in 'IPointFilter.Filter(List&lt;Point&gt;)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
             <Issue Certainty="95" Level="Error">Change 'List&lt;Point&gt;' in 'IPointFilter.Filter(List&lt;Point&gt;)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Microsoft.Research.DynamicDataDisplay.Navigation">
       <Types>
        <Type Name="InertialMouseNavigation" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotInitializeUnnecessarily" Category="Microsoft.Performance" CheckId="CA1805" Status="Active" Created="2008-10-27 23:23:43Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="C:\Documents and Settings\Nick\My Documents\Visual Studio 2008\Projects\dynamicdatadisplay\Main\src\DynamicDataDisplay\2D\Navigation" File="InertialMouseNavigation.cs" Line="103">'InertialMouseNavigation.InertialMouseNavigation()' initializes field 'InertialMouseNavigation.isDragging' of type 'bool' to false. Remove this initialization because it will be done automatically by the runtime.</Issue>
             <Issue Certainty="90" Level="Warning" Path="C:\Documents and Settings\Nick\My Documents\Visual Studio 2008\Projects\dynamicdatadisplay\Main\src\DynamicDataDisplay\2D\Navigation" File="InertialMouseNavigation.cs" Line="102">'InertialMouseNavigation.InertialMouseNavigation()' initializes field 'InertialMouseNavigation.isZooming' of type 'bool' to false. Remove this initialization because it will be done automatically by the runtime.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Microsoft.Research.DynamicDataDisplay.PointMarkers">
       <Types>
        <Type Name="MarkerRenderer" Kind="Delegate" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Renderer" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2008-10-27 23:23:43Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Renderer' in type name 'MarkerRenderer'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="PointMarker" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#FromRenderer(Microsoft.Research.DynamicDataDisplay.PointMarkers.MarkerRenderer)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Renderer" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2008-10-27 23:23:43Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Documents and Settings\Nick\My Documents\Visual Studio 2008\Projects\dynamicdatadisplay\Main\src\DynamicDataDisplay\2D\PointMarkers" File="PointMarker.cs" Line="27">Correct the spelling of 'Renderer' in member name 'PointMarker.FromRenderer(MarkerRenderer)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="renderer" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2008-10-27 23:23:43Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Documents and Settings\Nick\My Documents\Visual Studio 2008\Projects\dynamicdatadisplay\Main\src\DynamicDataDisplay\2D\PointMarkers" File="PointMarker.cs" Line="27">In method 'PointMarker.FromRenderer(MarkerRenderer)', correct the spelling of 'renderer' in parameter name 'renderer' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#op_Implicit(Microsoft.Research.DynamicDataDisplay.PointMarkers.MarkerRenderer):Microsoft.Research.DynamicDataDisplay.PointMarkers.PointMarker" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="renderer" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2008-10-27 23:23:43Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Documents and Settings\Nick\My Documents\Visual Studio 2008\Projects\dynamicdatadisplay\Main\src\DynamicDataDisplay\2D\PointMarkers" File="PointMarker.cs" Line="22">In method 'PointMarker.implicit operator PointMarker(MarkerRenderer)', correct the spelling of 'renderer' in parameter name 'renderer' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210">
   <Name>Assemblies should have valid strong names</Name>
   <Description>Either the assembly has no strong name, an invalid one, or the strong name is valid only because of the computer configuration. The assembly should not be deployed in this state. The most common causes of this are: 1) The assembly's contents were modified after it was signed. 2) The signing process failed. 3) The assembly was delay-signed. 4) A registry key existed that allowed the check to pass (where it would not have otherwise).</Description>
   <Resolution Name="NoStrongName">Sign {0} with a strong name key.</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/library/ms182127(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="DesignRules.dll" Version="9.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020">
   <Name>Avoid namespaces with few types</Name>
   <Description>A namespace should generally have more than five types.</Description>
   <Resolution Name="Default">Consider merging the types defined in '{0}' with another namespace.</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/library/ms182130(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Warning</MessageLevel>
   <File Name="DesignRules.dll" Version="9.0.0.0" />
  </Rule>
  <Rule TypeName="CollectionsShouldImplementGenericInterface" Category="Microsoft.Design" CheckId="CA1010">
   <Name>Collections should implement generic interface</Name>
   <Description>Non-generic strongly typed collections should implement one of the generic collection interfaces. This will allow better integration of the collection with generic API.</Description>
   <Resolution Name="Default">{0} appears to be a non-generic, strongly typed collection. Add an implementation to the instance of {1}&lt;T&gt; where T is the underlying element type of {0}.</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/library/ms182132(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="DesignRules.dll" Version="9.0.0.0" />
  </Rule>
  <Rule TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009">
   <Name>Declare event handlers correctly</Name>
   <Description>By convention, .NET events have two parameters that specify the event sender and event data. Event handler signatures should follow this form: void MyEventHandler(object sender, EventArgs e). The 'sender' parameter is always of type System.Object, even if it is possible to employ a more specific type. The 'e' parameter is always of type System.EventArgs. Events that do not provide event data should use the System.EventHandler delegate type. Event handlers return void so that they can send each event to multiple target methods. Any value returned by a target would be lost after the first call.</Description>
   <Resolution Name="Second">Declare the second parameter of {0} as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/library/ms182133(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="DesignRules.dll" Version="9.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800">
   <Name>Do not cast unnecessarily</Name>
   <Description>Avoid duplicate casts where possible, since there is a cost associated with them.</Description>
   <Resolution Name="Parameter">{0}, a parameter, is cast to type {1} multiple times in method {2}. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant {3} instruction.</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/library/ms182271(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="PerformanceRules.dll" Version="9.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051">
   <Name>Do not declare visible instance fields</Name>
   <Description>Instance fields that are visible outside of the type that declares them, limit your ability to change the implementation details for those data items. Use properties instead. They do not compromise usability or performance and they do provide flexibility in that they conceal the implementation details of the underlying data.</Description>
   <Resolution Name="Default">Because field {0} is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/library/ms182141(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="DesignRules.dll" Version="9.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002">
   <Name>Do not expose generic lists</Name>
   <Description>Do not expose List&lt;T&gt; in object models. Use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt; instead. List&lt;T&gt; is meant to be used from implementation, not in object model API. List&lt;T&gt; is optimized for performance at the cost of long term versioning. For example, if you return List&lt;T&gt; to the client code, you will not ever be able to receive notifications when client code modifies the collection.</Description>
   <Resolution Name="Default">Change {0} in {1} to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/library/ms182142(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="DesignRules.dll" Version="9.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotIndirectlyExposeMethodsWithLinkDemands" Category="Microsoft.Security" CheckId="CA2122">
   <Name>Do not indirectly expose methods with link demands</Name>
   <Description>Do not wrap a method protected by a LinkDemand with a method that does not perform a security check. A LinkDemand checks the permissions of the immediate caller rather than checking the permissions of all callers in the call stack. In this case, the permissions of the wrapper method will be checked. If the wrapper method does not, itself, check the permissions of callers higher in the call stack, malicious code might be able to execute the wrapped function even though it lacks permission to do so.</Description>
   <Resolution Name="Default">{0} calls into {1} which has a LinkDemand. By making this call, {1} is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: {2}</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/library/ms182303(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="33">CriticalError</MessageLevel>
   <File Name="SecurityRules.dll" Version="9.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotInitializeUnnecessarily" Category="Microsoft.Performance" CheckId="CA1805">
   <Name>Do not initialize unnecessarily</Name>
   <Description>Do not make initializations that have already been done by the runtime.</Description>
   <Resolution Name="Default">{0} initializes field {1} of type {2} to {3}. Remove this initialization because it will be done automatically by the runtime.</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/library/ms182274(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Warning</MessageLevel>
   <File Name="PerformanceRules.dll" Version="9.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045">
   <Name>Do not pass types by reference</Name>
   <Description>Although there are legitimate times to use reference parameters, such use frequently indicates a design that does not conform to the design guidelines for managed code.</Description>
   <Resolution Name="Default">Consider a design that does not require that {0} be a reference parameter.</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/library/ms182146(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="DesignRules.dll" Version="9.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704">
   <Name>Identifiers should be spelled correctly</Name>
   <Description>The individual words that make up an identifier should not be abbreviated and should be spelled correctly. If this rule generates a false positive on a term that should be recognized, add the word to the FxCop custom dictionary.</Description>
   <Resolution Name="DelegateParameterMoreMeaningfulName">In delegate {0}, consider providing a more meaningful name than parameter name {1}.</Resolution>
   <Resolution Name="Member">Correct the spelling of '{0}' in member name {1} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="MemberParameter">In method {0}, correct the spelling of '{1}' in parameter name {2} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="MemberParameterMoreMeaningfulName">In method {0}, consider providing a more meaningful name than parameter name {1}.</Resolution>
   <Resolution Name="Type">Correct the spelling of '{0}' in type name {1}.</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/library/bb264492(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="NamingRules.dll" Version="9.0.0.0" />
  </Rule>
  <Rule TypeName="UseEventsWhereAppropriate" Category="Microsoft.Design" CheckId="CA1030">
   <Name>Use events where appropriate</Name>
   <Description>A method name suggestive of event functionality was encountered.</Description>
   <Resolution Name="Default">Consider making {0} an event.</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/library/ms182177(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="DesignRules.dll" Version="9.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Category</String>
  <String Key="Certainty">Certainty</String>
  <String Key="CollapseAll">Collapse All</String>
  <String Key="CheckId">Check Id</String>
  <String Key="Error">Error</String>
  <String Key="Errors">error(s)</String>
  <String Key="ExpandAll">Expand All</String>
  <String Key="Help">Help</String>
  <String Key="Line">Line</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Location not stored in Pdb]</String>
  <String Key="Project">Project</String>
  <String Key="Resolution">Resolution</String>
  <String Key="Rule">Rule</String>
  <String Key="RuleFile">Rule File</String>
  <String Key="RuleDescription">Rule Description</String>
  <String Key="Source">Source</String>
  <String Key="Status">Status</String>
  <String Key="Target">Target</String>
  <String Key="Warning">Warning</String>
  <String Key="Warnings">warning(s)</String>
  <String Key="ReportTitle">Code Analysis Report</String>
 </Localized>
</FxCopReport>
